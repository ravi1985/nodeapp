{"version":3,"sources":["assets/images/no-image.png","actions/attributes/index.jsx","actions/fontfamily/index.jsx","actions/fontsize/index.jsx","actions/fontcolor/index.jsx","components/form/TypeSelection.jsx","components/files/ImageUploadMultilple.jsx","components/form/MultiSelect.jsx","containers/Attributes/Type/text.jsx","containers/Attributes/Type/clipart.jsx","containers/Attributes/Type/image.jsx","containers/Attributes/Forms.jsx","components/form/switchtoggle.jsx","components/files/ImageUpload.jsx","components/form/SubmitButton.jsx","actions/cliparts/index.jsx","components/form/SimpleSelect.jsx","components/design/Popup.jsx"],"names":["module","exports","__webpack_require__","p","save","data","method","url","Object","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","status","modelName","idKey","promize_attribute_id","created_date","updated_date","types","concat","ATTRIBUTE","PENDING","FULFILLED","REJECTED","payload","receiveType","saveAttributeValues","promize_attribute_values_id","ATTRIBUTE_VALUES","saveAttributeClipartValues","promize_attribute_clipart_values_id","ATTRIBUTE_CLIPART_VALUES","saveAttributeUploadImageValues","promize_attribute_image_values_id","ATTRIBUTE_UPLOAD_IMAGE_VALUES","saveTextValues","promize_attribute_text_values_id","TEXT_VALUES","saveAttributeValuesImage","ATTRIBUTE_VALUES_IMAGES","deleteAttributeValuesImage","promize_images_id","ATTRIBUTE_VALUES_IMAGES_DELETE","deleteAttributeValues","ATTRIBUTE_VALUES_DELETE","get","id","getAllAttributes","ATTRIBUTES","app","DOMAIN_ID","uploadOptionImage","file","typeName","name","formData","FormData","append","IMAGE_UPLOAD","requestBodyType","font_id","FONT","uploadFontFile","FILE_UPLOAD","getAllFonts","domain_id","FONTS","font_size","parseInt","font_size_id","FONT_SIZE","getAllFontSizes","FONT_SIZES","promize_font_color_id","FONT_COLOR","getAllFontColors","FONT_COLORS","TypeSelection","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","bind","assertThisInitialized","e","onChange","form","handleFieldsChange","raido_1","react_default","a","createElement","Fragment","className","disabled","String","value","checkValue","htmlFor","fieldName","type","data-name","dataName","data-validation-name","labelName","checked","class","spanLabel","raido_2","raido_3","raido_4","validation","separate","state","inputErrors","message","Component","ImageUploadMultilple","highlight","setImageKey","change","onDrop","onDragOver","onDragLeave","callBack","imageType","handleFileSelect","target","acceptedFiles","handleFileDrop","files","setState","index","preventDefault","deleteImage","_this2","dist_es","_ref","getRootProps","getInputProps","assign","map","image_type","key","src","APP_IMAGE_BASE_URL","image_url","onClick","stopPropagation","length","noImages","connect","image","CustomOption","innerRef","innerProps","ref","topLabel","subLabel","MultiSelect","react_select_browser_esm","closeMenuOnSelect","options","components","Option","isMulti","React","Text","selected_font_family","selected_font_size","selected_font_color","fontsList","fontSizes","fontColors","handleFontsSelect","handleFontColor","handleFontSize","dispatch","_this$state","fonts","isFetching","isError","fontsizes","fontcolors","response","lists","color","colors","label","font_color_name","font_color_code","push","font_color_ids","fields","promize_attribute_text_values","fontColorArray","split","fontId","fontColor","_","find","size","sizes","font_size_ids","fontSizeArray","fontSize","font","fontlist","font_name","console","log","font_ids","fontIdArray","fontFamily","newObj","currentComponent","temp_arr","fontid","ids","toString","join","fontsize","fontcolor","attributeType","_this3","input","text_name","handleTextFields","text_sku","text_price","inputType","form_MultiSelect","selected","SimpleSelect","optionText","optionValue","emptyOptionText","default_font_family","default_font_size","default_color","attributeValues","Clipart","promize_attribute_clipart_values","clipart_name","clipart_price","clipart_sku","promize_domain_clipart_category_id","clipartList","selectedClipartList","handleClipartFieldChange","handleClipartsSelect","getAllCliparts","cliparts","clipart","clipart_category_name","clipIdArray","clipId","clips","selected_ids","selectedOption","Image","handleImageFieldChange","promize_attribute_image_values","image_name","image_code","image_price","image_sku","min_upload_size","max_upload_size","image_format","initialState","attribute_name","attribute_code","attribute_type","promize_attribute_values","isEdit","attribute_saved","Forms","closePopup","popup","option_name","promize_images","option_thumbnail_image","option_code","option_value","option_sku","option_price","imageKey","enableEditAttribute","handleFieldChange","handleAddOption","setWrapperRef","handleClickOutside","showOptionContentPopup","handleSaveAttributeValuesImage","handleInputFieldBlur","saveForm","imageUpload","saveData","path","records","attributeValuesImages","promizeImages","handleUploadedImage","obj","undefined","arrayIndex","$","show","hide","foundIndex","findIndex","attr_obj","hideOptionContentPopup","toastr","error","splice","_this4","style","display","onBlur","files_ImageUploadMultilple","ImageUpload","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","removeClass","addClass","clipart_values","success","history","image_values","text_values","_this5","selected_index","attr_index","attribute_values","_this6","Popup","submitButton","cancel","onSubmit","handleSubmit","title","switchtoggle","statusValue","first","second","form_TypeSelection","third","fourth","SubmitButton","text","Type_image","colSpan","img_data","alt","editAttributeValues","Type_text","react_router_dom","to","optionContent","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","changeButton","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleFieldsChangeByPlugin","changeMethod","react__WEBPACK_IMPORTED_MODULE_6___default","classWrapper","setDate","react_dropzone__WEBPACK_IMPORTED_MODULE_10__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","CLIPART","saveClipartValues","promize_clipart_category_images_id","CLIPART_VALUES","CLIPARTS","uploadClipartImage","deleteClipartValues","CLIPART_VALUES_DELETE","emptyOptionValue","rest","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","isUndefined","react__WEBPACK_IMPORTED_MODULE_1___default","option","content","cancelButton","submit"],"mappings":"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","file":"static/js/2.1a83b31f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.f7f22d45.png\";","import { ATTRIBUTE, ATTRIBUTES, ATTRIBUTE_VALUES, ATTRIBUTE_VALUES_DELETE, ATTRIBUTE_VALUES_IMAGES, ATTRIBUTE_VALUES_IMAGES_DELETE, IMAGE_UPLOAD, TEXT_VALUES, TEXT_VALUES_DELETE,ATTRIBUTE_CLIPART_VALUES ,PENDING, FULFILLED, REJECTED, ATTRIBUTE_UPLOAD_IMAGE_VALUES } from \"../../utility/constants\";\nimport { app } from \"../../config/app\";\n\nexport function save(data){\n    let method = 'POST', url='createRecord';\n    data = {\n        ...data,\n        status : data.status ? 1 : 0,\n        modelName:\"promize_attribute\",\n        idKey:\"promize_attribute_id\"\n    }\n\tif(data.promize_attribute_id){\n        method = 'PUT';\n        url= 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE}_${PENDING}`, `${ATTRIBUTE}_${FULFILLED}`, `${ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveAttributeValues(data){\n    let method = 'POST',  url= 'createRecord';\n    data = {\n        ...data,\n        modelName:\"promize_attribute_values\",\n        idKey:\"promize_attribute_values_id\"\n    }\n\tif(data.promize_attribute_values_id){\n        method = 'PUT';\n        url = 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE_VALUES}_${PENDING}`, `${ATTRIBUTE_VALUES}_${FULFILLED}`, `${ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveAttributeClipartValues(data){\n    let method = 'POST',  url= 'createRecord';\n    data = {\n        ...data,\n        modelName:\"promize_attribute_clipart_values\",\n        idKey:\"promize_attribute_clipart_values_id\"\n    }\n\tif(data.promize_attribute_clipart_values_id){\n        method = 'PUT';\n        url = 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE_CLIPART_VALUES}_${PENDING}`, `${ATTRIBUTE_CLIPART_VALUES}_${FULFILLED}`, `${ATTRIBUTE_CLIPART_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveAttributeUploadImageValues(data){\n    let method = 'POST',  url= 'createRecord';\n    data = {\n        ...data,\n        modelName:\"promize_attribute_image_values\",\n        idKey:\"promize_attribute_image_values_id\"\n    }\n\tif(data.promize_attribute_image_values_id){\n        method = 'PUT';\n        url = 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE_UPLOAD_IMAGE_VALUES}_${PENDING}`, `${ATTRIBUTE_UPLOAD_IMAGE_VALUES}_${FULFILLED}`, `${ATTRIBUTE_UPLOAD_IMAGE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTextValues(data) {\n    let method = 'POST', url = \"createRecord\";\n    data = {\n        ...data,\n        modelName: \"promize_attribute_text_values\",\n        idKey: \"promize_attribute_text_values_id\"\n    }\n    if (data.promize_attribute_text_values_id) {\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${TEXT_VALUES}_${PENDING}`, `${TEXT_VALUES}_${FULFILLED}`, `${TEXT_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function saveAttributeValuesImage(data){\n    let method = 'POST';\n    data = {\n        ...data,\n        modelName:\"promize_images\",\n        idKey:\"promize_images_id\"\n    }\n    return {\n        types: [`${ATTRIBUTE_VALUES_IMAGES}_${PENDING}`, `${ATTRIBUTE_VALUES_IMAGES}_${FULFILLED}`, `${ATTRIBUTE_VALUES_IMAGES}_${REJECTED}`],\n        method: method,\n        url: 'createRecord',\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function deleteAttributeValuesImage(data){\n    let method = 'DELETE';\n    data = {\n        ...data,\n        modelName:\"promize_images\",\n        idKey:\"promize_images_id\"\n    }\n\tif(data.promize_images_id){\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE_VALUES_IMAGES_DELETE}_${PENDING}`, `${ATTRIBUTE_VALUES_IMAGES_DELETE}_${FULFILLED}`, `${ATTRIBUTE_VALUES_IMAGES_DELETE}_${REJECTED}`],\n        method: method,\n        url: 'deleteRecord',\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function deleteAttributeValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_attribute_values\",\n        idKey:\"promize_attribute_values_id\"\n    }\n\tif(data.promize_attribute_values_id){\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${ATTRIBUTE_VALUES_DELETE}_${PENDING}`, `${ATTRIBUTE_VALUES_DELETE}_${FULFILLED}`, `${ATTRIBUTE_VALUES_DELETE}_${REJECTED}`],\n        method: 'DELETE',\n        url: 'deleteRecord',\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function get(id){\n\tconst method = 'GET';\n    return {\n        types: [`${ATTRIBUTE}_${PENDING}`, `${ATTRIBUTE}_${FULFILLED}`, `${ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: 'getAttributeWithPK/'+id,\n        data: {},\n        payload: {receiveType:'editData'}\n    }\n}\n\nexport function getAllAttributes() {\n    const request = {\n        types: [`${ATTRIBUTES}_${PENDING}`, `${ATTRIBUTES}_${FULFILLED}`, `${ATTRIBUTES}_${REJECTED}`],\n        method: 'GET',\n        url: 'getAllAttributes/'+app.DOMAIN_ID,\n    }\n\n    return request;\n}\n\nexport function getAttributeLists() {\n    const request = {\n        types: [`${ATTRIBUTES}_${PENDING}`, `${ATTRIBUTES}_${FULFILLED}`, `${ATTRIBUTES}_${REJECTED}`],\n        method: 'GET',\n        url: 'getAttributeLists/'+app.DOMAIN_ID,\n    }\n\n    return request;\n}\n\nexport function uploadOptionImage(file,typeName,name){\n\tconst formData = new FormData();\n    formData.append('file',file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType:'FormData',\n        url: 'uploadOptionImage',\n        data: formData,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function changeStatus(actionDetails){\n\tlet {url, actionType, params} = actionDetails;\n    params.status = (params.status == 1) ? 0 : 1;\n    delete params.created_date;\n    delete params.updated_date;\n    params = {\n        ...params,\n        modelName:\"promize_attribute\",\n        idKey:\"promize_attribute_id\"\n    }\n\treturn {\n\t\ttypes: [`${actionType}_${PENDING}`, `${actionType}_${FULFILLED}`, `${actionType}_${REJECTED}`],\n\t\tmethod: 'PUT',\n\t\turl: `${url}`,\n\t\tpayload: {},\n\t\tdata: params\n\t}\n}\n\n","import { FONT, FONTS, PENDING,FILE_UPLOAD, FULFILLED, REJECTED } from \"../../utility/constants\";\nimport { app } from \"../../config/app\";\n\nexport function save(data) {\n    let method = 'POST', url = \"createRecord\";\n    data = {\n        ...data,\n        modelName: \"promize_fonts\",\n        idKey: \"font_id\"\n    }\n    if (data.font_id) {\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${FONT}_${PENDING}`, `${FONT}_${FULFILLED}`, `${FONT}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function uploadFontFile(file, typeName, name) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${FILE_UPLOAD}_${PENDING}`, `${FILE_UPLOAD}_${FULFILLED}`, `${FILE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadFontFile',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function getAllFonts() {\n    let data = {\n        modelName: \"promize_fonts\",\n        idKey: \"font_id\",\n        domain_id: app.DOMAIN_ID\n    }\n    const request = {\n        types: [`${FONTS}_${PENDING}`, `${FONTS}_${FULFILLED}`, `${FONTS}_${REJECTED}`],\n        method: 'POST',\n        url: 'getAllRecords',\n        data: data,\n    }\n\n    return request;\n}","import { FONT_SIZE,FONT_SIZES,PENDING, FULFILLED, REJECTED } from \"../../utility/constants\";\nimport { app } from \"../../config/app\";\n\nexport function save(data) {\n    let method = 'POST', url = \"createRecord\";\n    data = {\n        ...data,\n        font_size : parseInt(data.font_size),\n        modelName: \"promize_font_size\",\n        idKey: \"font_size_id\"\n    }\n    if (data.font_size_id) {\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${FONT_SIZE}_${PENDING}`, `${FONT_SIZE}_${FULFILLED}`, `${FONT_SIZE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function getAllFontSizes() {\n    let data = {\n        modelName: \"promize_font_size\",\n        idKey: \"font_size_id\",\n        domain_id: app.DOMAIN_ID\n    }\n    const request = {\n        types: [`${FONT_SIZES}_${PENDING}`, `${FONT_SIZES}_${FULFILLED}`, `${FONT_SIZES}_${REJECTED}`],\n        method: 'POST',\n        url: 'getAllRecords',\n        data: data,\n    }\n\n    return request;\n}\n","import { FONT_COLOR,FONT_COLORS,PENDING, FULFILLED, REJECTED } from \"../../utility/constants\";\nimport { app } from \"../../config/app\";\nexport function save(data) {\n    let method = 'POST', url = \"createRecord\";\n    data = {\n        ...data,\n        modelName: \"promize_font_color\",\n        idKey: \"promize_font_color_id\"\n    }\n    if (data.promize_font_color_id) {\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${FONT_COLOR}_${PENDING}`, `${FONT_COLOR}_${FULFILLED}`, `${FONT_COLOR}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function getAllFontColors() {\n    let data = {\n        modelName: \"promize_font_color\",\n        idKey: \"promize_font_color_id\",\n        domain_id: app.DOMAIN_ID\n    }\n    const request = {\n        types: [`${FONT_COLORS}_${PENDING}`, `${FONT_COLORS}_${FULFILLED}`, `${FONT_COLORS}_${REJECTED}`],\n        method: 'POST',\n        url: 'getAllRecords',\n        data: data,\n    }\n\n    return request;\n}\n","import React, { Component } from 'react';\n\nclass TypeSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n  onChangeHandler(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    } else {\n      this.props.form.handleFieldsChange(e)\n    }\n  }\n\n  render() {\n\n    const raido_1 = (<React.Fragment><label className={\"promize-radio promize-attr-radio mr-15\" + (this.props.disabled?\" disabled\":\"\") + (String(this.props.value) === String(this.props.checkValue['first'])?\" checked\":\"\")} htmlFor={this.props.fieldName}><input disabled={this.props.disabled} type=\"radio\" id={this.props.fieldName} data-name={this.props.dataName} data-validation-name={this.props.labelName} onChange={this.onChangeHandler} checked={String(this.props.value) === String(this.props.checkValue['first']) ? true : false} value={this.props.checkValue['first']} className=\"check\" name={this.props.fieldName} />\n      <span class=\"chk-cover\"></span><span className=\"chk-span\"></span><span class=\"chk-icn\"><i class=\"fa fa-cube\"></i></span>{this.props.spanLabel['first']}</label></React.Fragment>);\n\n    const raido_2 = (<React.Fragment><label className={\"promize-radio promize-attr-radio mr-15\" + (this.props.disabled?\" disabled\":\"\") + (String(this.props.value) === String(this.props.checkValue['first'])?\" checked\":\"\")} htmlFor={this.props.fieldName + '1'}><input disabled={this.props.disabled} type=\"radio\" id={this.props.fieldName + '1'} data-name={this.props.dataName} data-validation-name={this.props.labelName} onChange={this.onChangeHandler} checked={String(this.props.value) === String(this.props.checkValue['second']) ? true : false} value={this.props.checkValue['second']} className=\"check\" name={this.props.fieldName} />\n      <span class=\"chk-cover\"></span><span className=\"chk-span\"></span><span class=\"chk-icn\"><i class=\"fa fa-images\"></i></span>{this.props.spanLabel['second']}</label></React.Fragment>);\n\n    const raido_3 = (<React.Fragment> <label className={\"promize-radio promize-attr-radio mr-15\" + (this.props.disabled?\" disabled\":\"\") + (String(this.props.value) === String(this.props.checkValue['first'])?\" checked\":\"\")} htmlFor={this.props.fieldName + '2'}><input disabled={this.props.disabled} type=\"radio\" id={this.props.fieldName + '2'} data-name={this.props.dataName} data-validation-name={this.props.labelName} onChange={this.onChangeHandler} checked={String(this.props.value) === String(this.props.checkValue['third']) ? true : false} value={this.props.checkValue['third']} className=\"check\" name={this.props.fieldName} />\n      <span class=\"chk-cover\"></span><span className=\"chk-span\"></span><span class=\"chk-icn\"><i class=\"fa fa-font\"></i></span>{this.props.spanLabel['third']}</label></React.Fragment>);\n\n    const raido_4 = (<React.Fragment> <label className={\"promize-radio promize-attr-radio mr-15\" + (this.props.disabled?\" disabled\":\"\") + (String(this.props.value) === String(this.props.checkValue['first'])?\" checked\":\"\")} htmlFor={this.props.fieldName + '3'}><input disabled={this.props.disabled} type=\"radio\" id={this.props.fieldName + '3'} data-name={this.props.dataName} data-validation-name={this.props.labelName} onChange={this.onChangeHandler} checked={String(this.props.value) === String(this.props.checkValue['fourth']) ? true : false} value={this.props.checkValue['fourth']} className=\"check\" name={this.props.fieldName} />\n      <span class=\"chk-cover\"></span><span className=\"chk-span\"></span><span class=\"chk-icn\"><i class=\"fa fa-grin-hearts\"></i></span>{this.props.spanLabel['fourth']}</label></React.Fragment>);\n\n    return (<div className={\"form-group check-mainbox \"}>\n      <label className=\"top mb-10\">{this.props.labelName}{(this.props.validation !== false) && <sup>*</sup>}</label>\n      <div className={\"inputgroup \" + (this.props.separate||\"\")}>\n        {!this.props.separate && <div className=\"check-btns\">{raido_1}{raido_2}{raido_3}{raido_4}</div>}\n        {this.props.separate && <React.Fragment>\n          <div className=\"check-btns\">{raido_1}</div>\n          <div className=\"check-btns\">{raido_2}</div>\n          <div className=\"check-btns\">{raido_3}</div>\n          <div className=\"check-btns\">{raido_4}</div>\n        </React.Fragment>\n        }\n        {this.props.form.validation(this.props.fieldName) && <p className=\"error-msg\">{this.props.state.inputErrors[this.props.fieldName].message}</p>}\n      </div>\n    </div>);\n\n  }\n}\n\nexport default TypeSelection;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {app} from '../../config/app';\nimport noImages from '../../assets/images/no-image.png';\nimport Dropzone from 'react-dropzone'\n\nclass ImageUploadMultilple extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlight: false\n        }\n        this.setImageKey = this.setImageKey.bind(this);\n        this.change = this.change.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n    }\n    \n\n    setImageKey(){\n        if(this.props.callBack == true){\n            this.props.setImageKey(this.props.imageType)\n        }\n    }\n\n    change(e){\n        this.props.form.handleFileSelect(e);\n        e.target.value = null;  \n        this.setImageKey()      \n    }\n    \n    onDrop(acceptedFiles){\n        this.props.form.handleFileDrop({\"files\":acceptedFiles},\"image_file\")\n        this.setImageKey()\n        this.setState({highlight:false})\n    }\n\n    onDragOver(e){\n        this.setState({highlight:true})\n    }\n\n    onDragLeave(e){\n        this.setState({highlight:false})\n    }\n\n    deleteImage(e, index, promize_images_id){\n        e.preventDefault();\n        this.props.deleteImage(index, promize_images_id)\n    }\n    render() {\n        let highlight = false\n        return (<Dropzone onDrop={this.onDrop} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n            {({getRootProps, getInputProps}) => (\n                <div className=\"promize-upload\" {...getRootProps()}>\n                    <div className=\"promize-upload-header\">\n                        <label className=\"promize-upload-title\">{ this.props.labelName || \"View Image\"}</label>\n                        <div className=\"custom-upload-product\">\n                            <div className=\"promize-upload-button\">\n                                <input {...getInputProps()} type=\"file\" name=\"image_file\" id=\"image_file\" onChange={this.change}/>\n                                <span className=\"file-custom\">Upload Image</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"promize-upload-content \" + (highlight?'promize-highlight':'')}>\n                        <div className=\"promize-content-before-upload\">\n                            <ul className=\"promize-group-upload-items\">\n                                {this.props.value && this.props.value.map((data, index)=>{  \n                                    if(data.image_type == 'option_thubnail_image'){\n                                        return '';\n                                    }\n                                    return <li key={index}>\n                                        <div className=\"promize-uploded-image\">\n                                        <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                                            <div onClick={(e) => {e.stopPropagation();this.props.deleteImage(index, data.promize_images_id)}} className=\"promize-upload-delete\">\n                                                <i className=\"fa fa-trash-alt\"></i>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    })\n                                }\n                            </ul>\n                            {this.props.value.length <= 0 && <img src={noImages} />}\n                        </div>\n                    </div>\n                </div>\n                )}\n            </Dropzone>\n            );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { image } = state;\n    return {\n        image\n    };\n}\n\nexport default connect(mapStateToProps)(ImageUploadMultilple);\n","import React from 'react';\nimport Select from 'react-select';\nconst CustomOption = function({data,innerRef,innerProps}){\n    return <div ref={innerRef} {...innerProps}  className=\"multi_select_option\">\n        <span className=\"multi_select_label\">{data.topLabel}</span>\n         <span className=\"multi_select_sub_label\"> {data.subLabel}</span>\n    </div>\n}\nclass MultiSelect extends React.Component {\n    render() {\n        return (<div className=\"promize-form-group\">\n            <label className=\"promize-form-control-label\">{this.props.labelName}  {this.props.validation ? <sup>*</sup> : ''}</label>\n            <Select\n                closeMenuOnSelect={false}\n                value={this.props.value}\n                onChange={this.props.onChange}\n                options= {this.props.options}\n                components={this.props.subLabel && { Option: CustomOption }}         \n                isMulti = {this.props.isMulti}\n            />\n        </div>);\n    }\n}\n\nexport default MultiSelect;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { getAllFonts } from '../../../actions/fontfamily';\nimport { getAllFontSizes } from '../../../actions/fontsize';\nimport { getAllFontColors } from '../../../actions/fontcolor';\nimport Input from '../../../components/form/input';\nimport MultiSelect from '../../../components/form/MultiSelect';\nimport { SimpleSelect } from \"../../../components/form/SimpleSelect\";\nimport toastr from 'toastr';\n\nclass Text extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \"selected_font_family\": [],\n            \"selected_font_size\": [],\n            \"selected_font_color\": [],\n            \"fontsList\": [],\n            \"fontSizes\": [],\n            \"fontColors\": []\n        }\n        this.handleFontsSelect = this.handleFontsSelect.bind(this)\n        this.onChangeHandler = this.onChangeHandler.bind(this)\n        this.handleFontColor = this.handleFontColor.bind(this);\n        this.handleFontSize = this.handleFontSize.bind(this);\n    }\n    componentWillMount() {\n        this.props.dispatch(getAllFonts());\n        this.props.dispatch(getAllFontSizes());\n        this.props.dispatch(getAllFontColors());\n    }\n    componentWillReceiveProps(props) {\n        let { fontsList, fontSizes, fontColors } = this.state\n        if (!props.fonts.isFetching && !props.fonts.isError && this.props.fonts.isFetching !== props.fonts.isFetching) {\n            let fonts = props.fonts.response.data, lists=[];\n            fonts.length > 0 &&  fonts.map((font,index)=>{\n                let fontlist = {};\n                fontlist.label = font.font_name;\n                fontlist.value = font.font_id;\n                lists.push(fontlist);\n            })\n            this.setState({ fontsList: lists\n             },()=>{\n                 console.log(\"props.state.fields.promize_attribute_text_values\", props.state.fields.promize_attribute_text_values)\n                let {font_ids} = props.state.fields.promize_attribute_text_values;\n                let fontsList = this.state.fontsList\n                let selected_font_family = [];\n                let fontIdArray = font_ids ? font_ids.split(',') : [];\n                fontIdArray.length > 0 && fontsList && fontIdArray.map((fontId,index)=>{\n                    let fontFamily = _.find(fontsList, ['value', parseInt(fontId)]); \n                    fontFamily && selected_font_family.push(fontFamily)\n                })\n                this.setState({selected_font_family})\n            })\n        }\n        else if (!props.fontsizes.isFetching && !props.fontsizes.isError && this.props.fontsizes.isFetching !== props.fontsizes.isFetching) {\n            let fontsizes = props.fontsizes.response.data, lists = [];\n            fontsizes.length >0 && fontsizes.map((size, index) => {\n                let sizes = {};\n                sizes.label = size.font_size;\n                sizes.value = size.font_size_id;\n                lists.push(sizes);\n            })\n            this.setState({\n                fontSizes: lists\n            }, () => {\n                let { font_size_ids } = props.state.fields.promize_attribute_text_values;\n                let selected_font_size = [];\n                let fontSizes = this.state.fontSizes\n                let fontSizeArray = font_size_ids ? font_size_ids.split(',') : [];\n                fontSizeArray.length > 0 && fontSizes && fontSizeArray.map((fontId,index)=>{\n                    let fontSize = _.find(fontSizes, ['value', parseInt(fontId)]); \n                    fontSize && selected_font_size.push(fontSize)\n                })\n                this.setState({selected_font_size})\n            })\n        }\n        else if (!props.fontcolors.isFetching && !props.fontcolors.isError && this.props.fontcolors.isFetching !== props.fontcolors.isFetching) {\n            let fontcolors = props.fontcolors.response.data, lists = [];\n            fontcolors.length >0 && fontcolors.map((color, index) => {\n                let colors = {};\n                colors.label = color.font_color_name + '(' + color.font_color_code + ')';\n                colors.topLabel = color.font_color_name;\n                colors.subLabel = color.font_color_code\n                colors.value = color.promize_font_color_id;\n                lists.push(colors);\n            })\n            this.setState({\n                fontColors: lists\n            }, () => {\n                let { font_color_ids } = props.state.fields.promize_attribute_text_values;\n                let selected_font_color = [];\n                let fontColors = this.state.fontColors\n                let fontColorArray = font_color_ids ? font_color_ids.split(',') : [];\n                fontColorArray.length > 0 && fontColors && fontColorArray.map((fontId,index)=>{\n                    let fontColor = _.find(fontColors, ['value', parseInt(fontId)]); \n                    fontColor && selected_font_color.push(fontColor)\n                })\n                this.setState({selected_font_color})\n            })\n        }\n    }\n    /**\n     * Handle the Text Fields Changes\n     * @param {HtmlEvent} e \n     * @param {string} fieldName \n     */\n    handleTextFields(e, fieldName) {\n        e.preventDefault();\n        let fields = this.props.state.fields\n        let { promize_attribute_text_values } = fields\n        promize_attribute_text_values[fieldName] = e.target.value ? e.target.value : '';\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_text_values: promize_attribute_text_values\n        });\n        this.props.currentComponent.setState({ fields: newObj })\n    }\n\n    /**\n     * Handle the font select\n     * @param {object} value \n     */\n    handleFontsSelect(value) {\n        let temp_arr = [];\n        let font_ids = value;\n        font_ids && font_ids.map((fontid, index) => {\n            temp_arr.push(fontid.value);\n        })\n        let ids = temp_arr.length < 2 ? temp_arr.toString() : temp_arr.join(',')\n        this.setState({ selected_font_family: value });\n\n        let fields = this.props.state.fields\n        const { promize_attribute_text_values } = fields\n        promize_attribute_text_values['font_ids'] = ids;\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_text_values: promize_attribute_text_values\n        });\n        this.props.currentComponent.setState({ fields: newObj })\n    }\n\n    handleFontSize(value) {\n        let temp_arr = [];\n        let font_size_ids = value;\n        font_size_ids.map((fontsize, index) => {\n            temp_arr.push(fontsize.value);\n        })\n        let ids = temp_arr.length < 2 ? temp_arr.toString() : temp_arr.join(',')\n        this.setState({ selected_font_size: value });\n\n        let fields = this.props.state.fields\n        const { promize_attribute_text_values } = fields\n        promize_attribute_text_values['font_size_ids'] = ids;\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_text_values: promize_attribute_text_values\n        });\n        this.props.currentComponent.setState({ fields: newObj })\n\n    }\n    handleFontColor(value) {\n        let temp_arr = [];\n        let font_color_ids = value;\n        font_color_ids.map((fontcolor, index) => {\n            temp_arr.push(fontcolor.value);\n        })\n        let ids = temp_arr.length < 2 ? temp_arr.toString() : temp_arr.join(',')\n        this.setState({ selected_font_color: value });\n\n        let fields = this.props.state.fields\n        const { promize_attribute_text_values } = fields\n        promize_attribute_text_values['font_color_ids'] = ids;\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_text_values: promize_attribute_text_values\n        });\n        this.props.currentComponent.setState({ fields: newObj })\n    }\n    /**\n     * On Change Handle\n     * @param {HtmlEvent} e \n     * @param {string} attributeType \n     */\n    onChangeHandler(e, attributeType) {\n        let fields = this.props.state.fields\n        const { promize_attribute_text_values } = fields\n        promize_attribute_text_values[attributeType] = e.target.value ? parseInt(e.target.value) : '';\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_text_values: promize_attribute_text_values\n        });\n        this.props.currentComponent.setState({ fields: newObj })\n    }\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-card-header\">\n                <div className=\"promize-card-title\">\n                    <h3>\n                        <span>Text</span>\n                    </h3>\n                </div>\n            </div>\n            <div className=\"promize-card-body\">\n            <div className=\"df-wrap\">\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <Input {...this.state} {...this.props}\n                            fieldName={'text_name'}\n                            value={this.props.state.fields.promize_attribute_text_values.text_name}\n                            labelName={\"Text Name\"}\n                            validation={true}\n                            onChange={(e) => { this.handleTextFields(e, \"text_name\") }}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <Input {...this.state}{...this.props}\n                            fieldName={'text_sku'}\n                            value={this.props.state.fields.promize_attribute_text_values.text_sku}\n                            labelName={\"SKU\"}\n                            validation={false}\n                            onChange={(e) => { this.handleTextFields(e, \"text_sku\") }}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <Input {...this.state}{...this.props}\n                            fieldName={'text_price'}\n                            value={this.props.state.fields.promize_attribute_text_values.text_price}\n                            labelName={\"Price\"}\n                            validation={false}\n                            onChange={(e) => { this.handleTextFields(e, \"text_price\") }}\n                            inputType={'number'}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-66\">\n                    <div className=\"mr-15\">\n                        <MultiSelect\n                            labelName={\"Font Family\"}\n                            value={this.state.selected_font_family}\n                            selected={this.state.font_ids}\n                            onChange={this.handleFontsSelect}\n                            options={this.state.fontsList}\n                            isMulti={true}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <SimpleSelect\n                            onChangeHandler={(e) => this.onChangeHandler(e, 'default_font_family')}\n                            data={this.state.selected_font_family || []}\n                            optionText=\"label\"\n                            optionValue='value'\n                            emptyOptionText=\"Select Default Font Family...\"\n                            disabled={!(this.state.selected_font_family && this.state.selected_font_family.length > 0)}\n                            value={this.props.state.fields.promize_attribute_text_values.default_font_family}\n                            name=\"Default Font\"\n                            labelName={\"Default Font Family\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-66\">\n                    <div className=\"mr-15\">\n                        <MultiSelect\n                            value={this.state.selected_font_size}\n                            onChange={this.handleFontSize}\n                            options={this.state.fontSizes}\n                            isMulti={true}\n                            labelName={\"Font Size\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <SimpleSelect\n                            onChangeHandler={(e) => this.onChangeHandler(e, 'default_font_size')}\n                            data={this.state.selected_font_size || []}\n                            optionText=\"label\"\n                            optionValue='value'\n                            emptyOptionText=\"Select Default Font Size...\"\n                            value={this.props.state.fields.promize_attribute_text_values.default_font_size}\n                            name=\"Default Size\"\n                            disabled={!(this.state.selected_font_size && this.state.selected_font_size.length > 0)}\n                            labelName={\"Default Font Size\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-66\">\n                    <div className=\"mr-15\">\n                        <MultiSelect\n                            value={this.state.selected_font_color}\n                            onChange={this.handleFontColor}\n                            options={this.state.fontColors}\n                            isMulti={true}\n                            subLabel={true}\n                            labelName={\"Font Color\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"wd-33\">\n                    <div className=\"mr-15\">\n                        <SimpleSelect\n                            onChangeHandler={(e) => this.onChangeHandler(e, 'default_color')}\n                            data={this.state.selected_font_color || []}\n                            optionText=\"label\"\n                            optionValue='value'\n                            emptyOptionText=\"Select Default Font Color...\"\n                            value={this.props.state.fields.promize_attribute_text_values.default_color}\n                            name=\"Default Color\"\n                            labelName={\"Default Font Color\"}\n                            disabled={!(this.state.selected_font_color && this.state.selected_font_color.length > 0)}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n            </div>\n            </div>\n        </React.Fragment>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        attributeValues: state.attributeValues,\n        fonts: state.fonts,\n        fontsizes: state.fontsizes,\n        fontcolors: state.fontcolors\n    };\n}\nexport default connect(mapStateToProps)(Text);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { getAllCliparts } from '../../../actions/cliparts';\nimport Input from '../../../components/form/input';\nimport MultiSelect from '../../../components/form/MultiSelect';\n\nclass Clipart extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            promize_attribute_clipart_values : {\n                \"clipart_name\" : '',\n                \"clipart_price\" : null,\n                \"clipart_sku\" : null,\n                \"promize_domain_clipart_category_id\" : '',\n                \"promize_attribute_id\" : this.props.state.fields.promize_attribute_id,\n            },\n            clipartList : [],\n            selectedClipartList : []\n        }\n        this.handleClipartFieldChange = this.handleClipartFieldChange.bind(this);\n        this.handleClipartsSelect = this.handleClipartsSelect.bind(this);    \n    }\n\n    componentWillMount(){\n        this.props.dispatch(getAllCliparts());\n    }\n\n    componentWillReceiveProps(props){\n        if(!props.cliparts.isFetching && !props.cliparts.isError  && this.props.cliparts.isFetching !== props.cliparts.isFetching){\n            let cliparts = props.cliparts.response.data, lists=[];\n            cliparts.map((clipart, index)=>{\n                let clipartList = {};\n                clipartList.label = clipart.clipart_category_name;\n                clipartList.value = clipart.promize_domain_clipart_category_id;\n                lists.push(clipartList);\n            })\n            this.setState({clipartList : lists},()=>{\n                if(props.state.fields.promize_attribute_clipart_values && lists.length > 0){\n                    let {promize_domain_clipart_category_id} = props.state.fields.promize_attribute_clipart_values;\n                    let selectedClipartList = [], clipartList = this.state.clipartList\n                    let clipIdArray = promize_domain_clipart_category_id.split(',');\n                    clipIdArray.length > 0 && clipartList && clipIdArray.map((clipId,index)=>{\n                        let clips = _.find(clipartList, ['value', parseInt(clipId)]);\n                        clips && selectedClipartList.push(clips)\n                    })\n                    this.setState({selectedClipartList})\n                }\n            });\n        } \n    }\n\n    handleClipartFieldChange(e, fieldName){\n        e.preventDefault();\n        let fields = this.props.state.fields;\n        let promize_attribute_clipart_values = fields.promize_attribute_clipart_values;\n        promize_attribute_clipart_values[fieldName]  = e.target.value;\n        const newObj = Object.assign({}, fields, {          \n            promize_attribute_clipart_values: promize_attribute_clipart_values\n        });\n        this.props.currentComponent.setState({fields: newObj});\n    }\n\n    handleClipartsSelect(value){\n        let ids = []\n        value && value.map((data, index)=>{\n            ids.push(data.value)\n        })\n        let selected_ids = ids.length > 0 ? ids.join(',') : null;\n        let fields = this.props.state.fields;\n        let promize_attribute_clipart_values = fields.promize_attribute_clipart_values;\n        promize_attribute_clipart_values['promize_domain_clipart_category_id']  = selected_ids;\n        promize_attribute_clipart_values['promize_attribute_id']  = this.props.state.fields.promize_attribute_id;\n        const newObj = Object.assign({}, fields, {          \n            promize_attribute_clipart_values: promize_attribute_clipart_values\n        });\n        this.props.currentComponent.setState({fields: newObj});\n        this.setState({ selectedClipartList : value})    \n    }\n\n    render(){\n        return <React.Fragment>\n        <div className=\"promize-card-header\">\n          <div className=\"promize-card-title\">\n              <h3>\n                  <span>Cliparts</span>\n              </h3>\n          </div>\n      </div>\n      <div className=\"promize-card-body\">\n      <div className=\"df\">\n          <div className=\"wd-33 mr-15\">\n              <Input {...this.props}\n                  fieldName = {'clipart_name'}\n                  value={this.props.state.fields.promize_attribute_clipart_values.clipart_name}\n                  labelName={\"Clipart Name\"}\n                  validation={true}\n                  onChange={(e) => { this.handleClipartFieldChange(e, \"clipart_name\") }}\n              />    \n          </div>\n     \n          <div className=\"wd-33 mr-15\">\n              <Input {...this.props}\n                  fieldName = {'clipart_price'}\n                  value = { this.props.state.fields.promize_attribute_clipart_values.clipart_price}\n                  labelName={\"Clipart Price\"}\n                  validation={false}\n                  inputType={'number'}\n                  onChange={(e) => { this.handleClipartFieldChange(e, \"clipart_price\") }}\n              />    \n          </div>\n     \n          <div className=\"wd-33 mr-15\">\n              <Input {...this.props}\n                  fieldName = {'clipart_sku'}\n                  value={this.props.state.fields.promize_attribute_clipart_values.clipart_sku}\n                  labelName={\"Clipart SKU\"}\n                  validation={false}\n                  onChange={(e) => { this.handleClipartFieldChange(e, \"clipart_sku\") }}\n              />    \n          </div>\n            <div className=\"wd-33\">\n            <MultiSelect\n                labelName = {\"Select cliparts\"}\n                selectedOption = { this.props.state.fields.promize_attribute_clipart_values.promize_domain_clipart_category_id} \n                onChange={this.handleClipartsSelect}\n                options= {this.state.clipartList}\n                value = {this.state.selectedClipartList}\n                validation={true}\n                isMulti = {true}\n            />\n      </div>\n      </div>\n      </div>\n  </React.Fragment>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        attributeValues : state.attributeValues,\n        cliparts : state.cliparts,\n    };\n}\nexport default connect(mapStateToProps)(Clipart);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from '../../../components/form/input';\n\nclass Image extends Component {\n    constructor(props) {\n        super(props)\n        this.handleImageFieldChange = this.handleImageFieldChange.bind(this);\n    }\n\n    handleImageFieldChange(e, fieldName) {\n        e.preventDefault();\n        let fields = this.props.state.fields;\n        let promize_attribute_image_values = fields.promize_attribute_image_values;\n        promize_attribute_image_values[fieldName] = e.target.value;\n        const newObj = Object.assign({}, fields, {\n            promize_attribute_image_values: promize_attribute_image_values\n        });\n        this.props.currentComponent.setState({ fields: newObj });\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-card-header\">\n                <div className=\"promize-card-title\">\n                    <h3>\n                        <span>Upload Image</span>\n                    </h3>\n                </div>\n            </div>\n            <div className=\"promize-card-body\">\n                <div className=\"df\">\n                    <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'image_name'}\n                            value={this.props.state.fields.promize_attribute_image_values.image_name}\n                            labelName={\"Image Label\"}\n                            validation={true}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"image_name\") }}\n                        />\n                    </div>\n                    <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'image_code'}\n                            value={this.props.state.fields.promize_attribute_image_values.image_code}\n                            labelName={\"Image code\"}\n                            validation={false}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"image_code\") }}\n                        />\n                    </div>\n                    <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'image_price'}\n                            value={this.props.state.fields.promize_attribute_image_values.image_price}\n                            labelName={\"Image Price\"}\n                            validation={false}\n                            inputType={'number'}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"image_price\") }}\n                        />\n                    </div>\n                </div>\n                <div className=\"df\">\n                <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'image_sku'}\n                            value={this.props.state.fields.promize_attribute_image_values.image_sku}\n                            labelName={\"Image SKU\"}\n                            validation={false}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"image_sku\") }}\n                        />\n                    </div>\n                <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'min_upload_size'}\n                            value={this.props.state.fields.promize_attribute_image_values.min_upload_size}\n                            labelName={\"Min Upload Size(in Mb)\"}\n                            validation={false}\n                            inputType={'number'}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"min_upload_size\") }}\n                        />\n                    </div>\n                    <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'max_upload_size'}\n                            value={this.props.state.fields.promize_attribute_image_values.max_upload_size}\n                            labelName={\"Max Upload Size(in Mb)\"}\n                            validation={false}\n                            inputType={'number'}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"max_upload_size\") }}\n                        />\n                    </div>\n                    \n                </div>\n                <div className=\"df\">\n                <div className=\"wd-30 mr-15\">\n                        <Input {...this.props}\n                            fieldName={'image_format'}\n                            value={this.props.state.fields.promize_attribute_image_values.image_format}\n                            labelName={\"Allowed Image Formats\"}\n                            validation={true}\n                            onChange={(e) => { this.handleImageFieldChange(e, \"image_format\") }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        attributeValues: state.attributeValues,\n    };\n}\nexport default connect(mapStateToProps)(Image);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport Input from '../../components/form/input';\nimport TypeSelection from '../../components/form/TypeSelection';\nimport { SubmitButton } from \"../../components/form/SubmitButton\";\nimport { save, saveAttributeValues, saveAttributeClipartValues, saveAttributeValuesImage, deleteAttributeValuesImage, deleteAttributeValues, saveAttributeUploadImageValues, saveTextValues } from '../../actions/attributes';\nimport { app } from '../../config/app';\nimport ImageUpload from '../../components/files/ImageUpload';\nimport ImageUploadMultilple from '../../components/files/ImageUploadMultilple';\nimport MultiSelect from '../../components/form/MultiSelect';\nimport { getAllCliparts } from '../../actions/cliparts';\nimport Text from './Type/text';\nimport Clipart from './Type/clipart';\nimport Image from './Type/image'\nimport Switchtoggle from '../../components/form/switchtoggle';\nimport Popup from '../../components/design/Popup'\n\nexport function initialState() {\n    const initialState = {\n        fields:\n        {\n            \"domain_id\": app.DOMAIN_ID,\n            \"promize_attribute_id\": null,\n            \"attribute_name\": \"\",\n            \"attribute_code\": \"\",\n            \"attribute_type\": \"option\",\n            \"promize_attribute_values\": [],\n            \"promize_attribute_clipart_values\": {},\n            \"promize_attribute_image_values\": {},\n            \"promize_attribute_text_values\": {},\n            \"status\": true,\n        },\n        inputErrors: {},\n        isEdit: true,\n        attribute_saved: false\n    };\n\n    return initialState;\n}\n\nexport const validation = (props) => {\n    const rules = {\n        \"attribute_name\": \"required\",\n    }\n    return rules;\n}\nclass Forms extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            promize_attribute_values: {\n                \"promize_attribute_id\": this.props.state.fields.promize_attribute_id,\n                \"promize_attribute_values_id\": null,\n                \"option_name\": \"\",\n                \"promize_images\": [],\n                \"option_thumbnail_image\": {\n                    \"image_type\": '',\n                    \"image_url\": '',\n                    \"promize_attribute_values_id\": null,\n                    \"promize_images_id\": null\n                },\n                \"option_code\": \"\",\n                \"option_value\": \"\",\n                \"option_sku\": \"\",\n                \"option_price\": null\n            },\n            promize_images: {\n                \"image_type\": '',\n                \"image_url\": '',\n                \"promize_attribute_values_id\": null,\n                \"promize_images_id\": null\n            },\n            imageKey: '',\n            enableEditAttribute: false,\n        }\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.setImageKey = this.setImageKey.bind(this);\n        this.handleAddOption = this.handleAddOption.bind(this);\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.deleteImage = this.deleteImage.bind(this);\n        this.showOptionContentPopup = this.showOptionContentPopup.bind(this);\n        this.handleSaveAttributeValuesImage = this.handleSaveAttributeValuesImage.bind(this);\n        this.handleInputFieldBlur = this.handleInputFieldBlur.bind(this);\n        this.saveForm = this.saveForm.bind(this);\n    }\n\n    handleUploadedImage(props) {\n        const response = props.imageUpload.response;\n        if (response.status && response.status === 200) {\n            let promize_attribute_values = this.state.promize_attribute_values;\n            if (this.state.imageKey == \"option_image\") {\n                let saveData = {\n                    \"image_type\": 'option_image',\n                    \"image_url\": response.file.path,\n                    \"promize_attribute_values_id\": promize_attribute_values.promize_attribute_values_id,\n                    \"promize_images_id\": null,\n                    \"status\": 1,\n                }\n                this.props.dispatch(saveAttributeValuesImage(saveData));\n            } else {\n                let saveData = {\n                    \"image_type\": 'option_thubnail_image',\n                    \"image_url\": response.file.path,\n                    \"promize_attribute_values_id\": promize_attribute_values.promize_attribute_values_id,\n                    \"promize_images_id\": null,\n                    \"status\": 1,\n                }\n                this.props.dispatch(saveAttributeValuesImage(saveData));\n            }\n        }\n    }\n    handleSaveAttributeValuesImage(props) {\n        let records = props.attributeValuesImages.response.records;\n        let attributeValues;\n        let promize_attribute_values = this.state.promize_attribute_values;\n        if (this.state.imageKey == \"option_image\") {\n            let promizeImages = this.state.promize_attribute_values.promize_images;\n            promizeImages.push(records);\n            attributeValues = Object.assign({}, promize_attribute_values, {\n                promize_images: promizeImages\n            });\n        } else {\n            attributeValues = Object.assign({}, promize_attribute_values, {\n                option_thumbnail_image: records\n            });\n        }\n        this.setState({ promize_attribute_values: attributeValues });\n    }\n\n    componentWillReceiveProps(props) {\n        if (props.imageUpload.response !== this.props.imageUpload.response) {\n            this.handleUploadedImage(props);\n        } else if (!props.attributeValuesImages.isFetching && !props.attributeValuesImages.isError && this.props.attributeValuesImages.isFetching !== props.attributeValuesImages.isFetching) {\n            this.handleSaveAttributeValuesImage(props);\n        }\n        else if (!props.attributeValues.isFetching && !props.attributeValues.isError && this.props.attributeValues.isFetching !== props.attributeValues.isFetching) {\n            let records = props.attributeValues.response.records;\n            records.promize_images = this.state.promize_attribute_values.promize_images;\n            records.option_thumbnail_image = this.state.promize_attribute_values.option_thumbnail_image;\n            this.setState({ promize_attribute_values: records }, () => {\n                //    $('.promize-modal-cover').show();  \n            });\n        }\n\n    }\n    handleFieldChange(e, fieldName) {\n        e.preventDefault();\n        let fields = this.state.promize_attribute_values;\n        let obj = fields\n        obj[fieldName] = e.target.value;\n        const newObj = Object.assign({}, fields, obj);\n        fields = newObj;\n        this.setState({ promize_attribute_values: fields });\n    }\n\n    showOptionContentPopup(e, data, index) {\n        e.preventDefault();\n        if (index !== undefined) {\n            const promize_attribute_values = this.state.promize_attribute_values;\n            data.arrayIndex = index;\n            const newObj = Object.assign({}, promize_attribute_values, data);\n            this.setState({ promize_attribute_values: newObj });\n        } else {\n            let promize_attribute_values = this.state.promize_attribute_values;\n            promize_attribute_values.promize_attribute_id = this.props.state.fields.promize_attribute_id\n            this.props.dispatch(saveAttributeValues(promize_attribute_values));\n            $('.promize-modal-cover').show();\n        }\n    }\n    hideOptionContentPopup(e) {\n        e && e.preventDefault();\n        if (!this.state.promize_attribute_values.option_name) {\n            this.deleteAttributeValues(e, '', this.state.promize_attribute_values.promize_attribute_values_id)\n        }\n        $('.promize-modal-cover').hide();\n        const newObj = {\n            \"promize_attribute_id\": this.props.state.fields.promize_attribute_id,\n            \"promize_attribute_values_id\": null,\n            \"option_name\": \"\",\n            \"promize_images\": [],\n            \"option_thumbnail_image\": {\n                \"image_type\": '',\n                \"image_url\": '',\n                \"promize_attribute_values_id\": null,\n                \"promize_images_id\": null\n            },\n            \"option_code\": \"\",\n            \"option_value\": \"\",\n            \"option_sku\": \"\",\n            \"option_price\": null\n        }\n        this.setState({ promize_attribute_values: newObj });\n    }\n    handleAddOption(e) {\n        e.preventDefault();\n        let fields = this.props.state.fields;\n        let promize_attribute_values = fields.promize_attribute_values;\n        if (this.state.promize_attribute_values.option_name) {\n            if (this.state.enableEditAttribute) {\n                var foundIndex = promize_attribute_values.findIndex(attr_obj => attr_obj.promize_attribute_values_id == this.state.promize_attribute_values.promize_attribute_values_id);\n                promize_attribute_values[foundIndex] = this.state.promize_attribute_values;\n            } else {\n                promize_attribute_values.push(this.state.promize_attribute_values);\n            }\n            const newObj = Object.assign({}, fields, {\n                promize_attribute_values: promize_attribute_values\n            });\n            this.setState({ enableEditAttribute: false });\n            this.hideOptionContentPopup();\n            this.props.currentComponent.setState({ fields: newObj });\n        } else if (!this.state.promize_attribute_values.option_name) {\n            toastr.error(\"Option name cannot be empty\")\n        }\n\n    }\n    setImageKey(key) {\n        this.setState({ imageKey: key });\n    }\n    deleteImage(index, promize_images_id) {\n        let promize_attribute_values = this.state.promize_attribute_values;\n        let promize_images = promize_attribute_values.promize_images;\n        promize_images.splice(index, 1);\n        const newObj = Object.assign({}, promize_attribute_values, {\n            promize_images: promize_images\n        });\n        this.setState({ promize_attribute_values: newObj }, () => {\n            this.props.dispatch(deleteAttributeValuesImage({ \"ids\": promize_images_id }))\n        });\n    }\n    /**\n   * Handle Filed Blur\n   * @param {HtmlEvent | Object} e Html Elemet\n   * @param {string} fieldName Field Name\n   */\n    handleInputFieldBlur(e) {\n        e.preventDefault();\n        let data = this.state.promize_attribute_values;\n        this.props.dispatch(saveAttributeValues(data))\n    }\n    optionContent() {\n        return <React.Fragment>\n            <div className=\"promize-modal-cover\" style={{ \"display\": \"none\" }}>\n                <div className=\"promize-modal modal-lg\">\n                    <div className=\"promize-modal-header\">\n                        <h3 className=\"modal-title\">\n                            <span>\n                                Add New Option\n                        </span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-modal-body\">\n                        <div className=\"promize-form-group mt-10\">\n                            <div className=\"df-wrap\">\n                                <div className=\"wd-50\">\n                                    <div className=\"mr-15\">\n                                        <Input {...this.props}\n                                            fieldName={'option_name'}\n                                            value={this.state.promize_attribute_values.option_name}\n                                            labelName={\"Option Name\"}\n                                            onChange={(e) => { this.handleFieldChange(e, \"option_name\") }}\n                                            validation={false}\n                                            onBlur={e => this.handleInputFieldBlur(e)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"wd-50\">\n                                    <Input {...this.props}\n                                        fieldName={'option_code'}\n                                        value={this.state.promize_attribute_values.option_code}\n                                        labelName={\"Option Code\"}\n                                        onChange={(e) => { this.handleFieldChange(e, \"option_code\") }}\n                                        validation={false}\n                                        onBlur={e => this.handleInputFieldBlur(e)}\n                                    />\n                                </div>\n                                <div className=\"wd-50\">\n                                    <div className=\"mr-15\">\n                                        <Input {...this.props}\n                                            fieldName={'option_value'}\n                                            value={this.state.promize_attribute_values.option_value}\n                                            labelName={\"Option Value\"}\n                                            onChange={(e) => { this.handleFieldChange(e, \"option_value\") }}\n                                            validation={false}\n                                            onBlur={e => this.handleInputFieldBlur(e)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"wd-50\">\n                                    <Input {...this.props}\n                                        fieldName={'option_sku'}\n                                        value={this.state.promize_attribute_values.option_sku}\n                                        labelName={\"SKU\"}\n                                        onChange={(e) => { this.handleFieldChange(e, \"option_sku\") }}\n                                        validation={false}\n                                        onBlur={e => this.handleInputFieldBlur(e)}\n                                    />\n                                </div>\n                                <div className=\"wd-50\">\n                                    <div className=\"mr-15\">\n                                        <Input {...this.props}\n                                            fieldName={'price'}\n                                            value={this.state.promize_attribute_values.option_price ? this.state.promize_attribute_values.option_price : ''}\n                                            labelName={'Price'}\n                                            onChange={(e) => { this.handleFieldChange(e, \"option_price\") }}\n                                            validation={false}\n                                            onBlur={e => this.handleInputFieldBlur(e)}\n                                            inputType={'number'}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"df\">\n                                <div className=\"wd-50\">\n                                    <div className=\"promize-group-upload mr-15\">\n                                        <ImageUploadMultilple {...this.props} {...this.state}\n                                            setImageKey={this.setImageKey}\n                                            callBack={true}\n                                            labelName={\" Option image\"}\n                                            fieldName={'image_file'}\n                                            dataName={'image_file'}\n                                            validation={false}\n                                            imageType={\"option_image\"}\n                                            value={this.state.promize_attribute_values.promize_images}\n                                            deleteImage={this.deleteImage}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"wd-50\">\n                                <ImageUpload {...this.props}\n                                            setImageKey={this.setImageKey}\n                                            callBack={true}\n                                            labelName={\"Option thumbnail image\"}\n                                            fieldName={'image_file'}\n                                            dataName={'image_file'}\n                                            validation={false}\n                                            imageType={\"option_thumbnail_image\"}\n                                            value={this.state.promize_attribute_values.option_thumbnail_image}\n                                            image_url={this.state.promize_attribute_values.option_thumbnail_image ? this.state.promize_attribute_values.option_thumbnail_image.image_url : ''}\n                                        />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"promize-modal-footer df df-end\">\n                        <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.hideOptionContentPopup(e) }}>Cancel</button>\n                        <button className=\"btn btn-promize-primary\" onClick={(e) => { this.handleAddOption(e) }}>Add</button>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            $('.portlet-dropdown-menu').removeClass('show');\n            $('.portlet-dropdown-menu').addClass('hide');\n        }\n    }\n    saveForm(e) {\n        e.preventDefault();\n        if (this.props.state.fields.attribute_type == \"clipart\") {\n            let clipart_values = this.props.state.fields.promize_attribute_clipart_values;\n            clipart_values['promize_attribute_id'] = this.props.state.fields.promize_attribute_id;\n            if (!clipart_values.clipart_name || !clipart_values.promize_domain_clipart_category_id) {\n                toastr.error(\"Add all the required fields marked as *\")\n            } else {\n                this.props.dispatch(saveAttributeClipartValues(clipart_values));\n                this.props.dispatch(save(this.props.state.fields));\n                toastr.success(\"Records saved successfully\");\n                this.props.history.push('/attributes');\n            }\n        } else if (this.props.state.fields.attribute_type == \"image\") {\n            let image_values = this.props.state.fields.promize_attribute_image_values\n            image_values['promize_attribute_id'] = this.props.state.fields.promize_attribute_id;\n            if (!image_values.image_name || !image_values.image_format) {\n                toastr.error(\"Add all the required fields marked as *\")\n            } else {\n                this.props.dispatch(saveAttributeUploadImageValues(image_values));\n                this.props.dispatch(save(this.props.state.fields));\n                toastr.success(\"Records saved successfully\");\n                this.props.history.push('/attributes');\n            }\n        } else if (this.props.state.fields.attribute_type == \"text\") {\n            let text_values = this.props.state.fields.promize_attribute_text_values;\n            text_values['promize_attribute_id'] = this.props.state.fields.promize_attribute_id;\n            if (!text_values.text_name || !text_values.font_ids || !text_values.default_font_family || !text_values.font_size_ids || !text_values.default_font_size || !text_values.font_color_ids || !text_values.default_color) {\n                toastr.error(\"Add all the required fields marked as *\")\n            } else {\n                this.props.dispatch(saveTextValues(text_values));\n                this.props.dispatch(save(this.props.state.fields));\n                toastr.success(\"Records saved successfully\");\n                this.props.history.push('/attributes');\n            }\n        } else if (this.props.state.fields.attribute_type == \"option\") {\n            this.props.dispatch(save(this.props.state.fields));\n            toastr.success(\"Records saved successfully\");\n            this.props.history.push('/attributes');\n        }\n    }\n    deleteAttributeValues(e, index, promize_attribute_values_id) {\n        e && e.preventDefault();\n        let popup = {};\n        popup.title = \"Remove Option\";\n        popup.content = 'Do you want to remove this option?';\n        popup.submit = () => {\n            let fields = this.props.state.fields;\n            let promize_attribute_values = fields.promize_attribute_values;\n            let selected_index = -1;\n            promize_attribute_values.map((value, attr_index) => {\n                if (value.promize_attribute_values_id == promize_attribute_values_id) {\n                    selected_index = attr_index\n                }\n            });\n            (selected_index !== -1) && promize_attribute_values.splice(selected_index, 1);\n            const newObj = Object.assign({}, fields, {\n                promize_attribute_values: promize_attribute_values\n            });\n            this.props.currentComponent.setState({ fields: newObj }, () => {\n                this.props.dispatch(deleteAttributeValues({ \"ids\": [promize_attribute_values_id] }))\n            });\n        }\n        this.setState({popup})\n       \n    }\n    editAttributeValues(e, promize_attribute_values_id) {\n        e.preventDefault();\n        let promize_attribute_values = this.props.state.fields.promize_attribute_values;\n        let attribute_values = {};\n        promize_attribute_values.map((value, index) => {\n            if (value.promize_attribute_values_id == promize_attribute_values_id) {\n                attribute_values = value;\n            }\n        });\n        this.setState({ promize_attribute_values: attribute_values, enableEditAttribute: true }, () => {\n            $('.promize-modal-cover').show();\n        })\n    }\n\n    handleFontSize(value) {\n        let temp_arr = [];\n        let font_size_ids = value;\n        let selected_font_size = [];\n        const { promize_attribute_text_values } = this.state;\n        font_size_ids.map((fontsize, index) => {\n            temp_arr.push(fontsize.value);\n            selected_font_size.push({ 'font_size_id': fontsize.value, 'font_size': fontsize.label })\n        })\n        let ids = temp_arr.length < 2 ? temp_arr.toString() : temp_arr.join(',')\n        promize_attribute_text_values['font_size_ids'] = ids;\n        promize_attribute_text_values['selected_font_size'] = selected_font_size;\n        this.setState({ promize_attribute_text_values });\n\n    }\n    handleFontColor(value) {\n        let temp_arr = [];\n        let font_color_ids = value;\n        let selected_font_color = [];\n        const { promize_attribute_text_values } = this.state;\n        font_color_ids.map((fontcolor, index) => {\n            temp_arr.push(fontcolor.value);\n            selected_font_color.push({ 'promize_font_color_id': fontcolor.value, 'font_color_name': fontcolor.label })\n        })\n        let ids = temp_arr.length < 2 ? temp_arr.toString() : temp_arr.join(',')\n        promize_attribute_text_values['font_color_ids'] = ids;\n        promize_attribute_text_values['selected_font_color'] = selected_font_color;\n        this.setState({ promize_attribute_text_values });\n    }\n    closePopup = () =>{\n        this.setState({popup : false})\n    }\n    render() {\n        return    <React.Fragment>\n        {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup}/>}\n        <form onSubmit={this.props.form.handleSubmit} method=\"POST\">\n            <div className=\"promize-card mb-20\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title mb-10\">\n                        <h3>\n                            <span>{this.props.title}</span>\n                        </h3>\n                    </div>\n                </div>\n                <div className=\"promize-card-body\">\n                    <div className=\"df\">\n                        <div className=\"wd-30 mr-15\">\n                            <Input {...this.props}\n                                fieldName={'attribute_name'}\n                                value={this.props.state.fields.attribute_name}\n                                labelName={\"Attribute Name\"}\n                                validation={true}\n                            />\n                        </div>\n                        <div className=\"wd-30 mr-15\">\n                            <Input {...this.props}\n                                fieldName={'attribute_code'}\n                                value={this.props.state.fields.attribute_code}\n                                labelName={\"Attribute Code\"}\n                                validation={false}\n                            />\n                        </div>\n                        <div className=\"wd-30\">\n                            <Switchtoggle\n                                {...this.props}\n                                labelName={'Status'}\n                                fieldName={'status'}\n                                dataName={'status'}\n                                id={1}\n                                value={this.props.statusValue}\n                                spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                checkValue={{ first: true, second: false }}\n                                validation={false}\n                                className={\"toggle-aa\"}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"wd-100\">\n                        <TypeSelection {...this.props}\n                            labelName={'Attribute Type'}\n                            fieldName={'attribute_type'}\n                            dataName={'attribute_type'}\n                            value={this.props.state.fields.attribute_type}\n                            spanLabel={{ first: \"Option\", second: \"Image\", third: \"Text\", fourth: \"Clip Art\" }}\n                            checkValue={{ first: \"option\", second: \"image\", third: \"text\", fourth: \"clip Art\" }}\n                            validation={false}\n                            disabled={this.props.state.fields.promize_attribute_id ? true : false}\n                        />\n                    </div>\n                    <div class=\"df df-end\">\n                    {!this.props.state.fields.promize_attribute_id && <SubmitButton className=\"btn btn-promize-primary\" text={\"Next\"} response={this.props.state.fields} />}\n                </div>\n                </div>\n\n            </div>\n            <div className=\"promize-card\">\n                {\n                    this.props.state.fields.attribute_type == \"clipart\" && this.props.state.attribute_saved &&\n                    <Clipart {...this.props} />\n                }\n                {\n                    this.props.state.fields.attribute_type == \"image\" && this.props.state.attribute_saved &&\n                    <Image {...this.props} />\n                }\n\n                {\n                    this.props.state.fields.attribute_type == \"option\" && this.props.state.attribute_saved &&\n                    <React.Fragment>\n\n                        <div className=\"promize-card-header\">\n                            <div className=\"promize-card-title\">\n                                <h3>\n                                    <span>Options</span>\n                                </h3>\n                            </div>\n                            <div className=\"promize-card-action df-end\">\n                                <div className=\"tab-links\">\n                                    <button className=\"btn btn-links\" onClick={(e) => { this.showOptionContentPopup(e) }}><i className=\"fa fa-plus\"></i> Add Option</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"promize-card-body\">\n                            <table className=\"promize-table table-hover table-action\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Code</th>\n                                        <th>Image</th>\n                                        <th>Thumbnail</th>\n                                        <th>SKU</th>\n                                        <th>Price ($)</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {this.props.state.fields.promize_attribute_values.length == 0 &&\n                                        <tr><td colSpan=\"7\"><p className=\"promize-no-records\"> No records found</p></td></tr>\n                                    }\n                                    {this.props.state.fields.promize_attribute_values.length > 0 && this.props.state.fields.promize_attribute_values.map((data, index) => {\n                                        return <tr key={index}>\n                                            <td>{data.option_name ? data.option_name : '-'}</td>\n                                            <td>{data.option_code ? data.option_code : '-'}</td>\n                                            <td><div className=\"promize-tbl-mi-cvr\"><ul className=\"promize-milist\">\n                                                {(data.promize_images.length > 0) && data.promize_images.map((img_data, index) => {\n                                                    if (img_data.image_type == 'option_thubnail_image') {\n                                                        return '';\n                                                    }\n                                                    return <li key={index}>\n                                                        {img_data.image_url && <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img\" alt={\" \"} />}\n                                                    </li>\n                                                })}\n                                                {!(data.promize_images.length > 0) && <li>{\"-\"}</li>}\n                                            </ul></div></td>\n                                            <td><div className=\"promize-tbl-mi-cvr\">\n                                                {data.option_thumbnail_image && data.option_thumbnail_image.image_url &&\n                                                    <img src={app.APP_IMAGE_BASE_URL + data.option_thumbnail_image.image_url} className=\"promize-tbl-img-sm\" alt={\" \"} />}\n                                                {!(data.option_thumbnail_image) && <div>{\"-\"}</div>}\n                                            </div>\n                                            </td>\n                                            <td>{data.option_sku ? data.option_sku : '-'}</td>\n                                            <td>{data.option_price ? data.option_price : '-'}</td>\n                                            <td>\n                                                <div className=\"table-actions\">\n                                                    <button className=\"btn-tbl edit\" onClick={(e) => { this.editAttributeValues(e, data.promize_attribute_values_id) }}><i className=\"fa fa-pencil-alt\"></i></button>\n                                                    <button className=\"btn-tbl delete\" onClick={(e) => { this.deleteAttributeValues(e, index, data.promize_attribute_values_id) }}><i className=\"fa fa-trash-alt\"></i></button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    </React.Fragment>\n                }\n                {\n                    this.props.state.fields.attribute_type == \"text\" && this.props.state.attribute_saved &&\n                    <Text {...this.props} />\n                }\n                {this.props.state.attribute_saved &&\n                    <div className=\"promize-footer-actions\">\n                        <NavLink to=\"/attributes\" className=\"btn btn-promize-secondary\">{\"Cancel\"}</NavLink>\n                        <button className=\"btn btn-promize-primary\" onClick={(e) => { this.saveForm(e) }}>{\"Save\"}</button>\n                    </div>\n                }\n            </div> {this.optionContent()}\n        </form >\n        </React.Fragment>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload,\n        attributeValues: state.attributeValues,\n        attributeValuesImages: state.attributeValuesImages,\n    };\n}\n\n\nexport default connect(mapStateToProps)(Forms);","import React from 'react';\n\nclass switchtoggle extends React.Component {\n  constructor(props) {\n    super(props)\n    this.changeButton = this.changeButton.bind(this);\n  }\n\n  changeButton(e) {\n    let value;\n    if (e.target.checked) {\n      value = this.props.checkValue['first'];\n    } else {\n      value = this.props.checkValue['second'];\n    }\n    this.props.form.handleFieldsChangeByPlugin && this.props.form.handleFieldsChangeByPlugin(e.target.name, value)\n  }\n\n  render() {\n    const changeMethod = this.props.onChange ? this.props.onChange : this.changeButton;\n    return (<div className={this.props.classWrapper ? this.props.classWrapper : \"form-group\" + \" check-mainbox\"}>\n      <div className={\"promize-toggle \" + this.props.className || this.props.className}>\n        <label>{this.props.labelName}</label>\n        <input className=\"tgl tgl-light\" id={this.props.id} onChange={changeMethod} checked={this.props.value == this.props.checkValue['first'] ? true : false} name={this.props.fieldName} type=\"checkbox\" />\n        <label className=\"tgl-btn\" htmlFor={this.props.id}></label>\n      </div>\n    </div>);\n  }\n}\n\nexport default switchtoggle;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {app} from '../../config/app';\nimport noImages from '../../assets/images/no-image.png';\nimport Dropzone from 'react-dropzone'\n\nclass ImageUpload extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            highlight: false\n        }\n        this.setImageKey = this.setImageKey.bind(this);\n        this.setDate = this.setDate.bind(this);\n        this.change = this.change.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n    }\n    /**\n     * Set Data Callback\n     * Todo \n     *  - remove this funcition\n     */\n    setImageKey(){\n        if(this.props.callBack == true && typeof this.props.setImageKey == \"function\"){\n            this.props.setImageKey(this.props.imageType)\n        }\n    }\n    /**\n     * Set Data Callback\n     */\n    setDate(){\n        if(this.props.callBack == true && typeof this.props.setDate == \"function\"){\n            this.props.setDate(this.props.data)\n        }\n    }\n\n    change(e){\n        this.props.form.handleFileSelect(e);\n        e.target.value = null;  \n        this.setImageKey() // Todo: Remove this function call\n        this.setDate()      \n    }\n    \n    onDrop(acceptedFiles){\n        this.props.form.handleFileDrop({\"files\":acceptedFiles},\"image_file\")\n        this.setImageKey() // Todo: Remove this function call\n        this.setDate()\n        this.setState({highlight:false})\n    }\n\n    onDragOver(e){\n        this.setState({highlight:true})\n    }\n\n    onDragLeave(e){\n        this.setState({highlight:false})\n    }\n\n    render() {\n        let {highlight} = this.state\n        return (<Dropzone onDrop={this.onDrop} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                {({getRootProps, getInputProps}) => (\n                    <div className=\"promize-upload\" {...getRootProps()}>\n                        <div className=\"promize-upload-header\">\n                            <label className=\"promize-upload-title\">{this.props.labelName}</label>\n                            <div className=\"custom-upload-product\">\n                                <div className=\"promize-upload-button\">\n                                    <input {...getInputProps()} type=\"file\" name=\"image_file\" id=\"image_file\" onChange={this.change}/>\n                                    <span className=\"file-custom\">Upload Image</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={\"promize-upload-content \" + (highlight?'promize-highlight':'')}>\n                            <div className=\"promize-content-before-upload\">\n                                {!this.props.image_url && <img src={noImages} /> }\n                                {this.props.image_url && <img src={app.APP_IMAGE_BASE_URL + this.props.image_url} />}\n                            </div>\n                        </div>\n                    </div>\n                    )}\n                </Dropzone>\n                );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { image } = state;\n    return {\n        image\n    };\n}\n\nexport default connect(mapStateToProps)(ImageUpload);\n","import React from 'react';\n\n /*\n    * State allows React components to change their output over time in response to user actions, \n     *network responses, and anything else, without violating this rule\n     * React elements are plain objects\n     * React DOM compares the element and its children to the previous one, \n     * and only applies the DOM updates necessary to bring the DOM to the desired state\n     * To render a React element into a root DOM node\n     * node whose contents has changed gets updated by React DOM\n    */\nexport const SubmitButton = ({className, text, response}) => {\n            \n    return <React.Fragment>\n                { <button type=\"submit\" className={className}>{text}</button> }\n           </React.Fragment>\n}","import { CLIPART, CLIPARTS, CLIPART_VALUES, CLIPART_DELETE, CLIPART_VALUES_DELETE, IMAGE_UPLOAD, PENDING, FULFILLED, REJECTED } from \"../../utility/constants\";\nimport { app } from \"../../config/app\";\n\nexport function save(data) {\n    let method = 'POST', url='createRecord';\n\n    data = {\n        ...data,\n        status : true ? 1 : 0,\n        modelName: \"promize_domain_clipart_category\",\n        idKey: \"promize_domain_clipart_category_id\"\n    }\n    if (data.promize_domain_clipart_category_id) {\n        method = 'PUT';\n        url = 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${CLIPART}_${PENDING}`, `${CLIPART}_${FULFILLED}`, `${CLIPART}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\nexport function saveClipartValues(data) {\n    let method = 'POST', url = 'createRecord';\n    data = {\n        ...data,\n        modelName: \"promize_clipart_category_images\",\n        idKey: \"promize_clipart_category_images_id\"\n    }\n    if (data.promize_clipart_category_images_id) {\n        method = 'PUT';\n        url = 'updateRecord';\n        delete data.created_date;\n        delete data.updated_date;\n    }\n    return {\n        types: [`${CLIPART_VALUES}_${PENDING}`, `${CLIPART_VALUES}_${FULFILLED}`, `${CLIPART_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: { receiveType: 'postData' }\n    }\n}\nexport function get(id) {\n    const method = 'GET';\n    return {\n        types: [`${CLIPART}_${PENDING}`, `${CLIPART}_${FULFILLED}`, `${CLIPART}_${REJECTED}`],\n        method: method,\n        url: 'getClipartWithPK/' + id,\n        data: {},\n        payload: { receiveType: 'editData' }\n    }\n}\n\nexport function getAllCliparts() {\n    let data = {\n        modelName:\"promize_domain_clipart_category\",\n        idKey:\"promize_domain_clipart_category_id\",\n        domain_id : app.DOMAIN_ID\n    }\n    const request = {\n        types: [`${CLIPARTS}_${PENDING}`, `${CLIPARTS}_${FULFILLED}`, `${CLIPARTS}_${REJECTED}`],\n        method: 'POST',\n        url: 'getAllRecords',\n        data: data,\n    }\n\n    return request;\n}\n\nexport function getClipartLists() {\n    const request = {\n        types: [`${CLIPARTS}_${PENDING}`, `${CLIPARTS}_${FULFILLED}`, `${CLIPARTS}_${REJECTED}`],\n        method: 'GET',\n        url: 'getAttributeLists/' + app.DOMAIN_ID,\n    }\n\n    return request;\n}\n\nexport function uploadClipartImage(file, typeName, name) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadClipartImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\nexport function deleteClipartValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_clipart_category_images\",\n        idKey:\"promize_clipart_category_images_id\"\n    }\n\tif(data.promize_clipart_category_images_id){\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${CLIPART_VALUES_DELETE}_${PENDING}`, `${CLIPART_VALUES_DELETE}_${FULFILLED}`, `${CLIPART_VALUES_DELETE}_${REJECTED}`],\n        method: 'DELETE',\n        url: 'deleteRecord',\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function changeStatus(actionDetails){\n\tlet {url, actionType, params} = actionDetails;\n    params.status = (params.status == 1) ? 0 : 1;\n    delete params.created_date;\n    delete params.updated_date;\n    params = {\n        ...params,\n        modelName:\"promize_domain_clipart_category\",\n        idKey:\"promize_domain_clipart_category_id\",\n    }\n\treturn {\n\t\ttypes: [`${actionType}_${PENDING}`, `${actionType}_${FULFILLED}`, `${actionType}_${REJECTED}`],\n\t\tmethod: 'PUT',\n\t\turl: `${url}`,\n\t\tpayload: {},\n\t\tdata: params\n\t}\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { validation } from '../../containers/Attributes/Forms';\n\nexport const SimpleSelect = ({emptyOptionText, emptyOptionValue, optionText, optionValue, data, onChangeHandler, ...rest}) => {\n    emptyOptionText = !_.isUndefined(emptyOptionText) ? emptyOptionText : \"Select Parent Clipart\";\n    emptyOptionValue = !_.isUndefined(emptyOptionValue) ? emptyOptionValue : '';\n    return <div className=\"promize-form-group\"> \n                <label className=\"promize-form-control-label\">{rest.labelName && rest.labelName}{rest.validation ? <sup>*</sup> : ''}</label>\n                <select className=\"promize-form-control\"  {...rest} onChange={onChangeHandler}>\n                        <option value={emptyOptionValue}>{emptyOptionText}</option>\n                        {\n                            data && data.map((option) => {\n                                return <option id={`simple-select-${option[optionValue]}`} key={`simple-select-${option[optionValue]}`} value={option[optionValue]}>{option[optionText]}</option>\n                            })\n                        }\n                </select>\n        </div>\n}","import React, { Component } from 'react'\nexport default function Popup(props) {\n  const cancel = e => {\n    typeof props.cancel === \"function\" && props.cancel()\n  }\n  const submit = e => {\n    typeof props.submit === \"function\" && props.submit()\n    cancel()\n  }\n  return (\n    <div className=\"promize-modal-cover-delete-popup\">\n      <div className=\"promize-modal modal-sm\">\n        <div className=\"promize-modal-header\">\n          <h3 className=\"modal-title\">\n            <span>{props.title || \"Pop Up\"}</span>\n          </h3>\n        </div>\n        <div className=\"promize-modal-body\">\n          <div className=\"promize-form-group mt-10\">\n            {props.content && <p>{props.content}</p>}\n          </div>\n        </div>\n        <div className=\"promize-modal-footer df df-end\">\n          <button className=\"btn btn-promize-secondary\" id=\"cancel\" onClick={(e) => cancel(e)}>{props.cancelButton || \"Cancel\"}</button>\n          <button className=\"btn btn-promize-primary\" onClick={(e) => submit(e)}>{props.submitButton || \"Submit\"}</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}