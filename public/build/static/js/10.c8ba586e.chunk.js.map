{"version":3,"sources":["components/form/Search.jsx","actions/products/index.jsx","containers/Products/Forms.jsx","components/productimize/FabricFunction.jsx","components/form/SetOptionPosition.jsx","components/form/SetTabPosition.jsx","components/form/SetBoundary.jsx","containers/Products/Attribute/Options.jsx","containers/Products/Attribute/Cliparts.jsx","containers/Products/Attribute/Image.jsx","containers/Products/Attribute/Text.jsx","components/form/inputMultple.jsx","containers/Products/subTab.jsx","containers/Products/tab.jsx","containers/Products/sectionForm.jsx","containers/Products/edit.jsx","assets/images/no-data.png"],"names":["Search","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","value","this","props","onChange","placeholder","name","Component","get","id","types","concat","PRODUCT","PENDING","FULFILLED","REJECTED","method","url","data","payload","receiveType","save","Object","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","modelName","idKey","promize_customizer_id","saveSection","promize_section_id","SECTION","saveTab","promize_tab_id","created_date","updated_date","TAB","updateBulkRecord","saveSubTab","promize_sub_tab_id","SUB_TAB","deleteRecord","saveTabAttribute","promize_tab_attribute_id","TAB_ATTRIBUTE","saveTabAttributeValues","promize_tab_attribute_values_id","TAB_ATTRIBUTE_VALUES","linkTabAttributeValues","TAB_ATTRIBUTE_VALUES_LIST","linkTabAttributeClipartValues","uploadBaseImage","file","typeName","formData","FormData","append","IMAGE_UPLOAD","requestBodyType","uploadTabImage","uploadTabThumbnailImage","TAB_THUMBNAIL_IMAGE","initialState","fields","domain_id","app","DOMAIN_ID","promize_customizer_name","status","model_image","inputErrors","isEdit","validation","Forms","_this","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closePopup","e","preventDefault","setState","popup","delete","deleteView","state","views","view_name","image_url","file_name","handleClickOutside","bind","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","$","show","hide","newObj","assign","updateView","saveView","hideAddViewPopup","toastr","error","target","imageUpload","response","handleUploadedImage","document","addEventListener","removeEventListener","event","classList","contains","removeClass","addClass","path","index","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","style","display","_components_form_input__WEBPACK_IMPORTED_MODULE_12__","fieldName","labelName","handleViewNameChange","_components_files_ImageUpload__WEBPACK_IMPORTED_MODULE_15__","dataName","imageType","header","onClick","handleUploadView","src","noImages","_this3","Fragment","onSubmit","form","handleProductSubmit","showAddViewPopup","length","displayNoImage","map","key","openImageOptions","title","handleEdit","APP_IMAGE_BASE_URL","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","_components_form_SubmitButton__WEBPACK_IMPORTED_MODULE_13__","text","product","addView","_components_design_Popup__WEBPACK_IMPORTED_MODULE_17__","submitButton","cancel","connect","FabricFunction","canvas","classCallCheck","_objects","_","find","SetOptionPosition","_controlPoints","possibleConstructorReturn","getPrototypeOf","position","left","top","width","height","scaleX","scaleY","angle","controlPoints","cornerSize","hasControls","borderColor","cornerColor","cornerStyle","transparentCorners","defineProperty","currentView","fabricFunction","getInstance","optionView","optionViewPosition","modelImage","tabAttributeValueData","setOptionPosition","console","log","option_images","JSON","parse","option_position","handleInputChange","assertThisInitialized","addBaseImage","addOptionImage","positionChangeCallback","_this$state","baseImage","fabric","Canvas","selection","controlsAboveOverlay","centeredScaling","allowTouchScrolling","on","productimizeType","animate","renderAll","setCanvas","modelId","image","optionData","ele","promize_images_id","setOptionImage","callBack","clear","Image","fromURL","baseImageObject","set","selectable","setHeight","setWidth","originX","originY","add","findByName","warning","uploadedImage","_this$state2","currnetModelImage","_optionViewPosition$c","uploadedImageObject","objectSpread","lockUniScaling","opacity","_this$state3","obj","_this$state4","boundReact","getBoundingRect","x","y","getScaledWidth","getScaledHeight","lockScaling","_this3$state","complete","trigger","_this$state5","object","parseInt","changeCanvasData","xpos","ypos","_this$state6","actualWidth","ratio","actualHeight","_this$state7","onComplete","setCoords","_this4","_this4$state","changeView","_this$state8","updateTabAttributeValues","stringify","success","_this$state9","optionImageObj","remove","_this5","optionViewImageId","values","react_default","promize_images","active","indexOf","_this6","_this7","_this8","form_input","inputType","disabled","js_default","maxValue","minValue","handleInputRangeChange","onChangeComplete","_this9","thumbnail","canvasControls","prevView","nextView","deleteButton","imageCollection","submit","SetTabPosition","tabData","setTabPosition","tabImages","tabImagesPosition","tab_images","tab_images_position","addTabImage","isFetching","isError","handleTabImage","setTabImage","_tabImagesPosition$cu","updateTabImages","tabImageObj","ImageUpload","imageForm","SetBoundary","overlay","clipRect","Rect","fill","addBoundary","rect","addOverlayImage","rectRed","imageWidth","imageHeight","hasRotatingPoint","clipPath","setBoundary","Options","toggle","promize_attribute_values","tab_attribute_values","tab_attribute_data_values","attribute_name","deleteAttributeFromTab","promize_attribute_id","tab_id","class","keys","promize_attribute_values_id","img_data","image_type","push","option_name","option_code","alt","option_sku","option_price","openSetOptionPositionPopup","Cliparts","clipartList","getAssociatedClipart","promize_attribute_clipart_values","promize_domain_clipart_category_id","split","dispatch","clipart","isEmpty","openSetBoundaryPopup","promize_attribute_clipart_values_id","clipart_images","promize_clipart_category_images","clipartImg","promize_product_clipart_image","noData","clipart_name","promize_attribute_image_values","promize_attribute_image_values_id","image_name","image_price","image_sku","image_format","max_upload_size","min_upload_size","Text","fontSizes","fonts","fontColors","getAllFontSizes","getAllFonts","getAllFontColors","fontsList","font_id","fontsizes","font_size_id","fontcolors","promize_font_color_id","promize_attribute_text_values","tab_text_attribute_values","promize_attribute_text_values_id","font_ids","font_size_ids","font_color_ids","default_font_family","font_name","font","default_font_size","font_size","default_color","font_color_name","InputMultple","message","classValidation","classNameCheck","htmlFor","step","inputStep","data-type","dataType","data-name","onBlur","blurEventListner","handleFieldsChange","data-validation-name","maxLength","rows","input","React","Subtab","highlight","onDragOver","ev","dataTransfer","dropEffect","onDragLeave","onDrop","sectIndex","tabIndex","_this$props","subTabIndex","parentTabData","tab_style","draggable","onDragStart","onSubTabDragStart","onSubTabDragOver","onSubTabDrop","tab_name","actionButtons","handleFieldBlur","handleFieldChange","for","tab_layer_no","switchtoggle","tab_required","spanLabel","first","second","checkValue","handleSwitchChange","is_default_tab","inputMultple","tab_description","setDate","setCurrentTab","tabThumbnailImages","tab_icon","radioButton","label","onChangeHandler","handleStyleFieldBlur","handleStyleFieldChange","tab_attribute","tabAttributeData","tab_attribute_data_image_values","tab_attribute_data_text_values","tab_attribute_data_clipart_values","attribute_type","Attribute_Options","default_option","Attribute_Cliparts","Attribute_Text","Attribute_Image","Tabs","getTabContent","Products_subTab","hightlight","subTabHide","displayTab","openTab","tabs","indexVal","sorted_sub_tabs","promize_sub_tabs","sort","b","sort_id","is_sub_tab","onTabDragStart","onTabDragOver","onTabDragEnter","onTabDrop","promize_tab_attributes","onAttributeDragStart","onAttributeDragOver","onAttributeDrop","subTabData","subTab","child_tab_id","sectionvalidation","section_name","SectionForms","setRef","ref","sectionRefs","content","deleteAttributeFromTabFn","deleteIndex","selectedTab","tab_attributes","tab_attr","ids","getAttribute","item","reorder","setData","effectAllowed","dropIndex","getData","attributes","addAttributeToTab","startIndex","othertabs","tabsObject","tabState","list","orderedTabs","reorderTabInSection","Obj","orderedAttributes","reorderAttributeInTab","reorderSubTabInTab","deleteTabFromsectionFn","parentTabId","filter","editSection","keyData","sectionX","getBoundingClientRect","sectionWrapperX","refs","sectionEdit","sections","section_id","section","saveSectionEdit","sectionDelete","sectionDeletefn","sectionIndex","activeSectionId","tab","overlay_image","overlay_position","image_color_settings","tab_thumbnail","default_view","selectedTabs","selectedSubTabs","currnetTabId","searchText","Form","tabImage","productDetails","promize_sections","promize_tabs","tab_index","attribute","attr_index","promize_attribute","attributeData","promize_tab_attribute_values","tab_attr_value","promize_tab_text_attribute_values","promize_tab_text_attribute_values_id","promize_tab_image_attribute_values","tab_image_attribute_values","promize_tab_image_attribute_values_id","createTab","saveSectionToState","saveTabToState","saveTabAttributeToState","saveTabAttributeValuesList","getAllAttributes","new","_this$refs","sectionContainer","sectionAddBtn","sectionContainerBoundBox","sectionAddBtnBoundBox","sectionWrapperWidth","newProps","records","parent_tab_id","saveSubTabToState","tabAttribute","tabAttributevalueslist","tabAttributevalues","tabThumbnailImage","saveTabImage","sectionData","sectionsData","undefined","o","tabAttributeValues","tempObj","promize_tab_clipart_attribute_values_id","tabdata","subtabs","sub_tabs","selectedsub_tabs","includes","closeTabSelectionPopup","endIndex","result","Array","from","counter","_result$splice","splice","removed","slicedToArray","_result$splice3","_result$splice5","subTabs","checked","checkedVal","_this10","openTabSelectionPopup","openSetTabPositionPopup","deleteTabFromsection","_this11","CheckBox","currentComponent","dataList","selectedSubtab","addSubTabToTab","Products_tab","displayNoData","selectedTabsList","activeSection","_this12","tabsArray","entries","addSection","tabKey","addSelectedtab","icon","_this13","toLowerCase","react_router_dom","attributeIcon","history","_this14","saveData","form_SetOptionPosition","form_SetTabPosition","form_SetBoundary","addSectionArea","displayAttributeList","Popup","Edit","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","formValidation","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","view","viewList","openSection","sectValidation","match","params","record","pick","generateUnqId","findIndex","n","react__WEBPACK_IMPORTED_MODULE_7___default","_components_form_switchtoggle__WEBPACK_IMPORTED_MODULE_17__","_Forms__WEBPACK_IMPORTED_MODULE_12__","reset","_sectionForm__WEBPACK_IMPORTED_MODULE_14__","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/10.c8ba586e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID. \n    *With an arrow function, we have to pass it explicitly, \n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\nclass Search extends Component {\n    render() {\n        return <div className=\"search-container\">\n            <input type=\"text\" value={this.props.value || ''} onChange={this.props.onChange} className=\"promize-form-control\" placeholder=\"Search.. \" name=\"searchVal\" />\n            <i className=\"fa fa-search\"></i>\n        </div>\n    }\n\n}\n\nexport default Search;","import { \n    PENDING, FULFILLED, REJECTED,\n    PRODUCT, IMAGE_UPLOAD,TAB_THUMBNAIL_IMAGE, SECTION, TAB, TAB_ATTRIBUTE,TAB_ATTRIBUTE_VALUES,TAB_ATTRIBUTE_VALUES_LIST, SUB_TAB\n} from \"../../utility/constants\";\n/**\n * get the customizer product details\n * @param {Number} id \n */\nexport function get(id){\n    const method = 'POST';\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: 'getProductWithPK/',\n        data: {\n            id\n        },\n        payload: {receiveType:'editData'}\n    }\n}\n/**\n * Create/Update the customizer product\n * @param {Object} data \n */\nexport function save(data){\n    let method = 'POST';\n    data = {\n        ...data,\n        modelName:\"promize_customizer\",\n        idKey:\"promize_customizer_id\"\n    }\n    let url = 'createRecord'\n\tif(data.promize_customizer_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveSection(data){\n    data = {\n        ...data,\n        modelName:\"promize_section\",\n        idKey:\"promize_section_id\"\n    }\n\tlet method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_section_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SECTION}_${PENDING}`, `${SECTION}_${FULFILLED}`, `${SECTION}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab\",\n        idKey:\"promize_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function updateBulkRecord(data){\n    let method = 'POST';\n    let url = 'updateBulkRecord'\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'editData'}\n    }\n}\n\nexport function saveSubTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_sub_tab\",\n        idKey:\"promize_sub_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_sub_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SUB_TAB}_${PENDING}`, `${SUB_TAB}_${FULFILLED}`, `${SUB_TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function deleteRecord(data){\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: \"DELETE\",\n        url: \"deleteRecord\",\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttribute(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute\",\n        idKey:\"promize_tab_attribute_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE}_${PENDING}`, `${TAB_ATTRIBUTE}_${FULFILLED}`, `${TAB_ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTabAttributeValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute_values\",\n        idKey:\"promize_tab_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttributeTextValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_text_attribute_values\",\n        idKey:\"promize_tab_text_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function linkTabAttributeValues(data){\n    let method = 'POST'\n    let url = 'linkTabAttributeValues'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function linkTabAttributeClipartValues(data){\n    let method = 'POST'\n    let url = 'createBulkRecord'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function uploadBaseImage(file,typeName,name){\n    /**\n     * Upload image async action creators\n     * Hanlde the Pending, Fullfilled (Success), Rejected actions\n     *\n     * @return object\n     */\n\tconst formData = new FormData();\n    formData.append('file',file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType:'FormData',\n        url: 'uploadBaseImage',\n        data: formData,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function uploadTabImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function uploadTabThumbnailImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${TAB_THUMBNAIL_IMAGE}_${PENDING}`, `${TAB_THUMBNAIL_IMAGE}_${FULFILLED}`, `${TAB_THUMBNAIL_IMAGE}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport toastr from 'toastr';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport Input from '../../components/form/input';\nimport { SubmitButton } from \"../../components/form/SubmitButton\";\nimport { app } from '../../config/app';\nimport ImageUpload from '../../components/files/ImageUpload';\nimport noImages from '../../assets/images/no-image.png';\nimport Popup from '../../components/design/Popup'\n\nexport function initialState() {\n    const initialState = {\n        fields:\n        {\n            \"domain_id\": app.DOMAIN_ID,\n            \"modelName\" : \"promize_customizer\",\n            \"promize_customizer_id\": \"\",\n            \"promize_customizer_name\": \"\",\n            \"status\": true,\n            \"model_image\": [],\n        },\n        inputErrors: {},\n        isEdit: true,\n    };\n\n    return initialState;\n}\n\nexport const validation = (props) => {\n    const rules = {\n        \"promize_customizer_name\": \"required\",\n    }\n    return rules;\n}\n\nexport const sectionValidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass Forms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            views: {\n                'view_name': '',\n                'image_url': '',\n                'file_name': ''\n            },\n        }\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    showAddViewPopup(e) {\n        e.preventDefault();\n        this.setState({views:{\n            'view_name': '',\n            'image_url': '',\n            'file_name': ''\n        }},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    hideAddViewPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover').hide();\n        const views = this.state.views;\n        const newObj = Object.assign({}, views, {\n            view_name: '',\n            image_url: '',\n            file_name: ''\n        });\n        this.setState({ views: newObj });\n    }\n    handleUploadView(e) {\n        e.preventDefault();\n        const views = this.state.views;\n        if (views.view_name && views.image_url) {\n            if(!views.id){\n                this.props.saveView(views);\n            }else{\n                this.props.updateView(views.id,views);\n            }\n            this.hideAddViewPopup(e);\n        } else {\n            toastr.error(\"Add view name and base image\");\n        }\n    }\n    handleViewNameChange(e) {\n        e.preventDefault();\n        let fields = this.state.views;\n        const newObj = Object.assign({}, fields, {\n            view_name: e.target.value\n        });\n        fields = newObj;\n        this.setState({ views: fields });\n    }\n    handleEdit(views){\n        this.setState({views},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    componentWillReceiveProps(props) {\n        if (props.imageUpload.response !== this.props.imageUpload.response) {\n            this.handleUploadedImage(props);\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (!event.target.classList.contains('btn-popup')) {\n            $('.portlet-dropdown-menu').removeClass('show');\n            $('.portlet-dropdown-menu').addClass('hide');\n        }\n    }\n\n    handleUploadedImage(props) {\n        const response = props.imageUpload.response;\n        if (response.status && response.status === 200) {\n            const fields = this.state.views;\n            let newObj = Object.assign({}, fields, {\n                image_url: response.file.path,\n            });\n            this.setState({ views: newObj });\n        }\n    }\n    openImageOptions(e, index) {\n        e.preventDefault();\n        $('.index-' + index).removeClass('hide');\n        $('.index-' + index).addClass('show');\n    }\n\n    addView() {\n        return (<div className=\"promize-modal-cover\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Add New View\n                        </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-form-group mt-10\">\n                        <Input {...this.props}\n                            fieldName={'view_name'}\n                            value={this.state.views.view_name}\n                            labelName={\"View Name\"}\n                            onChange={(e) => { this.handleViewNameChange(e) }}\n                            validation={true}\n                        />\n                    </div>\n                    <ImageUpload {...this.props}\n                        labelName={\"View Image\"}\n                        fieldName={'image_file'}\n                        dataName={'image_file'}\n                        validation={false}\n                        imageType={\"base_image\"}\n                        image_url={this.state.views.image_url}\n                        header={'View Image'}\n                        value={this.state.views.file_name}\n                    />\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.hideAddViewPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.handleUploadView(e) }}>Upload</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    displayNoImage() {\n        return <div className=\"promize-no-data\">\n            <img src={noImages} />\n            <p className=\"mt-10\">No Views available</p>\n        </div>\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup = (e) => {\n        e && e.preventDefault();\n        this.setState({ popup: false })\n    }\n    delete = (e, data) => {\n        let popup = {};\n        popup.title = \"Remove View\";\n        popup.content = 'Do you want to remove this view?';\n        popup.submit = () => {\n            this.props.deleteView(data.id)\n        }\n        this.setState({ popup })\n    }\n    render() {\n        return <>\n        <form onSubmit={this.props.form.handleProductSubmit} method=\"POST\">\n            <div className=\"promize-card-body\">\n                <div className=\"df\">\n                    <div className=\"wd-30\">\n                        <Input {...this.props}\n                            fieldName={'promize_customizer_name'}\n                            value={this.props.state.fields.promize_customizer_name}\n                            labelName={\"Product Name\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"promize-card-header promize-card-innerheader\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Views</span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <button className=\"btn btn-links\" onClick={(e) => { this.showAddViewPopup(e) }}><i className=\"fa fa-plus\"></i> Add View</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-tab-option-container\">\n                    {this.props.state.fields.model_image.length == 0 && this.displayNoImage()}\n                    {this.props.state.fields.model_image.length > 0 &&\n                        <ul className=\"promize-tab-options\">\n                            {this.props.state.fields.model_image.map((data, index) => {\n                                return <li key={index} className=\"mr-15 mb-15\">\n                                    <div className=\"promize-tab-options-detail\">\n                                        <div className=\"promize-tab-option-header\">\n                                            <p className=\"tab-option-title\">{data.view_name}</p>\n                                            <div className=\"pormize-portlet-dropdown\">\n                                                <button className=\"btn button-dropdown\" onClick={(e) => this.openImageOptions(e, index)}><i className=\"fa fa-ellipsis-v\" ></i></button>\n                                                <div className={\"portlet-dropdown-menu index-\" + index}>\n                                                    <ul className=\"portlet-menu\">\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Edit\" onClick={e => this.handleEdit(data)}><i className=\"fa fa-pencil-alt\"></i> Edit</button></li>\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Delete\" onClick={e => this.delete(e, data)}><i className=\"fa fa-trash-alt\"></i> Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"tab-option-container\">\n                                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                                        </div>\n                                    </div>\n                                </li>\n                            })}\n                        </ul>}\n\n                </div>\n            </div>\n            <div className=\"promize-footer-actions\">\n                <NavLink to=\"/products\" className=\"btn btn-promize-secondary\">{\"Cancel\"}</NavLink>\n                <SubmitButton className=\"btn btn-promize-primary\" text={\"Next\"} response={this.props.product} />\n            </div>\n            {this.addView()}\n        </form>\n        {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup} />}\n        </>\n\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload,\n    };\n}\n\nexport default connect(mapStateToProps)(Forms);","import _ from 'lodash';\nclass FabricFunction{\n    static getInstance(canvas) {\n        return new FabricFunction(canvas);\n    }\n    /**\n     * Create Fabric Function\n     * \n     * @param {Fabric Canvas | Object} canvas Fabric js canvas\n     */\n    constructor(canvas){\n        this.canvas = canvas\n    }\n    setCanvas(canvas){\n        this.canvas = canvas \n    }\n    /**\n     * find the Object from the fabric canvas using the object name\n     * @param {string} name the object name\n     */\n    findByName(name){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['name', name]);\n        }\n    }\n    /**\n     * find the Object from the fabric canvas using the object id\n     * @param {string | number} id the object id\n     */\n    findById(id){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['id', id]);\n        }\n    }\n}\n\nexport default FabricFunction;","/**\n * Todo:\n *  - Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport toastr from 'toastr'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetOptionPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let optionView = {};\n        let optionViewPosition = {};\n        let modelImage = this.props.state.fields.model_image\n        let tabAttributeValueData = this.props.setOptionPosition.data.tabAttributeValueData\n        console.log(tabAttributeValueData)\n        modelImage.map((data, index) => {\n            optionView[data.id] = \"\";\n            optionViewPosition[data.id] = \"\";\n        });\n        if (tabAttributeValueData.option_images && typeof tabAttributeValueData.option_images == \"string\") {\n            optionView = JSON.parse(tabAttributeValueData.option_images)\n        }\n        if (tabAttributeValueData.option_position && typeof tabAttributeValueData.option_position == \"string\") {\n            optionViewPosition = JSON.parse(tabAttributeValueData.option_position)\n        }\n\n        this.state.optionView = optionView\n        this.state.optionViewPosition = optionViewPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addOptionImage = this.addOptionImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, optionView, optionViewPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (optionView[modelId]) {\n                    let option_images = this.props.setOptionPosition.data.optionData.option_images\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            })\n        })\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addOptionImage(data) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"optionImage\")) {\n            toastr.warning(\"Option Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + data.image_url\n            let { optionView, optionViewPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = data.promize_images_id\n            optionViewPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = optionViewPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"optionImage\",\n                    name: \"optionImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the option image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setOptionImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"optionImage\",\n                name: \"optionImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, optionViewPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, optionViewPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"optionImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, optionViewPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                var option_images = this.props.setOptionPosition.data.optionData.option_images\n                if (optionView[modelId]) {\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { optionView, optionViewPosition } = this.state\n        this.props.updateTabAttributeValues({\n            promize_tab_attribute_values_id: this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_values_id,\n            option_images: JSON.stringify(optionView),\n            option_position: JSON.stringify(optionViewPosition)\n        })\n        toastr.success(\"Option Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, optionView, optionViewPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = \"\"\n            optionViewPosition[currnetModelImage.id] = \"\"\n            this.setState({ optionView, optionViewPosition, fields: \"\" })\n            toastr.success(\"The option image is removed\")\n            canvas.remove(optionImageObj)\n        }\n    }\n    /**\n     * Image Collection Section\n     */\n    imageCollection() {\n        let { optionView } = this.state\n        let optionViewImageId = Object.values(optionView)\n        return <div className=\"promize-image-collection\">\n            <div className=\"promize-img-coll df\">\n                <div className=\"promize-img-coll-detail wd-30\">\n                    <div className=\"promize-img-coll-title mb-10\">Image Collection</div>\n                    <div className=\"promize-img-coll-subtitle\">Some sample information about the sample images in followed detailed description,Some sample information about the sample images in followed detailed description.</div>\n                </div>\n                <div className=\"promize-coll-images-section df df-flow wd-70\">\n                    {this.props.setOptionPosition.data.optionData.promize_images && this.props.setOptionPosition.data.optionData.option_images.map((data, index) => {\n                        let active = (optionViewImageId.indexOf(data.promize_images_id) != -1 ? true : false)\n                        return <div className={\"promize-coll-images-items \" + (active ? \"disabled\" : \"\")} key={index} onClick={(e) => { active ? e.preventDefault() : this.addOptionImage(data) }}>\n                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>Delete</button>\n        }\n        return '';\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Option Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    {this.props.setOptionPosition.data.optionData && this.imageCollection()}\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default SetOptionPosition;\n","/**\n * Todo:\n *  -  Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from './../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetTabPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance(\"\")\n        }\n        let modelImage = this.props.state.fields.model_image\n        let tabData = this.props.setTabPosition.data.tabData\n        let tabImages = {}\n        let tabImagesPosition = {}\n        modelImage.map((data, index) => {\n            tabImages[data.id] = \"\";\n            tabImagesPosition[data.id] = \"\";\n        });\n        if (tabData.tab_images) {\n            tabImages = JSON.parse(tabData.tab_images)\n        }\n        if (tabData.tab_images_position) {\n            tabImagesPosition = JSON.parse(tabData.tab_images_position)\n        }\n\n        this.state.tabImages = tabImages\n        this.state.tabImagesPosition = tabImagesPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addTabImage = this.addTabImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentWillReceiveProps(props) {\n        if (!props.imageUpload.isFetching && !props.imageUpload.isError && this.props.imageUpload.isFetching !== props.imageUpload.isFetching) {\n            this.handleTabImage(props);\n        }\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, tabImages, tabImagesPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            })\n        })\n    }\n    handleTabImage(props) {\n        if (props.imageUpload && props.imageUpload.response) {\n            this.addTabImage(props.imageUpload.response.file.path)\n        }\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addTabImage(image) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"tabImage\")) {\n            toastr.warning(\"Tab Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + image\n            let { tabImages, tabImagesPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = image\n            tabImagesPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = tabImagesPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"tabImage\",\n                    name: \"tabImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the Tab image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setTabImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"tabImage\",\n                name: \"tabImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, tabImagesPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, tabImagesPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"tabImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, tabImagesPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { tabImages, tabImagesPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { tabImages, tabImagesPosition } = this.state\n        this.props.updateTabImages({\n            promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n            tab_images: JSON.stringify(tabImages),\n            tab_images_position: JSON.stringify(tabImagesPosition)\n        })\n        toastr.success(\"Tab Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, tabImages, tabImagesPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let tabImageObj = fabricFunction.findByName(\"tabImage\")\n        if (tabImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = \"\"\n            tabImagesPosition[currnetModelImage.id] = \"\"\n            this.setState({ tabImages, tabImagesPosition, fields: \"\" })\n            toastr.success(\"The tab image is removed\")\n            canvas.remove(tabImageObj)\n        }\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"tabImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Tab Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    <div className=\"df-js-center mt-20\">\n                        <div className=\"wd-25\">\n                            <div className=\"upload-image\">\n                                <ImageUpload\n                                    {...this.props}\n                                    form={this.props.imageForm}\n                                    labelName={\"Tab image\"}\n                                    fieldName={'tab_file'}\n                                    dataName={'tab_file'}\n                                    validation={false}\n                                    value={\"\"}\n                                    image_url={\"\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetTabPosition);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from '../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetBoundary extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let modelImage = this.props.state.fields.model_image\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:moving', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:scaling', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n    * call back front the fabric when scale or move the object\n    * @param {FabricObject} obj \n    */\n    positionChangeCallback = obj => {\n        let { fields, fabricFunction, currentView, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        let overlay = fabricFunction.findByName(\"overlay\")\n        if (overlay) {\n            var clipRect = new fabric.Rect({\n                left: obj.left - (overlay.width / 2),\n                top: obj.top - (overlay.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                fill: '',\n            });\n            overlay.set(\"clipPath\", clipRect)\n            canvas.renderAll()\n            this.setState({\n                fields: {\n                    ...fields,\n                    x: obj.left,\n                    y: obj.top,\n                    width: obj.getScaledWidth(),\n                    height: obj.getScaledHeight(),\n                }\n            })\n        }\n    }\n    addBoundary(baseImage) {\n        const canvas = this.state.canvas\n        var rect = new fabric.Rect({\n            left: 0,\n            top: 0,\n            width: canvas.width,\n            height: canvas.height,\n            fill: '#777',\n            selectable: false,\n            opacity: 0.7\n        });\n        canvas.add(rect);\n        this.addOverlayImage(baseImage, () => {\n            var rectRed = new fabric.Rect({\n                left: (canvas.width - 100) / 2,\n                top: (canvas.height - 100) / 2,\n                width: 100,\n                height: 100,\n                fill: '',\n                imageWidth: canvas.width,\n                imageHeight: canvas.height,\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasRotatingPoint: false,\n                productimizeType: 'boundary',\n                name: \"boundaryCtrl\"\n            });\n            canvas.add(rectRed);\n            canvas.renderAll()\n        })\n    }\n    addOverlayImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            var clipRect = new fabric.Rect({\n                left: -50,\n                top: -50,\n                width: 100,\n                height: 100,\n                fill: ''\n            });\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n                clipPath: clipRect,\n                selectable: false,\n                name: \"overlay\"\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n    * View Thmubnail Section\n    */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView = index => {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let {canvas } = this.state\n        object.set(data)\n        canvas.trigger('object:modified', { target: object })\n        object.setCoords();\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange = event => {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"boundaryCtrl\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos\n            this.changeCanvasData({ left }, object,true)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos \n            this.changeCanvasData({ top }, object,true)\n        } else if ((event.target.id === 'width')) {\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                width: width\n            }\n            this.changeCanvasData({ width }, object,true)\n        } else if ((event.target.id === 'height')) {\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                height: height\n            }\n            this.changeCanvasData({ height }, object,true)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                {/* <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div> */}\n            </div>\n        </React.Fragment>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-primary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n        return '';\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e){ \n        // let {tabImages,tabImagesPosition} = this.state\n        console.log(this.props.setBoundary)\n        // this.props.updateTabImages({\n        //     promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n        //     tab_images: JSON.stringify(tabImages),\n        //     tab_images_position: JSON.stringify(tabImagesPosition)\n        // })\n        toastr.success(\"Boundary / Default View Updated Successfully\")\n        this.props.closePopup(e)\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Boundary / Default View</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div>\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetBoundary);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport Switchtoggle from '../../../components/form/switchtoggle';\nimport { SimpleSelect } from '../../../components/form/SimpleSelect';\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n    render() {\n        let promize_attribute_values = this.props.promize_attribute_values\n        let tab_attribute_values = this.props.tab_attribute_values ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-cube\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i> <span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\"> <table className=\"promize-table table-options table-action\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Code</th>\n                                            <th>Image</th>\n                                            <th>Thumbnail</th>\n                                            <th>SKU</th>\n                                            <th>Price ($)</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                       {tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                            let tabAttributeValueData = tab_attribute_values[key]\n                                            let data = promize_attribute_values.find((obj) => { return obj.promize_attribute_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                            data.option_images = [];\n                                            data.promize_images.map((img_data, index) => {\n                                                if (img_data.image_type == \"option_thubnail_image\") {\n                                                } else {\n                                                    data.option_images.push(img_data)\n                                                }\n                                            })\n                                            return <tr key={index}>\n                                                <td>{data.option_name ? data.option_name : '-'}</td>\n                                                <td>{data.option_code ? data.option_code : '-'}</td>\n                                                <td><div className=\"promize-tbl-mi-cvr\"><ul className=\"promize-milist\">\n                                                    {(data.promize_images.length > 0) && data.promize_images.map((img_data, index) => {\n                                                        if (img_data.image_type == 'option_thubnail_image') {\n                                                            return '';\n                                                        }\n                                                        return <li key={index}>\n                                                            {img_data.image_url && <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img\" alt={\" \"} />}\n                                                        </li>\n                                                    })}\n                                                    {!(data.promize_images.length > 0) && <li>{\"-\"}</li>}\n                                                </ul></div></td>\n                                                <td><div className=\"promize-tbl-mi-cvr\">\n                                                {data.promize_images.map((img_data, index) => {\n                                                    if (img_data.image_type == \"option_thubnail_image\") {\n                                                        if(img_data.image_url){ return  <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img-sm\" alt={\" \"} />}\n                                                        else{\n                                                            return <div>{\"-\"}</div>\n                                                        }\n                                                    }\n                                                })}\n                                                </div>\n                                                </td>\n                                                <td>{data.option_sku ? data.option_sku : '-'}</td>\n                                                <td>{data.option_price ? data.option_price : '-'}</td>\n                                                <td>\n                                                <button class=\"btn btn-tbl\"><i class=\"fa fa-pencil-alt\"></i><span class=\"promize-btn-description\">Edit</span></button><button class=\"btn btn-tbl\" onClick={(e) => { this.props.openSetOptionPositionPopup(e, { tabAttributeValueData, data }) }}><i class=\"far fa-object-group\"></i><span class=\"promize-btn-description\">Option Position</span></button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table></div>}\n        </>\n    }\n}\n\n\nexport default Options;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport { getAllCliparts, get } from '../../../actions/cliparts';\nimport noData from '../../../assets/images/no-data.png';\nimport _ from 'lodash'\nclass Cliparts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clipartList: {},\n            toggle: false\n        }\n        this.getAssociatedClipart = this.getAssociatedClipart.bind(this)\n    }\n    componentWillMount() {\n        this.getAssociatedClipart();\n    }\n    getAssociatedClipart(id) {\n        this.props.promize_attribute_clipart_values.length > 0 && this.props.promize_attribute_clipart_values.map((data, index) => {\n            let id = data.promize_domain_clipart_category_id.split(',');\n            id.map((id, index) => {\n                this.props.dispatch(get(id));\n            })\n        })\n\n    }\n    componentWillReceiveProps(props) {\n        if (!props.clipart.isFetching && !props.clipart.isError) {\n            let clipart = props.clipart.response.data, clipartList = this.state.clipartList;\n            clipartList[clipart.promize_domain_clipart_category_id] = clipart\n            this.setState({ clipartList: clipartList });\n        }\n    }\n    render() {\n        let promize_attribute_clipart_values = this.props.promize_attribute_clipart_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        let clipartList = this.state.clipartList;\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-grin-hearts\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { tab_attribute_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    <ul className=\"promize-clipart-options\">\n                        {\n                            tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                let tabAttributeValueData = tab_attribute_values[key]\n                                let optionData = tabAttributeValueData.promize_attribute_clipart_values_id ? tabAttributeValueData : promize_attribute_clipart_values.find((obj) => { return obj.promize_attribute_clipart_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                let clip_ids = optionData.promize_domain_clipart_category_id.split(',');\n                                return clip_ids.map((id, index) => {\n                                    let clipart_images = clipartList[id];\n                                    return clipart_images && clipart_images.promize_clipart_category_images.map((data, index) => {\n                                        let clipartImg = data.promize_product_clipart_image\n                                        return <li>\n                                            <div className=\"promize-clipart-thumb\">\n                                                {clipartImg ? <img src={app.APP_IMAGE_BASE_URL + clipartImg} /> : <img src={noData} />}\n                                                <p>{data.clipart_name}</p>\n                                            </div>\n                                        </li>\n                                    })\n                                })\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clipart: state.clipart,\n    };\n}\n\nexport default connect(mapStateToProps)(Cliparts);","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n\n    render() {\n        let promize_attribute_image_values = this.props.promize_attribute_image_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-images\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, {}) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                        </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                {\n                    tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                        let tabAttributeValueData = tab_attribute_values[key]\n                        let optionData = tabAttributeValueData.promize_attribute_image_values_id ? tabAttributeValueData : promize_attribute_image_values.find((obj) => { return obj.promize_attribute_image_values_id == tabAttributeValueData.promize_attribute_values_id })\n                        return <div className=\"promize-attribute-options\">\n                            <div><span>{\"Image Name\"}</span><span>{\":\"}</span><span>{optionData.image_name}</span></div>\n                            <div><span>{\"Image Price\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_price?optionData.image_price: '-'}</span></div>\n                            <div><span>{\"Image Sku\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_sku ? optionData.image_sku : '-'}</span></div>\n                            <div><span>{\"Image Format\"}</span><span>{\":\"}</span><span>{optionData.image_format}</span></div>\n                            <div><span>{\"Image Max Upload Size\"}</span><span>{\":\"}</span><span>{optionData.max_upload_size}</span></div>\n                            <div><span>{\"Image Min Upload Size\"}</span><span>{\":\"}</span><span>{optionData.min_upload_size}</span></div>\n                        </div>\n                    })\n                }\n            </div>}\n        </>\n    }\n}\n\nexport default Image;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { getAllFonts } from '../../../actions/fontfamily'\nimport { getAllFontSizes } from '../../../actions/fontsize'\nimport { getAllFontColors } from '../../../actions/fontcolor'\nclass Text extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fontSizes: {},\n            fonts: {},\n            fontColors: {},\n            toggle: false\n        }\n    }\n\n    componentWillMount() {\n        this.props.dispatch(getAllFontSizes());\n        this.props.dispatch(getAllFonts());\n        this.props.dispatch(getAllFontColors());\n    }\n\n    componentWillReceiveProps(props) {\n        if (!props.fonts.isFetching && !props.fonts.isError) {\n            let fonts = props.fonts.response.data, fontsList = {};\n            fonts.map((data, index) => {\n                fontsList[data.font_id] = data\n            })\n            this.setState({ fonts: fontsList });\n        }\n        if (!props.fontsizes.isFetching && !props.fontsizes.isError) {\n            let fontsizes = props.fontsizes.response.data, fontsList = {};\n            fontsizes.map((data, index) => {\n                fontsList[data.font_size_id] = data\n            })\n            this.setState({ fontSizes: fontsList });\n        }\n        if (!props.fontcolors.isFetching && !props.fontcolors.isError) {\n            let fontcolors = props.fontcolors.response.data, fontsList = {};\n            fontcolors.map((data, index) => {\n                fontsList[data.promize_font_color_id] = data\n            })\n            this.setState({ fontColors: fontsList });\n        }\n    }\n\n    render() {\n        let { fonts, fontSizes, fontColors } = this.state\n        let promize_attribute_text_values = this.props.promize_attribute_text_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-font\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { type: \"text\", tab_text_attribute_values: this.props.promize_attribute_text_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    {\n                        tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                            let tabAttributeValueData = tab_attribute_values[key]\n                            let optionData = tabAttributeValueData.promize_attribute_text_values_id ? tabAttributeValueData : promize_attribute_text_values.find((obj) => { return obj.promize_attribute_text_values_id == tabAttributeValueData.promize_attribute_values_id })\n                            let font_id = optionData.font_ids.split(',');\n                            let font_size_ids = optionData.font_size_ids.split(',')\n                            let font_color_ids = optionData.font_color_ids.split(',')\n                            return (<>\n                                <div className=\"df\">\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fonts).length > 0 && optionData && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font\"}</p><span className=\"promize-text-highlight-aa\">{fonts[optionData.default_font_family].font_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10\">{\"Fonts\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fonts && font_id.map((id, index) => {\n                                                    let font = fonts[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontSizes).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Size\"}</p><span className=\"promize-text-highlight-aa\">{fontSizes[optionData.default_font_size].font_size}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Sizes\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontSizes && font_size_ids.map((id, index) => {\n                                                    let font = fontSizes[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_size}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontColors).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Color\"}</p><span className=\"promize-text-highlight-aa\">{fontColors[optionData.default_color].font_color_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Colors\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontColors && font_color_ids.map((id, index) => {\n                                                    let font = fontColors[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_color_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            </>\n                            )\n                        })\n                    }\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fonts: state.fonts,\n        fontsizes: state.fontsizes,\n        fontcolors: state.fontcolors,\n    };\n}\n\nexport default connect(mapStateToProps)(Text);","import React from 'react';\n\nclass InputMultple extends React.Component {\n\n\tclassNameCheck() {\n\t\tconst validation = this.props.form.validation(this.props.fieldName)\n\t\tconst message = validation ? this.props.state.inputErrors[this.props.fieldName].message : '';\n\t\tconst classValidation = `form-group ${validation ? 'feild-wrong' : ''} ${this.props.value && !validation ? 'feild-sucess' : ''}`\n\t\tconst className = this.props.validation ? classValidation : 'form-group';\n\t\treturn { 'className': className, 'message': message, 'validation': validation };\n\t}\n\n\tinput() {\n\t\tconst validation = this.classNameCheck();\n\t\treturn (<React.Fragment><div className=\"promize-form-group\">\n\t\t\t<label htmlFor={this.props.fieldName} className=\"promize-form-control-label\">{this.props.labelName}{this.props.validation && <sup>*</sup>}</label>\n\t\t\t<textarea className=\"promize-form-control\"\n\t\t\t\ttype={this.props.inputType ? this.props.inputType : \"text\"}\n\t\t\t\tid={this.props.fieldName}\n\t\t\t\tstep={this.props.inputStep ? this.props.inputStep : \"\"}\n\t\t\t\tdata-type={this.props.dataType || \"text\"}\n\t\t\t\tdata-name={this.props.dataName}\n\t\t\t\tplaceholder={\" \"}\n\t\t\t\tname={this.props.fieldName}\n\t\t\t\tonBlur={this.props.onBlur || this.props.form.blurEventListner}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tonChange={this.props.onChange || this.props.form.handleFieldsChange}\n\t\t\t\tvalue={this.props.value}\n\t\t\t\tdata-validation-name={this.props.labelName}\n\t\t\t\tmaxLength={this.props.maxLength}\n\t\t\t\trows=\"2\" />\n\n\t\t\t{validation['validation'] && <span className=\"promize-form-error\">{`${this.props.labelName} ` + validation['message']}</span>}\n\t\t</div></React.Fragment>);\n\t}\n\n\trender() {\n\n\t\treturn (<React.Fragment>\n\t\t\t{this.input()}\n\t\t</React.Fragment>);\n\t}\n}\n\nexport default InputMultple;\n","import React from 'react'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport RadioButton from '../../components/form/radioButton';\n\nclass Subtab extends React.Component {\n    state = {\n        toggle: false,\n        highlight: false,\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    render() {\n        let {tabData, sectIndex, tabIndex, subTabIndex, parentTabData} = this.props\n        let {highlight} = this.state\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n\n        return <>\n            <div className={\"promize-dragable-tab-container  mb-20\"} draggable onDragStart={e => this.props.onSubTabDragStart(e, tabData, subTabIndex)} onDragOver={e => this.props.onSubTabDragOver(e)} onDrop={e => {this.props.onSubTabDrop(e, subTabIndex, sectIndex, parentTabData.promize_tab_id)}}>\n                <div className=\"promize-widget promize-subtab\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action df\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex, this.props.parentTabData)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                        <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {this.state.toggle && <div className={\"promize-widget-body\"}>\n                    <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                            <div class=\"promize-form-group\">\n                                                <label for=\"tab_layer_no\" class=\"promize-form-control-label\">Choose Default View</label>\n                                                <select class=\"promize-form-control\">\n                                                    <option>Choose</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        {<div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.tab_attribute && Object.keys(tabData.tab_attribute).length > 0 && Object.keys(tabData.tab_attribute).map((key, index) => {\n                                let tabAttributeData = tabData.tab_attribute[key]\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return <div className=\"promize-widget mb-15\" key={index}>\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_attribute_data_values={tab_attribute_data_values} {...tabAttributeData}  {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                </div>\n                            })}\n                        </div>}\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from the <b>Attributes List</b></p>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Subtab","import React, { Component } from 'react'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport SubTab from './subTab'\nimport RadioButton from '../../components/form/radioButton';\n\n\nclass Tabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hightlight: true,\n            toggle: false,\n            subTabHide: {},\n        }\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    getTabContent = (tabData, sectIndex, tabIndex, parentTabData, subTabIndex) => {\n        const data = {\n            tabData,\n            sectIndex,\n            tabIndex,\n            parentTabData, \n            subTabIndex\n        }\n        return <SubTab {...this.props} {...data}/>\n    }\n\n    render() {\n        const { highlight } = this.state\n        const displayTab = this.props.state.openTab\n        const tabs = this.props.state.tabs\n        let { tabData, sectIndex, tabIndex, indexVal } = this.props\n        let sorted_sub_tabs = (tabData.promize_sub_tabs && tabData.promize_sub_tabs.length) > 0 ? (tabData.promize_sub_tabs.sort((a, b)=>{\n            return a.sort_id - b.sort_id\n        })) : []\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <>\n            <div className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onTabDragStart(e, tabData, indexVal)} onDragOver={e => this.props.onTabDragOver(e, indexVal, sectIndex)} onDragLeave ={e=> this.props.onTabDragEnter(e, indexVal, sectIndex)} onDrop={e => {this.props.onTabDrop(e, indexVal, sectIndex)}}>\n                <div className=\"promize-widget\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                            <button className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"btn\" : \"btn toggle\"} onClick={(e) => { this.props.openTab(e, tabIndex, sectIndex) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {<div className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"promize-widget-body db\" : \"promize-widget-body dn\"}>\n                        <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                            <div class=\"promize-form-group\">\n                                                <label for=\"tab_layer_no\" class=\"promize-form-control-label\">Choose Default View</label>\n                                                <select class=\"promize-form-control\">\n                                                    <option>Choose</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey widget-body pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        <div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.promize_tab_attributes && Object.keys(tabData.promize_tab_attributes).length > 0 && <> { \n                             (tabData.promize_tab_attributes).map((data, index) => {\n                                let tabAttributeData = tabData.tab_attribute[data.promize_tab_attribute_id]\n                                if (!tabAttributeData) {\n                                    return false\n                                }\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return   <div key={index} className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onAttributeDragStart(e, tabData, (index+1))} onDragOver={e => this.props.onAttributeDragOver(e)} onDrop={e => {this.props.onAttributeDrop(e, (index+1), sectIndex, tabIndex)}}><div className=\"promize-widget mb-15\"  >\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_values} deleteAttributeFromTab={this.props.deleteAttributeFromTab} {...tabAttributeData}  {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} />}\n                                </div></div>\n                            })}</>}\n                        </div>\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from <b>Attributes List</b></p>\n                        </div>\n                        {tabData.promize_sub_tabs && tabData.promize_sub_tabs.length > 0 &&\n                            <div className=\"mt-15\">\n                                <div className=\"promize-attr-section\">\n                                    <h3 className=\"promize-attr-title\">Sub Tabs</h3>\n                                </div>\n                                {sorted_sub_tabs.map((subTabData, subTabIndex) => {\n                                    let subTab = tabs[subTabData.child_tab_id]\n                                    return subTab && <div className=\"sub-tab-content\" key={subTabIndex}>{this.getTabContent(subTab, sectIndex, subTabData.child_tab_id,tabData, (subTabIndex+1))}</div>\n                                })\n                                }\n                            </div>}\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Tabs","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport { getAllAttributes } from '../../actions/attributes';\nimport noData from '../../assets/images/no-data.png';\nimport CheckBox from '../../components/form/CheckBox';\nimport Search from '../../components/form/Search';\nimport {SetOptionPosition, SetTabPosition, SetBoundary} from \"../../components/form\"\nimport {Link} from 'react-router-dom'\nimport Form from '../../utility/Form';\nimport Tabs from './tab.jsx';\nimport { saveSection, saveTab, saveTabAttribute, linkTabAttributeValues,saveTabAttributeValues,uploadTabImage,uploadTabThumbnailImage,saveSubTab, linkTabAttributeClipartValues, deleteRecord, updateBulkRecord} from '../../actions/products';\nimport Input from '../../components/form/input';\nimport Popup from '../../components/design/Popup'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass SectionForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            editSection:{\n                show: false,\n                data: {}\n            },\n            tab_attribute:{},\n            tab_attribute_values:{},\n            tab:{\n                tab_name:'New Tab',\n                tab_description:'',\n                tab_images:'',\n                tab_images_position:'',\n                tab_layer_no: 0,\n                tab_required: 0,\n                overlay_image:'',\n                overlay_position:'',\n                image_color_settings:'',\n                tab_thumbnail:'',\n                tab_style:JSON.stringify({display:1, height:50, width:50}),\n                sort_id: 0,\n                default_view: 0,\n                is_default_tab: 0,\n                promize_attribute_values:[],\n                tab_attributes:[],\n                default_option: \"\",\n                is_sub_tab : 0,\n                status : 1\n            },\n            selectedTabs: [],\n            selectedSubTabs: [],\n            openTab: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            subTabIndex: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            setOptionPosition:{\n                show:false,\n                data:{}\n            },\n            setTabPosition: {\n                show:false,\n                data:{}\n            },\n            setBoundary: {\n                show: false,\n                data:{}\n            },\n            currnetTabId: '',\n            searchText: '',\n            activeSectionId: '',\n            highlight:false,\n            parentTabId : ''\n        }\n        this.tabImages = Form.getInstance(\n            this, {},\n             {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.tabThumbnailImages = Form.getInstance(\n            this, {},\n            {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabThumbnailImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.section = Form.getInstance(\n            this, {},\n            (fields) => {\n                console.log(\"alert\")\n            },\n            {},\n            {}\n        );\n        this.sectionRefs = {}\n        let sections = {}\n        let tabs = {};\n        this.props.productDetails && this.props.productDetails.promize_sections && this.props.productDetails.promize_sections.map((section,index)=>{\n            sections[section.promize_section_id] = {\n                ...section\n            }\n            section.promize_tabs.map((tab,tab_index)=>{\n                tabs[tab.promize_tab_id] = tab\n                tabs[tab.promize_tab_id].tab_attribute = {}\n                tab.promize_tab_attributes.map((attribute, attr_index)=>{\n                    tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attribute.promize_attribute\n                    if(attribute.promize_attribute){\n                        let attributeData = attribute.promize_attribute\n                        if(attribute.promize_tab_attribute_values){\n                            attributeData.tab_attribute_values = {}\n                            attribute.promize_tab_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_attribute_values[tab_attr_value.promize_tab_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_text_attribute_values){\n                            attributeData.tab_text_attribute_values = {}\n                            attribute.promize_tab_text_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_text_attribute_values[tab_attr_value.promize_tab_text_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_image_attribute_values){\n                            attributeData.tab_image_attribute_values = {}\n                            attribute.promize_tab_image_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_image_attribute_values[tab_attr_value.promize_tab_image_attribute_values_id] = tab_attr_value\n                            })\n                        }\n                        tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attributeData\n                        //tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id].attribute = attributeData\n                    }\n                })\n            })\n        })\n        this.state.sections = sections\n        this.state.tabs = tabs\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.openSetOptionPositionPopup = this.openSetOptionPositionPopup.bind(this);\n        this.openSetBoundaryPopup = this.openSetBoundaryPopup.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.createTab = this.createTab.bind(this);\n        this.addAttributeToTab = this.addAttributeToTab.bind(this);\n        this.saveSectionToState = this.saveSectionToState.bind(this);\n        this.saveTabToState = this.saveTabToState.bind(this);\n        this.saveTabAttributeToState = this.saveTabAttributeToState.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleSwitchChange = this.handleSwitchChange.bind(this)\n        this.handleFieldBlur = this.handleFieldBlur.bind(this)\n        this.saveTabAttributeValuesList = this.saveTabAttributeValuesList.bind(this)\n        this.updateTabAttributeValues = this.updateTabAttributeValues.bind(this)\n        this.updateTabImages = this.updateTabImages.bind(this)\n        this.setCurrentTab = this.setCurrentTab.bind(this)\n        this.actionButtons = this.actionButtons.bind(this)\n        this.saveTabAttributeValues = this.saveTabAttributeValues.bind(this)\n        this.openTab = this.openTab.bind(this)\n    }\n    setRef = (ref,key) => {\n        this.sectionRefs[key] = ref;\n    };\n     \n    componentWillMount() {\n        this.props.dispatch(getAllAttributes());\n        this.props.new && this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: this.props.state.fields.promize_customizer_name,\n            sort_id:1\n        }))\n    }\n    componentDidMount(){\n        let {sectionContainer,sectionAddBtn} = this.refs;\n        if(sectionContainer && sectionAddBtn){\n            let sectionContainerBoundBox = sectionContainer.getBoundingClientRect()\n            let sectionAddBtnBoundBox = sectionAddBtn.getBoundingClientRect()\n            let sectionWrapperWidth = sectionContainerBoundBox.width - sectionAddBtnBoundBox.width\n            this.setState({sectionWrapperWidth})\n        }\n    }\n    componentWillReceiveProps(newProps){\n        let parentTabId = this.state.parentTabId;\n        if(!newProps.section.isFetching && !newProps.section.isError && this.props.section.isFetching != newProps.section.isFetching){\n            this.saveSectionToState(newProps.section.response.records,newProps.section)\n        }\n        if(newProps.tab && newProps.tab.response !== this.props.tab.response && newProps.tab.method == \"POST\" && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            if(parentTabId){\n                let obj = {\n                    parent_tab_id : parentTabId,\n                    child_tab_id : newProps.tab.response.records.promize_tab_id\n                }\n                this.setState({parentTabId : ''},()=>{\n                    this.props.dispatch(saveSubTab(obj));\n                })\n            }\n            this.saveTabToState(newProps.tab.response.records)\n        } \n        if(newProps.tab && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            this.saveTabToState(newProps.tab.response.records)\n        }\n        if(newProps.subTab && !newProps.subTab.isFetching && !newProps.subTab.isError && this.props.subTab.isFetching != newProps.subTab.isFetching){\n            this.saveSubTabToState(newProps.subTab.response.records);\n        }\n        if(newProps.tabAttribute && !newProps.tabAttribute.isFetching && !newProps.tabAttribute.isError && this.props.tabAttribute.isFetching != newProps.tabAttribute.isFetching){\n            this.saveTabAttributeToState(newProps.tabAttribute.response.records);\n        }\n        if(newProps.tabAttributevalueslist && !newProps.tabAttributevalueslist.isFetching && !newProps.tabAttributevalueslist.isError && this.props.tabAttributevalueslist.isFetching != newProps.tabAttributevalueslist.isFetching){\n            this.saveTabAttributeValuesList(newProps.tabAttributevalueslist.response.records)\n        }\n        if(newProps.tabAttributevalues && !newProps.tabAttributevalues.isFetching && !newProps.tabAttributevalues.isError && this.props.tabAttributevalues.isFetching != newProps.tabAttributevalues.isFetching){\n            this.saveTabAttributeValues(newProps.tabAttributevalues.response.records)\n        }if(newProps.tabThumbnailImage && !newProps.tabThumbnailImage.isFetching && !newProps.tabThumbnailImage.isError && this.props.tabThumbnailImage.isFetching != newProps.tabThumbnailImage.isFetching){\n            this.saveTabImage(newProps.tabThumbnailImage.response.file)\n        }\n    }\n    /**\n     * Save Section Data to the state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSectionToState(data,sectionData){\n        let {sections} = this.state;\n        if(data){\n            let sectionsData = sections[data.promize_section_id] || {};\n            sections[data.promize_section_id] = {\n                ...sectionsData,\n                ...data\n            }\n        }\n        this.setState({sections,activeSectionId:data.promize_section_id},()=>{\n            sectionData.method && sectionData.method == \"POST\" && this.createTab({},data.promize_section_id)\n        });\n    }\n    /**\n     * save Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n        saveTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.promize_tab_id] || {};\n            tabs[data.promize_tab_id] = {...tabData,...data}\n        }\n        this.setState({tabs});\n    }\n    /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSubTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.parent_tab_id] || {};\n            if(tabData.promize_sub_tabs == undefined){\n                tabData.promize_sub_tabs = []\n            }\n            tabData.promize_sub_tabs.push(data);\n            tabs[data.parent_tab_id] = {...tabData}\n        }\n        this.setState({tabs});\n    }\n\n     /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    deleteAttributeFromTab = (e, promize_attribute_id, tab_id)=>{\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Attribute\";\n        popup.content = 'Do you want to remove this attribute?';\n        popup.submit = () => {\n            this.deleteAttributeFromTabFn(e, promize_attribute_id, tab_id)\n        }\n        this.setState({popup})\n    }\n    deleteAttributeFromTabFn = (e, promize_attribute_id, tab_id) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        let deleteIndex = 0\n        let selectedTab = {\n            ...tabs[parseInt(tab_id)]\n        }\n        let tab_attributes = tabs[parseInt(tab_id)].promize_tab_attributes || tabs[parseInt(tab_id)].tab_attribute;\n        if(tab_attributes){\n            tab_attributes.map((tab_attr, index)=>{\n                if(tab_attr.promize_attribute_id == promize_attribute_id){\n                    deleteIndex = tab_attr.promize_tab_attribute_id\n                    let obj = {\n                        ids : [tab_attr.promize_tab_attribute_id],\n                        modelName:\"promize_tab_attribute\",\n                        idKey:\"promize_tab_attribute_id\",\n                    }\n                    this.props.dispatch(deleteRecord(obj))\n                }\n            })\n        }\n       deleteIndex && delete selectedTab.tab_attribute[deleteIndex]\n        tabs[parseInt(tab_id)] = selectedTab\n        this.setState({tabs});\n    }\n    /**\n     * save tab attribute to state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveTabAttributeToState(data){\n        let {tabs} = this.state;\n        if(data && data.promize_tab_attribute_id && data.promize_tab_id){\n            let tab = tabs[data.promize_tab_id] || {};\n            tab.promize_tab_attributes = tab.promize_tab_attributes || [];\n            tab.tab_attribute = tab.tab_attribute || {};\n            let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n            tab.tab_attribute[data.promize_tab_attribute_id] = {\n                ...data,\n                ...attributeData\n            }\n           tab.promize_tab_attributes.push(tab.tab_attribute[data.promize_tab_attribute_id])\n            tabs[data.promize_tab_id] = tab\n            this.setState({tabs},()=>{\n                let tabAttributeValues = []\n                let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n                if(attributeData.promize_attribute_values.length > 0){\n                    attributeData.promize_attribute_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_values_id,\n                        })\n                    })\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeValues(tabAttributeValues))\n                }else if(attributeData.promize_attribute_clipart_values.length > 0){\n                    attributeData.promize_attribute_clipart_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_clipart_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_clipart_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_image_values.length > 0){\n                    attributeData.promize_attribute_image_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_image_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_image_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_text_values.length > 0){\n                    attributeData.promize_attribute_text_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_text_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_text_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }\n               \n            })\n        }\n    }\n    /**\n     * save section Tab Attribute value\n     * @param {*} data return data from linkTabAttributeValues Api\n     */\n    saveTabAttributeValuesList(data){\n        let {tabs} = this.state\n        if(data){\n            let promize_tab_attribute_id = data[0].promize_tab_attribute_id;\n            Object.keys(tabs).map((key,index)=>{\n                if(tabs[key].tab_attribute && tabs[key].tab_attribute[promize_tab_attribute_id]){\n                    let tab_attribute = tabs[key].tab_attribute[promize_tab_attribute_id] || {};\n                    data.map((value,index)=>{\n                        tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                        if(value.promize_tab_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_clipart_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_clipart_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_image_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_image_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_text_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_text_attribute_values_id] = {...value}\n                        }\n                    })\n                    tabs[key].tab_attribute[promize_tab_attribute_id] = tab_attribute;\n                    this.setState({tabs})\n                }\n            })\n        }\n    }\n    saveTabAttributeValues(data){\n        let {tabs} = this.state\n        Object.keys(tabs).map((key,index)=>{\n            if(tabs[key].tab_attribute[data.promize_tab_attribute_id]){\n                let tab_attribute = tabs[key].tab_attribute[data.promize_tab_attribute_id] || {};\n                tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                tab_attribute.tab_attribute_values[data.promize_tab_attribute_values_id] = {...data}\n                tabs[key].tab_attribute[data.promize_tab_attribute_id] = tab_attribute\n                this.setState({tabs})\n            }\n        })\n    }\n    saveTabImage(data){\n        let {currnetTabId,tabs} = this.state\n        if(currnetTabId && tabs[currnetTabId]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[currnetTabId].promize_tab_id,tab_icon:data.path}))\n        }\n        this.setState({currnetTabId: ''})\n    }\n    /**\n     * Create Tab\n     * @param {HtmEvent | Object} e \n     */\n    createTab(e,sectIndex){\n        let {tab} = this.state\n        this.props.dispatch(saveTab({...tab,promize_section_id:sectIndex}))\n    }\n    /**\n     * add section\n     */\n    addSection() {\n        this.setState({editSection:{show:false}})\n        this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: \"Section Name\",\n            sort_id:1\n        }))\n    }\n    /**\n     * Update the tab attribute values\n     * @param {object} data \n     */\n    updateTabAttributeValues(data,type){\n        if(type == \"text\"){\n\n        }else{\n            this.props.dispatch(saveTabAttributeValues({\n                ...data\n            }))\n        }\n        \n    }\n    /**\n     * Update Tab Images\n     * @param {HtmlEvent | Object} e Html Element\n     * @param {string} fieldName Field Name\n     */\n    updateTabImages(data){\n        let {tabs} = this.state\n        if(data && tabs){\n            tabs[data.promize_tab_id] = {\n                ...tabs[data.promize_tab_id],\n                ...data\n            }\n            this.setState({tabs})\n            this.props.dispatch(saveTab({...data}))\n        }\n    }\n    onChangeHandler = (e)=>{\n        e.preventDefault()\n        let {tabs} = this.state;\n        let promize_tab_id = e.target ? parseInt(e.target.getAttribute('promize_tab_id')) : ''\n        if(promize_tab_id && tabs){\n            let selectedTab = tabs[promize_tab_id] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style.display = e.target.value ? parseInt(e.target.value) : 1;\n            selectedTab = {\n                ...tabs[promize_tab_id] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[promize_tab_id] = selectedTab\n            this.setState({tabs})\n            this.props.dispatch(saveTab(tabs[promize_tab_id]))\n        }\n    }\n    /**\n     * On Drag Start\n     * @param {Event | Object} ev event object from the Drag\n     * @param {Object} item The drag Item\n     * @param {number} reorder Reorder number\n     */\n    onDragStart = (ev, item, reorder) => {\n        ev.dataTransfer.setData(\"id\", item[\"promize_attribute_id\"]);\n        ev.dataTransfer.setData(\"reorder\", reorder);\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    /**\n     * On Drop\n     * @param {Event | Object} ev event object from the Drag\n     * @param {number} sectIndex Index of the section\n     * @param {number} dropIndex Index of the drop positon \n     */\n    onDrop = (ev, sectIndex, dropIndex) => {\n        let id = ev.dataTransfer.getData(\"id\");\n        if(dropIndex != null && sectIndex != null){\n            this.props.attributes.response.data.map((data, index) => {\n                if(data.promize_attribute_id == id) this.addAttributeToTab(ev, data, sectIndex, dropIndex);\n            });\n        }\n        this.setState({ highlight: false });\n    };\n    /**\n     * add Tab to section\n     * \n     * @param {HtmlEvent | Object} e Html Event link click\n     * @param {number} tabdata Tab data\n     * @param {number} sectIndex section index\n     */\n    addTabToSection(e, tabdata, sectIndex) {\n        e.preventDefault();\n        let sections = this.state.sections;\n        if (sections[sectIndex].tabs == undefined) {\n            sections[sectIndex].tabs = [];\n        }\n        let selectedTabs = sections[sectIndex].tabs;\n        selectedTabs.push(tabdata);\n        sections[sectIndex].tabs = selectedTabs;\n        this.setState({ sections });\n    }\n    addAttributeToTab(e, tabdata, sectIndex, dropIndex){\n        e.preventDefault();\n        this.props.dispatch(saveTabAttribute({\n            promize_tab_id: dropIndex,\n            promize_attribute_id: tabdata.promize_attribute_id,\n            sort_id: 1\n        }))\n    }\n    /**\n     * Tab Drag Start\n     * @param {Event | Object} ev Event Obect\n     * @param {Object} item Tab promize attribute\n     * @param {Object} startIndex Start Index\n     */\n    onTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"startIndex\", startIndex);\n        ev.dataTransfer.setData(\"key\", \"tab\")\n        ev.dataTransfer.effectAllowed = \"move\";\n        //this.openTab(ev, '', '');\n    }\n    onTabDragEnter = (ev, dropIndex, sectIndex) =>{\n        ev.preventDefault();\n        ev.target.style['background'] = '';\n       // $(ev.target).removeClass(\"drag-effect\"); \n    }\n    onTabDragOver  = (ev, dropIndex, sectIndex) => {\n        ev.preventDefault();\n        console.log(\"event.tra\", ev.target.getAttribute('class'))\n        if(ev.target.getAttribute('class') == \"promize-widget-header\"){\n        ev.target.style['background'] = 'lightblue';\n        }\n       // $(ev.target).addClass(\"drag-effect\"); \n        ev.dataTransfer.dropEffect = \"move\";\n       \n    };\n    onTabDrop = (ev, dropIndex, sectIndex) => {\n        ev.target.style['background'] = '';\n        //$(ev.target).removeClass(\"drag-effect\"); \n        let startIndex = ev.dataTransfer.getData(\"startIndex\");\n        let key = ev.dataTransfer.getData(\"key\");\n        if(key && key == 'tab'){\n            let tabs = [], othertabs = [], tabsObject = {};\n            let tabState = this.state.tabs;\n            Object.keys(tabState).map((key, index)=>{\n                if(parseInt(tabState[key].promize_section_id) == parseInt(sectIndex) && tabState[key].is_sub_tab == 0){\n                    tabs.push(tabState[key])\n                }else{\n                    othertabs.push(tabState[key])\n                }\n            })\n            let list = tabs.sort((a, b)=>{\n                return a.sort_id - b.sort_id\n            })\n            let orderedTabs = this.reorderTabInSection(list, parseInt(startIndex), parseInt(dropIndex));\n            let Obj = {\"data\" : orderedTabs,\n                \"obj\" : {modelName:\"promize_tab\", idKey:\"promize_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            orderedTabs.length > 0 && orderedTabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            othertabs.length > 0 && othertabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            this.setState({tabs : tabsObject});\n        }\n    };\n\n    onSubTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"subTabStartIndex\", startIndex);\n        ev.dataTransfer.setData(\"subTabkey\", \"subtab\")\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    onSubTabDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n    };\n    onSubTabDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"subTabStartIndex\");\n        let key = ev.dataTransfer.getData(\"subTabkey\");\n        let list = '';\n        if(key && key == 'subtab'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_sub_tabs\n            let orderedAttributes = this.reorderAttributeInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_sub_tabs = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_sub_tab\", idKey:\"promize_sub_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n    };\n\n    onAttributeDragStart = (ev, item, startIndex) => {\n         ev.dataTransfer.setData(\"keyval\", \"attribute\")\n         ev.dataTransfer.setData(\"attrStartIndex\", startIndex);\n         ev.dataTransfer.effectAllowed = \"copy\";\n     }\n     onAttributeDragOver = ev => {\n         ev.preventDefault();\n         ev.dataTransfer.dropEffect = \"copy\";\n     };\n     onAttributeDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"attrStartIndex\"); \n        let key = ev.dataTransfer.getData(\"keyval\");\n        let list = '';\n        if(key && key == 'attribute'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_tab_attributes\n            let orderedAttributes = this.reorderSubTabInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_tab_attributes = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_tab_attribute\", idKey:\"promize_tab_attribute_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n     };\n    /**\n     * Add Suby Tab to the Tab\n     * @param {Html | Object} e Html Event link click \n     */\n    addSubTabToTab(e) {\n        e.preventDefault();\n        let sectIndex = this.state.subTabIndex.sectIndex;\n        let tabIndex = this.state.subTabIndex.tabIndex;\n        let sections = this.state.sections;\n        let subtabs = this.state.selectedSubTabs;\n        if (sections[sectIndex].tabs[tabIndex].sub_tabs == undefined) {\n            sections[sectIndex].tabs[tabIndex].sub_tabs = [];\n        }\n        let selectedsub_tabs = sections[sectIndex].tabs[tabIndex].sub_tabs;\n        this.props.attributes.response.data.map((data, index) => {\n            if (subtabs.includes(data.promize_attribute_id)) {\n                selectedsub_tabs.push(data);\n            }\n        });\n        sections[sectIndex].tabs[tabIndex].sub_tabs = selectedsub_tabs;\n        this.setState({ sections, selectedSubTabs: [] });\n        this.closeTabSelectionPopup(e);\n    }\n    /**\n     * Reorder Tab in section\n     * @param {Array} list Reorder List\n     * @param {number} startIndex Start Index\n     * @param {number} endIndex End Index\n     * @returns {Array} result of the reorder\n     */\n    reorderTabInSection(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        result = result.filter(function (obj) {\n            return obj.is_sub_tab !== 1;\n        });\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            if(data.is_sub_tab != 1){\n                counter = counter+ 1\n                data.sort_id = counter;\n            }\n        })\n        return result;\n    }\n    reorderSubTabInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            counter = counter+ 1\n            data.sort_id = counter;\n        })\n        return result;\n    }\n\n    reorderAttributeInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            data.sort_id = counter;\n            counter = counter+ 1\n        })\n        return result;\n    }\n\n    /**\n     * delete Tab from the section\n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    deleteTabFromsection(tabIndex, sectIndex, parentTabId) {\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Tab\";\n        popup.content = 'Do you want to remove this tab?';\n        popup.submit = e => {\n            this.deleteTabFromsectionFn(tabIndex, sectIndex, parentTabId, tabs)\n        }\n        this.setState({popup})\n    }\n    deleteTabFromsectionFn = (tabIndex, sectIndex, parentTabId, tabs) => {\n        let obj = {\n            ids : [tabIndex],\n            modelName:\"promize_tab\",\n            idKey:\"promize_tab_id\",\n        }\n        if(tabs[tabIndex].is_sub_tab && tabs[parentTabId.promize_tab_id].promize_sub_tabs){\n        tabs[parentTabId.promize_tab_id].promize_sub_tabs = tabs[parentTabId.promize_tab_id].promize_sub_tabs.filter((data)=>{\n            return data.child_tab_id != tabIndex\n        })\n        }\n        delete tabs[tabIndex]\n        this.props.dispatch(deleteRecord(obj))\n        this.setState({tabs});\n    }\n    /**\n     * Open Tab Index\n     * @param {HtmlEvent | Object } e \n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    openTab(e, tabIndex, sectIndex) {\n      //  e.preventDefault();\n        let tab = this.state.openTab;\n        if (parseInt(tab.tabIndex) !== parseInt(tabIndex)) {\n            tab.sectIndex = parseInt(sectIndex);\n            tab.tabIndex = parseInt(tabIndex);\n        } else {\n            tab.sectIndex = '';\n            tab.tabIndex = '';\n        }\n        this.setState({ openTab: tab });\n\n    }\n    /**\n     * Open Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of the section\n     * @param {number} tabIndex Index of the tab\n     */\n    openTabSelectionPopup(e, tabData, sectIndex, tabIndex) {\n        let {tab}  = this.state\n        e.preventDefault();\n        let obj ={\n            ...tab,\n            is_sub_tab : 1,\n            promize_section_id : parseInt(tabData.sectIndex)\n        }\n        this.setState({parentTabId : parseInt(tabData.tabIndex)},()=>{\n            this.props.dispatch(saveTab(obj));\n        })\n        // let subTabIndex = this.state.subTabIndex;\n        // subTabIndex.sectIndex = sectIndex;\n        // subTabIndex.tabIndex = tabIndex;\n        // this.setState(subTabIndex);\n        // $('.promize-modal-cover-tab-selection').show();\n    }\n    /**\n     * Close Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    closeTabSelectionPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover-tab-selection').hide();\n    }\n    /**\n     * Select Sub tab\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    selectedSubtab(e) {\n        e.preventDefault();\n        let subTabs = this.state.selectedSubTabs;\n        subTabs.push(parseInt(e.target.id));\n        this.setState({ selectedSubTabs: subTabs });\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetTabPositionPopup(e, data) {\n        e.preventDefault();\n        this.setState({setTabPosition:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n     /**\n     * Open Set Boundary Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} Data Option Data Object\n     */\n    openSetBoundaryPopup(e, data) {\n        e.preventDefault();\n        this.setState({setBoundary:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetOptionPositionPopup(e, data) {\n        e.preventDefault();\n        let setOptionPosition = this.state.setOptionPosition\n        this.setState({setOptionPosition:{\n            ...setOptionPosition,\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup(e) {\n        e && e.preventDefault();\n        this.setState({setOptionPosition:{\n            show:false,\n            data:{}\n        },setTabPosition:{\n            show:false,\n            data:{}\n        },setBoundary:{\n            show:false,\n            data:{}\n        },popup: false})\n    }\n    /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleFieldBlur(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:e.target.value}))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleFieldChange(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = e.target.value;\n            this.setState({tabs});\n        }\n    }\n        /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleStyleFieldBlur = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.props.dispatch(saveTab(tabs[tabIndex]))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleStyleFieldChange = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.setState({tabs})\n        }\n    }\n    /**\n     * Handler Switch Change\n     * @param {Html | Object} e \n     * @param {string} fieldName \n     * @param {number} tabIndex \n     */\n    handleSwitchChange(e, fieldName, tabIndex){\n       // e.preventDefault();\n        let {tabs} = this.state\n        let value = false;\n        if(e.target.checked){\n            value = true\n        }\n        let checkedVal = value ? 1 : 0\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = value;\n            this.setState({tabs},()=>{\n                this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:checkedVal}))\n            });\n        }\n    }\n\n    /**\n     * \n     * @param {Object} tabData Tab Data\n     * @param {number} sectIndex Index of the section\n     * @param {*} tabIndex Index of the section\n     */\n    actionButtons(tabData, sectIndex, tabIndex, parentTabData) {\n        return (<React.Fragment>\n            {!parentTabData && <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openTabSelectionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Add Subtab\">\n                    <i className=\"fa fa-folder-open\"></i><span class=\"promize-btn-description\">Add Sub-Tab</span>\n                </button>\n            </li>}\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openSetTabPositionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Set Tab Position\">\n                    <i className=\"fa fa-image\"></i><span class=\"promize-btn-description\">Tab Image</span>\n                </button>\n            </li>\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.deleteTabFromsection(parseInt(tabIndex), parseInt(sectIndex),parentTabData) }} title=\"Delete\">\n                    <i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span>\n                </button>\n            </li>\n        </React.Fragment>\n        )\n    }\n    /**\n     * tab Selection Popup\n     */\n    tabSelectionPopup() {\n        return (<div className=\"promize-modal-cover-tab-selection\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Select Sub-Tabs\n                    </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-options\">\n                        <Search />\n                        <div className=\"promize-dragable-container\">\n                            {(this.props.attributes.response.data != undefined) &&\n                                <CheckBox {...this.props}\n                                    currentComponent={this}\n                                    dataList={this.props.attributes.response.data}\n                                    fieldName={'TabList'}\n                                    value={this.state.selectedSubTabs}\n                                    onChangeHandler={this.selectedSubtab}\n                                    labelName={\" \"}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.closeTabSelectionPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.addSubTabToTab(e) }}>Submit</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    setCurrentTab(currnetTabId){\n        this.setState({currnetTabId})\n    }\n    /**\n     * \n     * @param {Object} tabData Tab Data object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of Tab\n     */\n    addSelectedtab(tabData, sectIndex, tabIndex, indexVal) {\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <Tabs key={tabIndex} {...this.props} indexVal={indexVal} onDrop={this.onDrop} onTabDragStart={this.onTabDragStart} onTabDragOver={this.onTabDragOver} onTabDragEnter={this.onTabDragEnter}  onTabDrop={this.onTabDrop} onSubTabDragStart={this.onSubTabDragStart} onSubTabDragOver={this.onSubTabDragOver} onSubTabDrop={this.onSubTabDrop} onAttributeDragStart={this.onAttributeDragStart} onAttributeDragOver={this.onAttributeDragOver} onAttributeDrop={this.onAttributeDrop} tabData={tabData} sectIndex={sectIndex} tabIndex={tabIndex} state={this.state} actionButtons={this.actionButtons} openTab={this.openTab} deleteAttributeFromTab={this.deleteAttributeFromTab} onChangeHandler={this.onChangeHandler} handleFieldBlur={this.handleFieldBlur} handleFieldChange={this.handleFieldChange} handleStyleFieldChange={this.handleStyleFieldChange} handleStyleFieldBlur={this.handleStyleFieldBlur} handleSwitchChange={this.handleSwitchChange} setCurrentTab={this.setCurrentTab} displayNoData={this.displayNoData} openSetOptionPositionPopup={this.openSetOptionPositionPopup} openSetBoundaryPopup={this.openSetBoundaryPopup} selectedTabsList={this.selectedTabsList} tabThumbnailImages = {this.tabThumbnailImages} />\n    }\n    /**\n     * Select Tab \n     * @param {Object} tabData Tab data Object\n     * @param {number} sectIndex Index Section\n     * @param {*} tabIndex Index of tab\n     * @param {*} subTabIndex Index of subtab\n     */\n    selectedTabsList(tabData, sectIndex, tabIndex, subTabIndex) {\n        return <div key={subTabIndex} className=\"promize-dragable-tab-container mr-10\" >\n            <div className=\"promize-widget mb-10\">\n                <div className=\"promize-widget-header\">\n                    <h3 className=\"promize-widget-title\">\n                        {tabData.attribute_name}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    }\n    editSection = (id,keyData) =>{\n        let sectionX = this.sectionRefs[keyData].getBoundingClientRect().x || 0\n        let sectionWrapperX = this.refs[\"sectionWrapper\"].getBoundingClientRect().x || 0\n        let sectionEdit = this.state.sections[id]\n        let x = sectionX - sectionWrapperX \n        this.setState({editSection:{show:true,data:{section_id:id,section:sectionEdit,x}}})\n    }\n    sectionEdit = e => {\n        const editSection = this.state.editSection\n        const section = editSection.data.section\n        editSection.data.section = {...section,\n            section_name: e.target.value || \"\"\n        }\n        this.setState({editSection:{...editSection}})\n    }\n    saveSectionEdit = (e,editSection) => {\n        toastr.success(\"Section Name Updated\");\n        this.props.dispatch(saveSection({\n            promize_section_id:editSection.data.section.promize_section_id, \n            section_name:editSection.data.section.section_name\n        }))\n        this.setState({editSection:{show:false}})\n    }\n    sectionDelete = (e,editSection) => {\n        let popup = {};\n        popup.title = \"Remove Section\";\n        popup.content = 'Do you want to remove this section?';\n        popup.submit = () => {\n            this.sectionDeletefn(e,editSection)\n        }\n        this.setState({popup})\n    }\n    sectionDeletefn = (e,editSection) => {\n        const {sections} = this.state;\n        let sectionIndex = editSection.data.section.promize_section_id\n        let obj = {\n            ids : [sectionIndex],\n            modelName:\"promize_section\",\n            idKey:\"promize_section_id\",\n        }\n        delete sections[sectionIndex]\n        this.props.dispatch(deleteRecord(obj))\n        let activeSectionId = Object.keys(sections)[0]\n        this.setState({sections,activeSectionId,editSection:{show:false}});\n    }\n    /**\n     * Add section area\n     */\n    addSectionArea() {\n        const {sections,tabs,editSection} = this.state;\n        let {activeSectionId} = this.state;\n        let counter = 0\n        let tabsArray = []\n        if(tabs){\n            tabsArray = Object.entries(tabs).sort(function(a, b) {\n                return a[1].sort_id - b[1].sort_id;\n             })\n        }\n        let sectionRows,activeSection;\n        if(!activeSectionId && sections){\n            activeSectionId = Object.keys(sections)[0]\n        }\n        activeSection = sections[activeSectionId]\n        if (Object.keys(sections).length > 0) {\n            sectionRows = <React.Fragment>\n                <div className=\"promize-prdt-section-container mb-15\" ref=\"sectionContainer\">\n                    <ul className=\"promize-prdt-section-list\" style={{width:(this.state.sectionWrapperWidth?this.state.sectionWrapperWidth+\"px\":\"100%\")}} ref=\"sectionWrapper\">\n                        {Object.keys(sections).map((keyData, sectIndex) => {\n                            let data = sections[keyData];\n                            return <li className={keyData == activeSection.promize_section_id && \"active\"} ref={ref => this.setRef(ref,keyData)}>\n                                <div className=\"promize-section-name\" onClick={(e)=>{e.preventDefault();this.setState({activeSectionId:keyData})}}>\n                                    <span className=\"edit-icon\" onClick={e => this.editSection(keyData,keyData)}><i className=\"fa fa-pencil-alt\"></i></span>\n                                    <span>{data.section_name}</span>\n                                    <span className=\"promize-section-status active\"></span>\n                                </div>\n                            </li>                      \n                        })}\n                    </ul>\n                    <div className=\"pormize-abs-rght\" ref=\"sectionAddBtn\">\n                        <button className=\"btn btn-links\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                    </div>\n                    {editSection.show && <div className=\"promize-card promize-card-edit\" style={{left:editSection.data.x+\"px\"}}>\n                    <div className=\"promize-card-body\">\n                            <Input\n                                form={this.section}\n                                fieldName={'section_name'}\n                                value={editSection.data.section.section_name}\n                                labelName={\"Section Name\"}\n                                validation={false}\n                                onChange={this.sectionEdit}\n                            />\n                            <div className=\"df df-end\">\n                                {Object.keys(sections).length > 1 && <button className=\"btn btn-promize-secondary\" onClick={e => this.sectionDelete(e,editSection)}><i className=\"fa fa-trash\"></i> Remove</button>}\n                                <button className=\"btn btn-promize-primary\" onClick={e => this.saveSectionEdit(e,editSection)}>Save</button>\n                            </div>\n                            \n                    </div>\n                </div>}\n                </div>\n                {activeSection &&\n                    <div className=\"promize-dragable-container \">\n                        {tabsArray && tabsArray.length > 0 &&\n                            tabsArray.map((tabKey, tabIndex) => {\n                            if(tabKey[1].promize_section_id == activeSection.promize_section_id){\n                                if(tabKey[1].is_sub_tab == 1) return ''\n                                counter = counter +1\n                                return this.addSelectedtab(tabKey[1], activeSection.promize_section_id, tabKey[0], counter)\n                            }\n                        })}\n                    \n                        <div className=\"text-right\">\n                            <button onClick={(e)=>this.createTab(e,activeSection.promize_section_id)} className=\"btn btn-promize-primary\">Add Tab</button>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        } else {\n            sectionRows = <React.Fragment>\n                <div>\n                    <button className=\"btn btn-rnd\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                </div>\n                {this.displayNoData(\"No Sections available\")}\n            </React.Fragment>\n        }\n        return sectionRows;\n    }\n    displayNoData(message) {\n        return <div className=\"promize-no-data\">\n            <img src={noData} />\n            <p className=\"mt-10\">{message}</p>\n        </div>\n    }\n    attributeIcon(type){\n        let icon = 'fa fa-grin-hearts'\n        if(type == 'text'){\n            icon = 'fa fa-font'\n        }else if(type == 'image'){\n            icon = 'fa fa-images'\n        }else if(type == 'option'){\n            icon = 'fa fa-cube'\n        }\n        return <i className={icon}></i>\n    }\n    displayAttributeList() {\n        const {sections,searchText} = this.state;\n        let attributeData = this.props.attributes.response.data\n        if(searchText){\n            attributeData = attributeData.filter((attribute)=>{\n                let name = attribute.attribute_name.toLowerCase()\n                return name.indexOf(searchText.toLowerCase()) !== -1\n            })\n        }\n        return (\n            <div className=\"promize-card\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Attributes List</span>\n                        </h3>\n                        <p className=\"promize-title-subtitle\">Drag and drop attributes to tabs</p>\n                    </div>\n                    <div className=\"promize-sm-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <Link to={\"/attributes/add/\"} className=\"btn btn-links\"><i className=\"fa fa-plus\"></i> Add New</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-card-body\">\n                    <div className=\"promize-options\">\n                        <Search value={searchText} onChange={(e)=>{e.preventDefault();this.setState({searchText:(e.target.value||'')})}}/>\n                        <div className=\"promize-dragable-container mt-15\">\n                            <ul className=\"promize-dragable-list\">\n                                {( attributeData != undefined) &&\n                                    attributeData.map((data, index) => {\n                                        return <li className=\"mb-10\" key={index} draggable onDragStart={e => this.onDragStart(e, data, false)}>\n                                            <div className={\"dragable-items df ind\" + index}>\n                                                <div className=\"option-action\">\n                                                    <button className=\"option-btn\">\n                                                        <i className=\"fa fa-bars\"></i>\n                                                    </button>\n                                                </div>\n                                                <div className=\"option-name df-al-center pl-10 wd-100\">\n                                                    {this.attributeIcon(data.attribute_type)}{data.attribute_name}<Link to={\"/attributes/edit/\" + data.promize_attribute_id} ><i className=\"fa fa-eye\"></i></Link>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    })}\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-footer-actions\">\n                </div>\n            </div>\n        )\n    }\n    saveData(){\n        toastr.success(\"Records saved successfully\");\n        this.props.history.push('/products');\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-page-title-wrapper df-sp-btwn\">\n                <h3 className=\"promize-page-title\">{this.props.state.fields.promize_customizer_name}</h3>\n                <button className=\"btn btn-promize-primary\" onClick={(e) => { this.saveData() }}>Save</button>\n            </div>\n            <div className=\"promize-row df\">\n                <div className=\"wd-70 mr-15\">\n                    {/* <div>{this.tabSelectionPopup()}</div> */}\n                        {this.state.setOptionPosition.show && <SetOptionPosition {...this.state} {...this.props} closePopup={this.closePopup} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                        {this.state.setTabPosition.show && <SetTabPosition   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabImages={this.updateTabImages}/>}\n                        {this.state.setBoundary.show && <SetBoundary   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                    <div> {this.addSectionArea()}</div>\n                </div>\n                <div className=\"wd-30 promize-sticky-20\">\n                    {this.displayAttributeList()}\n                </div>\n            </div>\n            {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup}/>}\n        </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        attributes: state.attributes,\n        section: state.section,\n        tab: state.tab,\n        subTab: state.subTab,\n        tabAttribute: state.tabAttribute,\n        tabAttributevalues: state.tabAttributevalues,\n        tabAttributevalueslist: state.tabAttributevalueslist,\n        tabThumbnailImage: state.tabThumbnailImage\n    };\n}\n\n\nexport default connect(mapStateToProps)(SectionForms);","import React, { Component } from 'react';\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Form from '../../utility/Form';\nimport Forms,{initialState,validation} from './Forms';\nimport { save,get,uploadBaseImage,saveSection } from '../../actions/products';\nimport SectionForms, { sectionvalidation } from './sectionForm'\nimport {app} from '../../config/app';\nimport {generateUnqId} from './../../utility/Utility'\nimport Switchtoggle from '../../components/form/switchtoggle';\n\nclass Edit extends Component {\n    /*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID.\n    *With an arrow function, we have to pass it explicitly,\n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\n   \n    constructor(props){\n        super(props);\n        this.isEdit = true;\n\n        const formValidation = validation(props);\n\n        this.product = Form.getInstance(\n                this,formValidation,\n                (fields) => {\n                    this.props.dispatch(save(fields))\n                },\n                //file upload\n                (views) => {\n                    this.props.dispatch(uploadBaseImage(views, 'base_image', 'imageUpload'))\n                },\n                {}\n            );\n\n        this.state = initialState(this.isEdit);\n        this.state.view = {}\n        this.saveView = this.saveView.bind(this)\n        this.state.viewList = [];\n        this.initialState = initialState(this.isEdit);\n        this.state.openSection = false;\n        this.state.sections = {\n            promize_customizer_id: '',\n            section_name: '',\n            sort_id: '',\n            \"status\": true,\n        }\n        this.state.productDetails = ''\n        let sectValidation = sectionvalidation(props)\n        this.section = Form.getInstance(\n            this, sectValidation,\n            () => {\n                this.props.dispatch(saveSection(this.state.sections))\n            },\n            {},\n            {}\n        );  \n        this.saveView = this.saveView.bind(this)\n        this.updateView = this.updateView.bind(this)\n        this.deleteView = this.deleteView.bind(this)\n    }\n    /* componentDidMount() is invoked immediately after a component is mounted.\n    * Initialization that requires DOM nodes should go here.\n    * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n   */\n    componentDidMount(){\n        if(this.props.match.params.id){\n            this.props.dispatch(get(this.props.match.params.id));\n        }\n    }\n    \n    /* componentWillReceiveProps() is invoked before a mounted component receives new props.\n    *  If you need to update the state in response to prop changes (for example, to reset it),\n    *  you may compare this.props and nextProps and perform state transitions using this.setState() in this method.\n    */\n    componentWillReceiveProps(newProps) {\n        if(!newProps.product.isFetching && !newProps.product.isError){\n            if(newProps.product.response.record && newProps.product.receiveType === 'editData'){\n                if(this.state.isEdit && this.props.match.params.id){\n                    this.setState({isEdit:false});\n                    let productDetails = newProps.product.response.record\n                    if(productDetails.model_image){\n                        productDetails.model_image = JSON.parse(productDetails.model_image)\n                    }\n                    let fields = _.pick(productDetails,['domain_id','modelName','promize_customizer_id','promize_customizer_name','status','model_image'])\n                    this.initialState = {fields:fields};\n                    this.setState({fields,productDetails});\n                }\n            }else if(newProps.product.receiveType === 'postData'){\n               // toastr.success(newProps.product.response.message);\n                let fields = this.state.fields;\n                const newObj = Object.assign({}, fields, {\n                    promize_customizer_id: newProps.product.response.records.promize_customizer_id\n                });\n                this.setState({ fields: newObj,openSection:true })\n            }\n        }\n   }\n   /**\n    * save the view data\n    * @param {object} view \n    */\n   saveView(view) {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        model_image.push({...view,\n            id: generateUnqId()\n        })\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n     /**\n     * \n     * @param {number} id \n     * @param {object} view \n     */\n    updateView(id,view){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        var index = _.findIndex(model_image, {id: id});\n        model_image.splice(index, 1, view);\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n    /**\n     * Delete the Model Image\n     * @param {Number} id \n     */\n    deleteView(id){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        _.remove(model_image,function(n) {\n            return n.id == id;\n        })\n        const newObj = {\n            ...fields,\n            model_image: model_image\n        }\n        this.setState({ fields: newObj})\n    }\n    render() {\n        const { product,section } = this.props;\n        let formProps = {\n            ...this.props,\n            \n        }\n        return <React.Fragment>\n        {!this.state.openSection && <div className=\"promize-card\">\n            <div className=\"promize-card-header\">\n                <div className=\"promize-card-title mb-10\">\n                    <h3>\n                        <span>Edit Product</span>\n                    </h3>\n                </div>\n                <div className=\"promize-card-action df-end\">\n                    <Switchtoggle {...this.state}\n                        labelName={'Status'}\n                        fieldName={'status'}\n                        dataName={'status'}\n                        id={1}\n                        value={this.state.fields.status}\n                        spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                        checkValue={{ first: true, second: false }}\n                        validation={false} \n                        form={this.section}\n                        />\n                </div>\n            </div>\n            <Forms {...this.props} currentComponent={this} saveView={this.saveView} updateView={this.updateView} deleteView={this.deleteView} form={this.product} product={product} state={this.state} reset={this.initialState} isEdit={false} />\n        </div>}\n        {this.state.openSection && <SectionForms {...this.props} currentComponent={this} form={this.section} section={section} state={this.state} isEdit={false} new={false} productDetails={this.state.productDetails}/>}\n    </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { product } = state;\n    return {\n        product\n    };\n}\n\nexport default connect(mapStateToProps)(Edit);\n","module.exports = __webpack_public_path__ + \"static/media/no-data.12573e6e.png\";"],"sourceRoot":""}