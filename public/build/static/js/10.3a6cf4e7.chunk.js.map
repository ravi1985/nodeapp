{"version":3,"sources":["components/form/Search.jsx","actions/products/index.jsx","containers/Products/Forms.jsx","components/form/CheckBox.jsx","components/productimize/FabricFunction.jsx","components/form/SetOptionPosition.jsx","components/form/SetTabPosition.jsx","components/form/SetBoundary.jsx","containers/Products/Attribute/Options.jsx","containers/Products/Attribute/Cliparts.jsx","containers/Products/Attribute/Image.jsx","containers/Products/Attribute/Text.jsx","components/form/inputMultple.jsx","containers/Products/subTab.jsx","containers/Products/tab.jsx","containers/Products/sectionForm.jsx","containers/Products/edit.jsx","assets/images/no-data.png"],"names":["Search","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","value","this","props","onChange","placeholder","name","Component","get","id","types","concat","PRODUCT","PENDING","FULFILLED","REJECTED","method","url","data","payload","receiveType","save","Object","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","modelName","idKey","promize_customizer_id","saveSection","promize_section_id","SECTION","saveTab","promize_tab_id","created_date","updated_date","TAB","saveSubTab","promize_sub_tab_id","SUB_TAB","deleteRecord","saveTabAttribute","promize_tab_attribute_id","TAB_ATTRIBUTE","saveTabAttributeValues","promize_tab_attribute_values_id","TAB_ATTRIBUTE_VALUES","linkTabAttributeValues","TAB_ATTRIBUTE_VALUES_LIST","linkTabAttributeClipartValues","uploadBaseImage","file","typeName","formData","FormData","append","IMAGE_UPLOAD","requestBodyType","uploadTabImage","uploadTabThumbnailImage","TAB_THUMBNAIL_IMAGE","initialState","fields","domain_id","app","DOMAIN_ID","promize_customizer_name","status","model_image","inputErrors","isEdit","validation","Forms","_this","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closePopup","e","preventDefault","setState","popup","delete","deleteView","state","views","view_name","image_url","file_name","handleClickOutside","bind","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","$","show","hide","newObj","assign","updateView","saveView","hideAddViewPopup","toastr","error","target","imageUpload","response","handleUploadedImage","document","addEventListener","removeEventListener","event","classList","contains","removeClass","addClass","path","index","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","style","display","_components_form_input__WEBPACK_IMPORTED_MODULE_12__","fieldName","labelName","handleViewNameChange","_components_files_ImageUpload__WEBPACK_IMPORTED_MODULE_15__","dataName","imageType","header","onClick","handleUploadView","src","noImages","_this3","Fragment","onSubmit","form","handleProductSubmit","showAddViewPopup","length","displayNoImage","map","key","openImageOptions","title","handleEdit","APP_IMAGE_BASE_URL","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","_components_form_SubmitButton__WEBPACK_IMPORTED_MODULE_13__","text","product","addView","_components_design_Popup__WEBPACK_IMPORTED_MODULE_17__","submitButton","cancel","connect","CheckBox","classCallCheck","possibleConstructorReturn","getPrototypeOf","onChangeHandler","assertThisInitialized","currentComponent","subTabs","selectedSubTabs","includes","parseInt","push","react_default","dataList","checked","tab_name","React","FabricFunction","canvas","_objects","_","find","SetOptionPosition","_controlPoints","position","left","top","width","height","scaleX","scaleY","angle","controlPoints","cornerSize","hasControls","borderColor","cornerColor","cornerStyle","transparentCorners","defineProperty","currentView","fabricFunction","getInstance","optionView","optionViewPosition","modelImage","tabAttributeValueData","setOptionPosition","console","log","option_images","JSON","parse","option_position","handleInputChange","addBaseImage","addOptionImage","positionChangeCallback","_this$state","baseImage","fabric","Canvas","selection","controlsAboveOverlay","centeredScaling","allowTouchScrolling","on","productimizeType","animate","renderAll","setCanvas","modelId","image","optionData","ele","promize_images_id","setOptionImage","callBack","clear","Image","fromURL","baseImageObject","set","selectable","setHeight","setWidth","originX","originY","add","findByName","warning","uploadedImage","_this$state2","currnetModelImage","_optionViewPosition$c","uploadedImageObject","objectSpread","lockUniScaling","opacity","_this$state3","obj","_this$state4","boundReact","getBoundingRect","x","y","getScaledWidth","getScaledHeight","lockScaling","_this3$state","complete","trigger","_this$state5","object","changeCanvasData","xpos","ypos","_this$state6","actualWidth","ratio","actualHeight","_this$state7","onComplete","setCoords","_this4","_this4$state","changeView","_this$state8","updateTabAttributeValues","stringify","success","_this$state9","optionImageObj","remove","_this5","optionViewImageId","values","promize_images","active","indexOf","_this6","_this7","_this8","form_input","inputType","disabled","js_default","maxValue","minValue","handleInputRangeChange","onChangeComplete","_this9","thumbnail","canvasControls","prevView","nextView","deleteButton","imageCollection","submit","SetTabPosition","tabData","setTabPosition","tabImages","tabImagesPosition","tab_images","tab_images_position","addTabImage","isFetching","isError","handleTabImage","setTabImage","_tabImagesPosition$cu","updateTabImages","tabImageObj","ImageUpload","imageForm","SetBoundary","overlay","clipRect","Rect","fill","addBoundary","rect","addOverlayImage","rectRed","imageWidth","imageHeight","hasRotatingPoint","clipPath","setBoundary","Options","toggle","promize_attribute_values","tab_attribute_values","tab_attribute_data_values","class","attribute_name","deleteAttributeFromTab","promize_attribute_id","tab_id","keys","promize_attribute_values_id","thumbnail_image","image_type","default_option","option_name","openSetOptionPositionPopup","Cliparts","clipartList","getAssociatedClipart","promize_attribute_clipart_values","promize_domain_clipart_category_id","split","dispatch","clipart","isEmpty","openSetBoundaryPopup","promize_attribute_clipart_values_id","clipart_images","promize_clipart_category_images","clipartImg","promize_product_clipart_image","noData","clipart_name","promize_attribute_image_values","promize_attribute_image_values_id","image_name","image_format","max_upload_size","min_upload_size","Text","fontSizes","fonts","fontColors","getAllFontSizes","getAllFonts","getAllFontColors","fontsList","font_id","fontsizes","font_size_id","fontcolors","promize_font_color_id","promize_attribute_text_values","tab_text_attribute_values","promize_attribute_text_values_id","font_ids","font_size_ids","font_color_ids","default_font_family","font_name","font","default_font_size","font_size","default_color","font_color_name","InputMultple","message","classValidation","classNameCheck","htmlFor","step","inputStep","data-type","dataType","data-name","onBlur","blurEventListner","handleFieldsChange","data-validation-name","maxLength","rows","input","Subtab","highlight","onDragOver","ev","dataTransfer","dropEffect","onDragLeave","onDrop","sectIndex","tabIndex","_this$props","tab_style","actionButtons","parentTabData","handleFieldBlur","handleFieldChange","tab_layer_no","sort_id","switchtoggle","tab_required","spanLabel","first","second","checkValue","handleSwitchChange","is_default_tab","inputMultple","tab_description","SimpleSelect","optionText","optionValue","emptyOptionText","handleStyleFieldBlur","handleStyleFieldChange","setDate","setCurrentTab","tabThumbnailImages","tab_icon","tab_attribute","tabAttributeData","tab_attribute_data_image_values","tab_attribute_data_text_values","tab_attribute_data_clipart_values","attribute_type","Attribute_Options","Attribute_Cliparts","Attribute_Text","Attribute_Image","Tabs","getTabContent","Products_subTab","hightlight","subTabHide","displayTab","openTab","tabs","is_sub_tab","promize_sub_tabs","subTabData","subTabIndex","subTab","child_tab_id","sectionvalidation","section_name","SectionForms","setRef","ref","sectionRefs","content","deleteAttributeFromTabFn","deleteIndex","selectedTab","tab_attributes","promize_tab_attributes","tab_attr","ids","getAttribute","onDragStart","item","reorder","setData","effectAllowed","dropIndex","getData","attributes","addAttributeToTab","onTabDragStart","startIndex","deleteTabFromsectionFn","parentTabId","filter","editSection","keyData","sectionX","getBoundingClientRect","sectionWrapperX","refs","sectionEdit","sections","section_id","section","saveSectionEdit","sectionDelete","sectionDeletefn","sectionIndex","activeSectionId","tab","overlay_image","overlay_position","image_color_settings","tab_thumbnail","default_view","selectedTabs","currnetTabId","searchText","Form","tabImage","productDetails","promize_sections","promize_tabs","tab_index","attribute","attr_index","promize_attribute","attributeData","promize_tab_attribute_values","tab_attr_value","promize_tab_text_attribute_values","promize_tab_text_attribute_values_id","promize_tab_image_attribute_values","tab_image_attribute_values","promize_tab_image_attribute_values_id","createTab","saveSectionToState","saveTabToState","saveTabAttributeToState","han","saveTabAttributeValuesList","getAllAttributes","new","_this$refs","sectionContainer","sectionAddBtn","sectionContainerBoundBox","sectionAddBtnBoundBox","sectionWrapperWidth","newProps","records","parent_tab_id","saveSubTabToState","tabAttribute","tabAttributevalueslist","tabAttributevalues","tabThumbnailImage","saveTabImage","sectionData","sectionsData","undefined","o","tabAttributeValues","tempObj","promize_tab_clipart_attribute_values_id","tabdata","subtabs","sub_tabs","selectedsub_tabs","closeTabSelectionPopup","list","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","checkedVal","_this10","openTabSelectionPopup","openSetTabPositionPopup","deleteTabFromsection","_this11","form_CheckBox","selectedSubtab","addSubTabToTab","Products_tab","displayNoData","selectedTabsList","activeSection","_this12","tabsArray","entries","sort","b","addSection","tabKey","addSelectedtab","icon","_this13","toLowerCase","react_router_dom","draggable","attributeIcon","history","_this14","saveData","tabSelectionPopup","form_SetOptionPosition","form_SetTabPosition","form_SetBoundary","addSectionArea","displayAttributeList","Popup","Edit","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","formValidation","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","view","viewList","openSection","sectValidation","match","params","record","pick","generateUnqId","findIndex","n","react__WEBPACK_IMPORTED_MODULE_7___default","_components_form_switchtoggle__WEBPACK_IMPORTED_MODULE_17__","_Forms__WEBPACK_IMPORTED_MODULE_12__","reset","_sectionForm__WEBPACK_IMPORTED_MODULE_14__","module","exports","__webpack_require__","p"],"mappings":"qJASMA,mLAEE,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAClBH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,MAAOC,KAAKC,MAAMF,OAAS,GAAIG,SAAUF,KAAKC,MAAMC,SAAUL,UAAU,uBAAuBM,YAAY,YAAYC,KAAK,cAC/IV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAJJQ,aAUNZ,0dCXR,SAASa,EAAIC,GAEhB,MAAO,CACHC,MAAO,IAAAC,OAAIC,IAAJ,KAAAD,OAAeE,KAAf,GAAAF,OAA6BC,IAA7B,KAAAD,OAAwCG,KAAxC,GAAAH,OAAwDC,IAAxD,KAAAD,OAAmEI,MAC1EC,OAHW,OAIXC,IAAK,oBACLC,KAAM,CACFT,MAEJU,QAAS,CAACC,YAAY,aAOvB,SAASC,EAAKH,GACjB,IAAIF,EAAS,OAMTC,EAAM,eAKV,OAVAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,qBACVC,MAAM,2BAGLC,wBACDV,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIC,IAAJ,KAAAD,OAAeE,KAAf,GAAAF,OAA6BC,IAA7B,KAAAD,OAAwCG,KAAxC,GAAAH,OAAwDC,IAAxD,KAAAD,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASO,EAAYT,GAM3B,IAAIF,EAAS,OACNC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,kBACVC,MAAM,wBAILG,qBACDZ,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIkB,KAAJ,KAAAlB,OAAeE,KAAf,GAAAF,OAA6BkB,KAA7B,KAAAlB,OAAwCG,KAAxC,GAAAH,OAAwDkB,KAAxD,KAAAlB,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASU,EAAQZ,GAMpB,IAAIF,EAAS,OACTC,EAAM,eAOV,OAbAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,cACVC,MAAM,oBAILM,iBACDf,EAAS,MACTC,EAAM,sBACCC,EAAKc,oBACLd,EAAKe,cAET,CACHvB,MAAO,IAAAC,OAAIuB,KAAJ,KAAAvB,OAAWE,KAAX,GAAAF,OAAyBuB,KAAzB,KAAAvB,OAAgCG,KAAhC,GAAAH,OAAgDuB,KAAhD,KAAAvB,OAAuDI,MAC9DC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASe,EAAWjB,GAMvB,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,kBACVC,MAAM,wBAILW,qBACDpB,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAI0B,KAAJ,KAAA1B,OAAeE,KAAf,GAAAF,OAA6B0B,KAA7B,KAAA1B,OAAwCG,KAAxC,GAAAH,OAAwD0B,KAAxD,KAAA1B,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASkB,EAAapB,GACzB,MAAO,CACHR,MAAO,IAAAC,OAAIuB,KAAJ,KAAAvB,OAAWE,KAAX,GAAAF,OAAyBuB,KAAzB,KAAAvB,OAAgCG,KAAhC,GAAAH,OAAgDuB,KAAhD,KAAAvB,OAAuDI,MAC9DC,OAAQ,SACRC,IAAK,eACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASmB,EAAiBrB,GAM7B,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,wBACVC,MAAM,8BAILe,2BACDxB,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAI8B,KAAJ,KAAA9B,OAAqBE,KAArB,GAAAF,OAAmC8B,KAAnC,KAAA9B,OAAoDG,KAApD,GAAAH,OAAoE8B,KAApE,KAAA9B,OAAqFI,MAC5FC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASsB,EAAuBxB,GAMnC,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,+BACVC,MAAM,qCAILkB,kCACD3B,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIiC,KAAJ,KAAAjC,OAA4BE,KAA5B,GAAAF,OAA0CiC,KAA1C,KAAAjC,OAAkEG,KAAlE,GAAAH,OAAkFiC,KAAlF,KAAAjC,OAA0GI,MACjHC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAyBvB,SAASyB,EAAuB3B,GAGnC,MAAO,CACHR,MAAO,IAAAC,OAAImC,KAAJ,KAAAnC,OAAiCE,KAAjC,GAAAF,OAA+CmC,KAA/C,KAAAnC,OAA4EG,KAA5E,GAAAH,OAA4FmC,KAA5F,KAAAnC,OAAyHI,MAChIC,OAJS,OAKTC,IAJM,yBAKNC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAAS2B,EAA8B7B,GAG1C,MAAO,CACHR,MAAO,IAAAC,OAAImC,KAAJ,KAAAnC,OAAiCE,KAAjC,GAAAF,OAA+CmC,KAA/C,KAAAnC,OAA4EG,KAA5E,GAAAH,OAA4FmC,KAA5F,KAAAnC,OAAyHI,MAChIC,OAJS,OAKTC,IAJM,mBAKNC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAAS4B,EAAgBC,EAAKC,EAAS5C,GAO7C,IAAM6C,EAAW,IAAIC,SAGlB,OAFAD,EAASE,OAAO,OAAOJ,GACvBE,EAASE,OAAO,OAAQH,GACjB,CACHxC,MAAO,IAAAC,OAAI2C,IAAJ,KAAA3C,OAAoBE,KAApB,GAAAF,OAAkC2C,IAAlC,KAAA3C,OAAkDG,KAAlD,GAAAH,OAAkE2C,IAAlE,KAAA3C,OAAkFI,MACzFC,OAAQ,OACRuC,gBAAgB,WAChBtC,IAAK,kBACLC,KAAMiC,EACNhC,QAAS,CAACC,YAAY,aAKvB,SAASoC,EAAeP,EAAMC,GACjC,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQH,GACjB,CACHxC,MAAO,IAAAC,OAAI2C,IAAJ,KAAA3C,OAAoBE,KAApB,GAAAF,OAAkC2C,IAAlC,KAAA3C,OAAkDG,KAAlD,GAAAH,OAAkE2C,IAAlE,KAAA3C,OAAkFI,MACzFC,OAAQ,OACRuC,gBAAiB,WACjBtC,IAAK,iBACLC,KAAMiC,EACNhC,QAAS,CAAEC,YAAa,aAIzB,SAASqC,EAAwBR,EAAMC,GAC1C,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQH,GACjB,CACHxC,MAAO,IAAAC,OAAI+C,KAAJ,KAAA/C,OAA2BE,KAA3B,GAAAF,OAAyC+C,KAAzC,KAAA/C,OAAgEG,KAAhE,GAAAH,OAAgF+C,KAAhF,KAAA/C,OAAuGI,MAC9GC,OAAQ,OACRuC,gBAAiB,WACjBtC,IAAK,iBACLC,KAAMiC,EACNhC,QAAS,CAAEC,YAAa,qSC3OzB,SAASuC,IAeZ,MAdqB,CACjBC,OACA,CACIC,UAAaC,IAAIC,UACjBvC,UAAc,qBACdE,sBAAyB,GACzBsC,wBAA2B,GAC3BC,QAAU,EACVC,YAAe,IAEnBC,YAAa,GACbC,QAAQ,GAMT,IAAMC,EAAa,SAAClE,GAIvB,MAHc,CACV6D,wBAA2B,aAY7BM,cAEF,SAAAA,EAAYnE,GAAO,IAAAoE,EAAA,OAAAjD,OAAAkD,EAAA,EAAAlD,CAAApB,KAAAoE,IACfC,EAAAjD,OAAAmD,EAAA,EAAAnD,CAAApB,KAAAoB,OAAAoD,EAAA,EAAApD,CAAAgD,GAAAK,KAAAzE,KAAMC,KAgJVyE,WAAa,SAACC,GACVA,GAAKA,EAAEC,iBACPP,EAAKQ,SAAS,CAAEC,OAAO,KAnJRT,EAqJnBU,OAAS,SAACJ,EAAG3D,GACT,IAAI8D,EAAQ,CACZA,MAAc,cACdA,QAAgB,mCAChBA,OAAe,WACXT,EAAKpE,MAAM+E,WAAWhE,EAAKT,MAE/B8D,EAAKQ,SAAS,CAAEC,WA1JhBT,EAAKY,MAAQ,CACTC,MAAO,CACHC,UAAa,GACbC,UAAa,GACbC,UAAa,KAGrBhB,EAAKiB,mBAAqBjB,EAAKiB,mBAAmBC,KAAxBnE,OAAAoE,EAAA,EAAApE,CAAAiD,IATXA,gFAWFM,GACbA,EAAEC,iBACF5E,KAAK6E,SAAS,CAACK,MAAM,CACjBC,UAAa,GACbC,UAAa,GACbC,UAAa,KACd,WACCI,IAAE,wBAAwBC,kDAGjBf,GACbA,EAAEC,iBACFa,IAAE,wBAAwBE,OAC1B,IAAMT,EAAQlF,KAAKiF,MAAMC,MACnBU,EAASxE,OAAOyE,OAAO,GAAIX,EAAO,CACpCC,UAAW,GACXC,UAAW,GACXC,UAAW,KAEfrF,KAAK6E,SAAS,CAAEK,MAAOU,6CAEVjB,GACbA,EAAEC,iBACF,IAAMM,EAAQlF,KAAKiF,MAAMC,MACrBA,EAAMC,WAAaD,EAAME,WACrBF,EAAM3E,GAGNP,KAAKC,MAAM6F,WAAWZ,EAAM3E,GAAG2E,GAF/BlF,KAAKC,MAAM8F,SAASb,GAIxBlF,KAAKgG,iBAAiBrB,IAEtBsB,IAAOC,MAAM,6EAGAvB,GACjBA,EAAEC,iBACF,IAAIlB,EAAS1D,KAAKiF,MAAMC,MAIxBxB,EAHetC,OAAOyE,OAAO,GAAInC,EAAQ,CACrCyB,UAAWR,EAAEwB,OAAOpG,QAGxBC,KAAK6E,SAAS,CAAEK,MAAOxB,uCAEhBwB,GACPlF,KAAK6E,SAAS,CAACK,SAAO,WAClBO,IAAE,wBAAwBC,2DAGRzF,GAClBA,EAAMmG,YAAYC,WAAarG,KAAKC,MAAMmG,YAAYC,UACtDrG,KAAKsG,oBAAoBrG,+CAI7BsG,SAASC,iBAAiB,YAAaxG,KAAKsF,mEAI5CiB,SAASE,oBAAoB,YAAazG,KAAKsF,+DAGhCoB,GACVA,EAAMP,OAAOQ,UAAUC,SAAS,eACjCnB,IAAE,0BAA0BoB,YAAY,QACxCpB,IAAE,0BAA0BqB,SAAS,qDAIzB7G,GAChB,IAAMoG,EAAWpG,EAAMmG,YAAYC,SACnC,GAAIA,EAAStC,QAA8B,MAApBsC,EAAStC,OAAgB,CAC5C,IAAML,EAAS1D,KAAKiF,MAAMC,MACtBU,EAASxE,OAAOyE,OAAO,GAAInC,EAAQ,CACnC0B,UAAWiB,EAAStD,KAAKgE,OAE7B/G,KAAK6E,SAAS,CAAEK,MAAOU,8CAGdjB,EAAGqC,GAChBrC,EAAEC,iBACFa,IAAE,UAAYuB,GAAOH,YAAY,QACjCpB,IAAE,UAAYuB,GAAOF,SAAS,0CAGxB,IAAAG,EAAAjH,KACN,OAAQkH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,sBAAsBsH,MAAO,CAAEC,QAAW,SAC7DF,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,0BACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,wBACXqH,EAAAvH,EAAAC,cAAA,MAAIC,UAAU,eACVqH,EAAAvH,EAAAC,cAAA,8BAKRsH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,sBACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,4BACXqH,EAAAvH,EAAAC,cAACyH,EAAA,EAADjG,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,YACXvH,MAAOC,KAAKiF,MAAMC,MAAMC,UACxBoC,UAAW,YACXrH,SAAU,SAACyE,GAAQsC,EAAKO,qBAAqB7C,IAC7CR,YAAY,MAGpB+C,EAAAvH,EAAAC,cAAC6H,EAAA,EAADrG,OAAAyE,OAAA,GAAiB7F,KAAKC,MAAtB,CACIsH,UAAW,aACXD,UAAW,aACXI,SAAU,aACVvD,YAAY,EACZwD,UAAW,aACXvC,UAAWpF,KAAKiF,MAAMC,MAAME,UAC5BwC,OAAQ,aACR7H,MAAOC,KAAKiF,MAAMC,MAAMG,cAGhC6B,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,kCACXqH,EAAAvH,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAQsC,EAAKjB,iBAAiBrB,KAAtF,UACAuC,EAAAvH,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAQsC,EAAKa,iBAAiBnD,KAApF,sDAOZ,OAAOuC,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,mBAClBqH,EAAAvH,EAAAC,cAAA,OAAKmI,IAAKC,MACVd,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,SAAb,wDAoBC,IAAAoI,EAAAjI,KACL,OAAOkH,EAAAvH,EAAAC,cAAAsH,EAAAvH,EAAAuI,SAAA,KACPhB,EAAAvH,EAAAC,cAAA,QAAMuI,SAAUnI,KAAKC,MAAMmI,KAAKC,oBAAqBvH,OAAO,QACxDoG,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,qBACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,MACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,SACXqH,EAAAvH,EAAAC,cAACyH,EAAA,EAADjG,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,0BACXvH,MAAOC,KAAKC,MAAMgF,MAAMvB,OAAOI,wBAC/ByD,UAAW,eACXpD,YAAY,OAIxB+C,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,gDACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,sBACXqH,EAAAvH,EAAAC,cAAA,UACIsH,EAAAvH,EAAAC,cAAA,uBAGRsH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,8BACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,aACXqH,EAAAvH,EAAAC,cAAA,UAAQC,UAAU,gBAAgBgI,QAAS,SAAClD,GAAQsD,EAAKK,iBAAiB3D,KAAMuC,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,eAA7F,gBAIZqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,gCACoC,GAA9CG,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYuE,QAAevI,KAAKwI,iBACxDxI,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYuE,OAAS,GAC1CrB,EAAAvH,EAAAC,cAAA,MAAIC,UAAU,uBACTG,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYyE,IAAI,SAACzH,EAAMgG,GAC5C,OAAOE,EAAAvH,EAAAC,cAAA,MAAI8I,IAAK1B,EAAOnH,UAAU,eAC7BqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,8BACXqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,6BACXqH,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmB,EAAKmE,WACtC+B,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,4BACXqH,EAAAvH,EAAAC,cAAA,UAAQC,UAAU,sBAAsBgI,QAAS,SAAClD,GAAD,OAAOsD,EAAKU,iBAAiBhE,EAAGqC,KAAQE,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,sBACtGqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAW,+BAAiCmH,GAC7CE,EAAAvH,EAAAC,cAAA,MAAIC,UAAU,gBACVqH,EAAAvH,EAAAC,cAAA,UAAIsH,EAAAvH,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,wBAAwB+I,MAAM,OAAOf,QAAS,SAAAlD,GAAC,OAAIsD,EAAKY,WAAW7H,KAAOkG,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,eAAvH,UACJqH,EAAAvH,EAAAC,cAAA,UAAIsH,EAAAvH,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,wBAAwB+I,MAAM,SAASf,QAAS,SAAAlD,GAAC,OAAIsD,EAAKlD,OAAOJ,EAAG3D,KAAOkG,EAAAvH,EAAAC,cAAA,KAAGC,UAAU,oBAAxH,gBAKpBqH,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,wBACXqH,EAAAvH,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqB9H,EAAKoE,oBASxE8B,EAAAvH,EAAAC,cAAA,OAAKC,UAAU,0BACXqH,EAAAvH,EAAAC,cAACmJ,EAAA,EAAD,CAASC,GAAG,YAAYnJ,UAAU,6BAA6B,UAC/DqH,EAAAvH,EAAAC,cAACqJ,EAAA,EAAD,CAAcpJ,UAAU,0BAA0BqJ,KAAM,OAAQ7C,SAAUrG,KAAKC,MAAMkJ,WAExFnJ,KAAKoJ,WAETpJ,KAAKiF,MAAMH,OAASoC,EAAAvH,EAAAC,cAACyJ,EAAA,EAADjI,OAAAyE,OAAA,GAAW7F,KAAKiF,MAAMH,MAAtB,CAA6BwE,aAAa,SAASC,OAAQvJ,KAAK0E,sBA7NzErE,aAwOLmJ,gBANf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAIZoD,CAAyBpF,iNChPzBqF,cAlCb,SAAAA,EAAaxJ,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAyJ,IAClBpF,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAqI,GAAAhF,KAAAzE,KAAMC,KACD4J,gBAAkBxF,EAAKwF,gBAAgBtE,KAArBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACvBA,EAAK0F,iBAAmB1F,EAAKpE,MAAM8J,iBAHjB1F,+EAKJM,GACZ,IAAIqF,EAAUhK,KAAK+J,iBAAiB9E,MAAMgF,gBACtCD,EAAQE,SAASC,SAASxF,EAAEwB,OAAO5F,OACrCyJ,EAAQI,KAAKD,SAASxF,EAAEwB,OAAO5F,KAC/BP,KAAK+J,iBAAiBlF,SAAS,CAACoF,gBAAkBD,sCAO/C,IAAA/C,EAAAjH,KAcP,OAbmBqK,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACdmC,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,yBACdG,KAAKC,MAAMqK,SAAS7B,IAAI,SAACzH,EAAMgG,GAC9B,OAAOqD,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,QAAQ6I,IAAK1B,GAClCqD,EAAA1K,EAAAC,cAAA,SAAOC,UAAU,mBAAmB6I,IAAK1B,GACvCqD,EAAA1K,EAAAC,cAAA,SAAOE,KAAK,WAAWS,GAAIS,EAAKa,eAAgB3B,SAAU,SAACyE,GAAD,OAAKsC,EAAK4C,gBAAgBlF,IAAI4F,UAAUtD,EAAKhH,MAAMF,MAAMmK,SAASlJ,EAAKa,gBAAiC9B,MAAOkH,EAAKhH,MAAMF,MAAMmK,SAASlJ,EAAKa,gBAAiBzB,KAAM6G,EAAKhH,MAAMqH,YAC1O+C,EAAA1K,EAAAC,cAAA,gBAAQoB,EAAKwJ,uBAxBFC,IAAMpK,qCCoCdqK,aA5BX,SAAAA,EAAYC,GAAQvJ,OAAAsI,EAAA,EAAAtI,CAAApB,KAAA0K,GAChB1K,KAAK2K,OAASA,+DATCA,GACf,OAAO,IAAID,EAAeC,sDAUpBA,GACN3K,KAAK2K,OAASA,qCAMPvK,GAAK,IACPuK,EAAU3K,KAAV2K,OACL,GAAGA,GAAUA,EAAOC,SACjB,OAAOC,IAAEC,KAAKH,EAAOC,SAAU,CAAC,OAAQxK,qCAOtCG,GAAG,IACHoK,EAAU3K,KAAV2K,OACL,GAAGA,GAAUA,EAAOC,SACjB,OAAOC,IAAEC,KAAKH,EAAOC,SAAU,CAAC,KAAMrK,uCC6hBlCwK,sBAziBX,SAAAA,EAAY9K,GAAO,IAAA+K,EAAA3G,EAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAA+K,IACf1G,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAA2J,GAAAtG,KAAAzE,KAAMC,KACDgF,MAAQ,CACTgG,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEX9H,OAAQ,GACR+H,eAAaT,EAAA,CACTU,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANX3K,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,eAOI,GAPJ5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,UAQA,KARA5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,cASG,GATH5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,oBAUS,GAVTA,GAYbiB,YAAa,EACbtB,OAAQ,GACRuB,eAAgBxB,EAAeyB,YAAY,KAE/C,IAAIC,EAAa,GACbC,EAAqB,GACrBC,EAAajI,EAAKpE,MAAMgF,MAAMvB,OAAOM,YACrCuI,EAAwBlI,EAAKpE,MAAMuM,kBAAkBxL,KAAKuL,sBAhC/C,OAiCfE,QAAQC,IAAIH,GACZD,EAAW7D,IAAI,SAACzH,EAAMgG,GAClBoF,EAAWpL,EAAKT,IAAM,GACtB8L,EAAmBrL,EAAKT,IAAM,KAE9BgM,EAAsBI,eAA+D,iBAAvCJ,EAAsBI,gBACpEP,EAAaQ,KAAKC,MAAMN,EAAsBI,gBAE9CJ,EAAsBO,iBAAmE,iBAAzCP,EAAsBO,kBACtET,EAAqBO,KAAKC,MAAMN,EAAsBO,kBAG1DzI,EAAKY,MAAMmH,WAAaA,EACxB/H,EAAKY,MAAMoH,mBAAqBA,EAChChI,EAAK0I,kBAAoB1I,EAAK0I,kBAAkBxH,KAAvBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACzBA,EAAK2I,aAAe3I,EAAK2I,aAAazH,KAAlBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACpBA,EAAK4I,eAAiB5I,EAAK4I,eAAe1H,KAApBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACtBA,EAAK6I,uBAAyB7I,EAAK6I,uBAAuB3H,KAA5BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAlDfA,mFAoDC,IAAA4C,EAAAjH,KACZsM,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YADzBmJ,EAEsDnN,KAAKiF,MAArEgH,EAFUkB,EAEVlB,YAAaG,EAFHe,EAEGf,WAAYC,EAFfc,EAEed,mBAAoBH,EAFnCiB,EAEmCjB,eAC/CkB,EAAYxJ,IAAIkF,mBAAqBwD,EAAWL,GAAa7G,UAC7DuF,EAAS,IAAI0C,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,IAErBR,EAAyBlN,KAAKkN,uBAClCvC,EAAOgD,GAAG,kBAAmB,SAAUhJ,GAC/BA,EAAEwB,OAAOyH,kBAAiD,eAA7BjJ,EAAEwB,OAAOyH,kBACtCV,EAAuBvI,EAAEwB,UAGjCwE,EAAOgD,GAAG,eAAgB,SAAUhJ,GAC5BA,EAAEwB,OAAOyH,kBAAiD,eAA7BjJ,EAAEwB,OAAOyH,mBACtCjJ,EAAEwB,OAAO0H,QAAQ,UAAW,EAAG,CAC3B3N,SAAUyK,EAAOmD,UAAUvI,KAAKoF,KAEpCuC,EAAuBvI,EAAEwB,WAGjC+F,EAAe6B,UAAUpD,GACzB3K,KAAK6E,SAAS,CACV8F,OAAQA,EACRuB,eAAgBA,GACjB,WACCjF,EAAK+F,aAAaI,EAAW,WACzB,IAAIY,EAAU1B,EAAWL,GAAa1L,GACtC,GAAI6L,EAAW4B,GAAU,CACrB,IACIC,EADgBhH,EAAKhH,MAAMuM,kBAAkBxL,KAAKkN,WAAWvB,cACvC7B,KAAK,SAACqD,GAAU,OAAO/B,EAAW4B,IAAYG,EAAIC,oBACxEnD,EAAWoB,EAAmB2B,IAAY,GAC9C/G,EAAKoH,eAAezK,IAAIkF,mBAAqBmF,EAAM7I,UAAW6F,6CAUjEmC,EAAWkB,GACpB,IAAI3D,EAAS3K,KAAKiF,MAAM0F,OACxBA,EAAO4D,QACPlB,SAAOmB,MAAMC,QAAQrB,EAAW,SAAUsB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClCjE,EAAOkE,UAAUH,EAAgBrD,QACjCV,EAAOmE,SAASJ,EAAgBtD,OAChCsD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT9D,KAAMwD,EAAgBtD,MAAQ,EAC9BD,IAAKuD,EAAgBrD,OAAS,IAElCV,EAAOsE,IAAIP,GACX/D,EAAOmD,YACiB,oBAAbQ,GACPA,6CAIGtN,GAEX,GADyBhB,KAAKiF,MAAxBiH,eACagD,WAAW,eAC1BjJ,IAAOkJ,QAAQ,+CACZ,CACH,IAAIC,EAAgBxL,IAAIkF,mBAAqB9H,EAAKoE,UAD/CiK,EAEoFrP,KAAKiF,MAAtFmH,EAFHiD,EAEGjD,WAAYC,EAFfgD,EAEehD,mBAAoBJ,EAFnCoD,EAEmCpD,YAAahB,EAFhDoE,EAEgDpE,SAAUQ,EAF1D4D,EAE0D5D,cAAed,EAFzE0E,EAEyE1E,OAExE2E,EADatP,KAAKC,MAAMgF,MAAMvB,OAAOM,YACNiI,GACnCG,EAAWkD,EAAkB/O,IAAMS,EAAKoN,kBACxC/B,EAAmBiD,EAAkB/O,IAAM0K,EANxC,IAAAsE,EAOsBlD,EAAmBiD,EAAkB/O,IAAxD+K,EAPHiE,EAOGjE,OAAQC,EAPXgE,EAOWhE,OACd8B,SAAOmB,MAAMC,QAAQW,EAAe,SAAUI,GAC1CA,EAAoBb,IAApBvN,OAAAqO,EAAA,EAAArO,CAAA,GACOqK,EADP,CAEIP,KAAMP,EAAOS,MAAQ,EACrBD,IAAKR,EAAOU,OAAS,EACrBC,SACAC,SACAqC,iBAAkB,cAClBxN,KAAM,cACN2O,QAAS,SACTC,QAAS,SACTU,gBAAgB,EAChBC,QAAS,KAEbhF,EAAOsE,IAAIO,GACX7E,EAAOmD,sDASJG,EAAOhD,GAAU,IAAA2E,EACI5P,KAAKiF,MAA/B0F,EADsBiF,EACtBjF,OAAQc,EADcmE,EACdnE,cACd4B,SAAOmB,MAAMC,QAAQR,EAAO,SAAUuB,GAClCA,EAAoBb,IAApBvN,OAAAqO,EAAA,EAAArO,CAAA,GACOqK,EACAR,EAFP,CAGI2C,iBAAkB,cAClBxN,KAAM,cACN2O,QAAS,SACTC,QAAS,YAEbrE,EAAOsE,IAAIO,GACX7E,EAAOmD,6DAOQ+B,GAAK,IAAAC,EAC0B9P,KAAKiF,MAAjDvB,EADkBoM,EAClBpM,OAAQ2I,EADUyD,EACVzD,mBAAoBJ,EADV6D,EACU7D,YAC9BjF,EAAQhH,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYiI,GAAa1L,GAC7D8L,EAAmBrF,GAAnB5F,OAAAqO,EAAA,EAAArO,CAAA,GACOiL,EAAmBrF,GAD1B,CAEIkE,KAAM2E,EAAI3E,KACVC,IAAK0E,EAAI1E,IACTG,OAAQuE,EAAIvE,OACZC,OAAQsE,EAAItE,OACZC,MAAOqE,EAAIrE,MACXJ,MAAOyE,EAAIzE,MACXC,OAAQwE,EAAIxE,OACZqE,eAAgBG,EAAIH,iBAExB,IAAIK,EAAaF,EAAIG,kBACrBhQ,KAAK6E,SAAS,CACVnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GACAsC,EADD,CAEFuM,EAAGJ,EAAI3E,KAAQ6E,EAAW3E,MAAQ,EAClC8E,EAAGL,EAAI1E,IAAO4E,EAAW1E,OAAS,EAClCD,MAAOyE,EAAIM,iBACX9E,OAAQwE,EAAIO,kBACZ5E,MAAOqE,EAAIrE,MACXF,OAAQuE,EAAIvE,OACZC,OAAQsE,EAAItE,SACbc,6DAMG,IAAApE,EAAAjI,KACJ0D,EAAW1D,KAAKiF,MAAhBvB,OACN1D,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,EAAP,CAAe2M,aAAc3M,EAAO2M,eAAiB,WAAM,IAAAC,EACpCrI,EAAKhD,MAAxC0F,EADuE2F,EACvE3F,OAAQuB,EAD+DoE,EAC/DpE,eAAgBxI,EAD+C4M,EAC/C5M,OACpBwI,EAAegD,WAAW,eAChCP,IAAI,CAAEe,eAAgBhM,EAAO2M,cACjC1F,EAAOmD,6DASQ1N,EAAML,EAAOwQ,GAChC,IAAIC,GAAU,EACVD,IACAC,GAAU,GAH4B,IAOtChF,EAPsCiF,EAKTzQ,KAAKiF,MAAhCiH,EALoCuE,EAKpCvE,eAAgBxI,EALoB+M,EAKpB/M,OAClBgN,EAASxE,EAAegD,WAAW,eAE3B,SAAR9O,IACAoL,EAAmB,KAAVzL,EAAgBoK,SAASpK,GAAS,EAC3C2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF8H,MAAOA,IAEXxL,KAAK2Q,iBAAiB,CAAEnF,SAASkF,EAAQF,GACzCxQ,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,gDAOnBgD,GAAO,IAGjBkK,EAAMC,EAAMvF,EAAQC,EAAQH,EAAOC,EAAQG,EAH1BsF,EACY9Q,KAAKiF,MAAhCiH,EADe4E,EACf5E,eAAgBxI,EADDoN,EACCpN,OAClBgN,EAASxE,EAAegD,WAAW,eAEvC,GAAwB,eAApBxI,EAAMP,OAAO5F,GAAqB,CAClCqQ,EAA+B,KAAvBlK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFuM,EAAGW,IAEP,IAAI1F,EAAO0F,EAAQF,EAAOV,kBAAkB5E,MAAQ,EACpDpL,KAAK2Q,iBAAiB,CAAEzF,QAAQwF,QAC7B,GAAyB,eAApBhK,EAAMP,OAAO5F,GAAsB,CAC3CsQ,EAA+B,KAAvBnK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFwM,EAAGW,IAEP,IAAI1F,EAAM0F,EAAQH,EAAOV,kBAAkB3E,OAAS,EACpDrL,KAAK2Q,iBAAiB,CAAExF,OAAOuF,QAC5B,GAAyB,UAApBhK,EAAMP,OAAO5F,GAAiB,CACtC,IAAIwQ,EAAcL,EAAOtF,MAEzBE,GADAF,EAAgC,KAAvB1E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,GACpDgR,EACjB1F,EAAS3H,EAAO2H,OAChBE,EAAS7H,EAAO6H,OAChB,IAAIyF,EAAQ1F,EAAS5H,EAAO4H,OACxB5H,EAAO2M,cACPhF,EAAS3H,EAAO2H,OAAS2F,EACzBzF,EAAS7H,EAAO6H,OAASyF,GAE7BtN,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF0H,QACAC,SACAC,SACAC,WAEJvL,KAAK2Q,iBAAiB,CAAErF,SAAQC,UAAUmF,QACvC,GAAyB,WAApBhK,EAAMP,OAAO5F,GAAkB,CACvC,IAAI0Q,EAAeP,EAAOrF,OAE1BE,GADAF,EAAiC,KAAvB3E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,GACpDkR,EAClB7F,EAAQ1H,EAAO0H,MACfE,EAAS5H,EAAO4H,OAChB,IAAI0F,EAAQzF,EAAS7H,EAAO6H,OACxB7H,EAAO2M,cACPjF,EAAQ1H,EAAO0H,MAAQ4F,EACvB1F,EAAS5H,EAAO4H,OAAS0F,GAE7BtN,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF0H,QACAC,SACAC,SACAC,WAEJvL,KAAK2Q,iBAAiB,CAAErF,SAAQC,UAAUmF,OACd,UAApBhK,EAAMP,OAAO5F,KACrBiL,EAAgC,KAAvB9E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACrE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF8H,MAAOA,IAEXxL,KAAK2Q,iBAAiB,CAAEnF,SAASkF,IAErC1Q,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,8CAQhB1C,EAAM0P,EAAQF,GAAS,IAAAU,EACclR,KAAKiF,MAAjDgH,EAD8BiF,EAC9BjF,YAAaI,EADiB6E,EACjB7E,mBAAoB1B,EADHuG,EACGvG,OACnC3D,EAAQhH,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYiI,GAAa1L,GAC7D8L,EAAmBrF,GAAnB5F,OAAAqO,EAAA,EAAArO,CAAA,GACOiL,EAAmBrF,GACnBhG,GAEP0P,EAAO7C,QAAQ7M,EAAM,CACjBd,SAAUyK,EAAOmD,UAAUvI,KAAKoF,GAChCwG,WAAY,WACJX,GACA7F,EAAO6F,QAAQ,kBAAmB,CAAErK,OAAQuK,OAIxDA,EAAOU,+CAMApK,GAAO,IAAAqK,EAAArR,KACdA,KAAK6E,SAAS,CAAEoH,YAAajF,EAAOtD,OAAQ,IAAM,WAAM,IAAA4N,EACXD,EAAKpM,MAAxCmH,EAD8CkF,EAC9ClF,WAAYC,EADkCiF,EAClCjF,mBACdC,EAAa+E,EAAKpR,MAAMgF,MAAMvB,OAAOM,YACrCoJ,EAAYxJ,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,UAC3DiM,EAAKrE,aAAaI,EAAW,WACzB,IAAIY,EAAU1B,EAAWtF,GAAOzG,GAC5BoM,EAAgB0E,EAAKpR,MAAMuM,kBAAkBxL,KAAKkN,WAAWvB,cACjE,GAAIP,EAAW4B,GAAU,CACrB,IAAIC,EAAQtB,EAAc7B,KAAK,SAACqD,GAAU,OAAO/B,EAAW4B,IAAYG,EAAIC,oBACxEnD,EAAWoB,EAAmB2B,IAAY,GAC9CqD,EAAKhD,eAAezK,IAAIkF,mBAAqBmF,EAAM7I,UAAW6F,2CASnE,IACDgB,EAAgBjM,KAAKiF,MAArBgH,YACNA,GAA4B,EAC5BjM,KAAKuR,WAAWtF,sCAKT,IACDA,EAAgBjM,KAAKiF,MAArBgH,YACNA,GAA4B,EAC5BjM,KAAKuR,WAAWtF,kCAMbtH,GAAG,IAAA6M,EACmCxR,KAAKiF,MAAxCmH,EADAoF,EACApF,WAAYC,EADZmF,EACYnF,mBAClBrM,KAAKC,MAAMwR,yBAAyB,CAChChP,gCAAiCzC,KAAKC,MAAMuM,kBAAkBxL,KAAKuL,sBAAsB9J,gCACzFkK,cAAeC,KAAK8E,UAAUtF,GAC9BU,gBAAiBF,KAAK8E,UAAUrF,KAEpCpG,IAAO0L,QAAQ,kCACf3R,KAAKC,MAAMyE,WAAWC,kCAEnBA,GACHA,EAAEC,iBADI,IAAAgN,EAEgF5R,KAAKiF,MAArFiH,EAFA0F,EAEA1F,eAAgBE,EAFhBwF,EAEgBxF,WAAYC,EAF5BuF,EAE4BvF,mBAAoBJ,EAFhD2F,EAEgD3F,YAAatB,EAF7DiH,EAE6DjH,OAC/D2B,GAHEsF,EAEqElO,OAC1D1D,KAAKC,MAAMgF,MAAMvB,OAAOM,aACrC6N,EAAiB3F,EAAegD,WAAW,eAC/C,GAAI2C,EAAgB,CAChB,IAAIvC,EAAoBhD,EAAWL,GACnCG,EAAWkD,EAAkB/O,IAAM,GACnC8L,EAAmBiD,EAAkB/O,IAAM,GAC3CP,KAAK6E,SAAS,CAAEuH,aAAYC,qBAAoB3I,OAAQ,KACxDuC,IAAO0L,QAAQ,+BACfhH,EAAOmH,OAAOD,8CAMJ,IAAAE,EAAA/R,KACRoM,EAAepM,KAAKiF,MAApBmH,WACF4F,EAAoB5Q,OAAO6Q,OAAO7F,GACtC,OAAO/B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BAClBwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gCAAf,oBACAwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,6BAAf,uKAEJwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gDACVG,KAAKC,MAAMuM,kBAAkBxL,KAAKkN,WAAWgE,gBAAkBlS,KAAKC,MAAMuM,kBAAkBxL,KAAKkN,WAAWvB,cAAclE,IAAI,SAACzH,EAAMgG,GAClI,IAAImL,GAAgE,GAAtDH,EAAkBI,QAAQpR,EAAKoN,mBAC7C,OAAO/D,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,8BAAgCsS,EAAS,WAAa,IAAKzJ,IAAK1B,EAAOa,QAAS,SAAClD,GAAQwN,EAASxN,EAAEC,iBAAmBmN,EAAK9E,eAAejM,KAC9JqJ,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqB9H,EAAKoE,sDAUpD,IAAAiN,EAAArS,KACFiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACjByM,EAAW/D,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,WACtByK,EAAA1K,EAAAC,cAAA,UACK0M,EAAW7D,IAAI,SAACzH,EAAMgG,GACnB,OAAOqD,EAAA1K,EAAAC,cAAA,MAAI8I,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAI0N,EAAKd,WAAWvK,IAAQnH,UAAW,cAAgBmH,GAASiF,EAAc,eAAiB,KAC5H5B,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,YACrDiF,EAAA1K,EAAAC,cAAA,SAAI0M,EAAWtF,GAAO7B,wDAQ/B,IAAAmN,EAAAtS,KAGX,OAFyBA,KAAKiF,MAAxBiH,eAC8BgD,WAAW,eAEpC7E,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAD,OAAO2N,EAAKvN,OAAOJ,KAA1E,UAEJ,4CAKM,IAAA4N,EAAAvS,KACP0D,EAAW1D,KAAKiF,MAAhBvB,OACN,OAAO2G,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOuM,GAAK,EACnB1I,UAAW,aACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOwM,GAAK,EACnB3I,UAAW,aACXpD,YAAY,EACZuO,UAAUhP,EACV+O,UAAU,SACVvS,SAAUF,KAAK+M,sBAGvB1C,EAAA1K,EAAAC,cAAA,WACIyK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAO2D,EAAO8H,OAAS,EACvBjE,UAAW,QACXpD,YAAY,EACZuO,UAAUhP,EACV+O,UAAU,SACVvS,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC+S,EAAAhT,EAAD,CACIiT,SAAU,IACVC,UAAW,IACXH,UAAUhP,EACV3D,MAAO2D,EAAO8H,OAAS,EACvBtL,SAAU,SAAAH,GAAK,OAAIwS,EAAKO,uBAAuB,QAAS/S,IACxDgT,iBAAkB,SAAAhT,GAAK,OAAIwS,EAAKO,uBAAuB,QAAS/S,GAAO,OAE/EsK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAO2D,EAAO0H,OAAS,EACvB7D,UAAW,QACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,SACXvH,MAAO2D,EAAO2H,QAAU,EACxB9D,UAAW,SACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gBAAewK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,kBAAoB6D,EAAO2M,YAAc,SAAW,IAAKxI,QAAS,SAAAlD,GAAC,OAAI4N,EAAKlC,gBAAehG,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,oDAI5J,IAAAmT,EAAAhT,KACCiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mCAClBwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,eACVwK,EAAA1K,EAAAC,cAAA,iCAGRyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKiT,YACN5I,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,UAAQW,GAAG,WACX8J,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKkT,iBACLlT,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYuE,OAAS,GAC1C8B,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACImC,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAe,EAAI,WAAa,IAAKpE,QAAS,SAAAlD,GAAOsH,GAAe,EAAItH,EAAEC,iBAAmBoO,EAAKG,aAAc9I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,sBAC9LwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAeK,EAAW/D,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOsH,GAAeK,EAAW/D,OAAS5D,EAAEC,iBAAmBoO,EAAKI,aAAc/I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,0BAKlPwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACVG,KAAKqT,iBAGbrT,KAAKC,MAAMuM,kBAAkBxL,KAAKkN,YAAclO,KAAKsT,mBAE1DjJ,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kCACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAQqO,EAAK/S,MAAMyE,WAAWC,KAAtF,UACA0F,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAD,OAAOqO,EAAKO,OAAO5O,KAAxE,oBApiBYtE,sBCG1BmT,cACF,SAAAA,EAAYvT,GAAO,IAAA+K,EAAA3G,EAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAwT,IACfnP,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAoS,GAAA/O,KAAAzE,KAAMC,KACDgF,MAAQ,CACTgG,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEX9H,OAAQ,GACR+H,eAAaT,EAAA,CACTU,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANX3K,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,eAOI,GAPJ5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,UAQA,KARA5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,cASG,GATH5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,oBAUS,GAVTA,GAYbiB,YAAa,EACbtB,OAAQ,GACRuB,eAAgBxB,EAAeyB,YAAY,KAE/C,IAAIG,EAAajI,EAAKpE,MAAMgF,MAAMvB,OAAOM,YACrCyP,EAAUpP,EAAKpE,MAAMyT,eAAe1S,KAAKyS,QACzCE,EAAY,GACZC,EAAoB,GAhCT,OAiCftH,EAAW7D,IAAI,SAACzH,EAAMgG,GAClB2M,EAAU3S,EAAKT,IAAM,GACrBqT,EAAkB5S,EAAKT,IAAM,KAE7BkT,EAAQI,aACRF,EAAY/G,KAAKC,MAAM4G,EAAQI,aAE/BJ,EAAQK,sBACRF,EAAoBhH,KAAKC,MAAM4G,EAAQK,sBAG3CzP,EAAKY,MAAM0O,UAAYA,EACvBtP,EAAKY,MAAM2O,kBAAoBA,EAC/BvP,EAAK0I,kBAAoB1I,EAAK0I,kBAAkBxH,KAAvBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACzBA,EAAK2I,aAAe3I,EAAK2I,aAAazH,KAAlBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACpBA,EAAK0P,YAAc1P,EAAK0P,YAAYxO,KAAjBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACnBA,EAAK6I,uBAAyB7I,EAAK6I,uBAAuB3H,KAA5BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAjDfA,yFAmDOpE,GACjBA,EAAMmG,YAAY4N,YAAe/T,EAAMmG,YAAY6N,SAAWjU,KAAKC,MAAMmG,YAAY4N,aAAe/T,EAAMmG,YAAY4N,YACvHhU,KAAKkU,eAAejU,+CAGR,IAAAgH,EAAAjH,KACZsM,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YADzBmJ,EAEoDnN,KAAKiF,MAAnEgH,EAFUkB,EAEVlB,YAAa0H,EAFHxG,EAEGwG,UAAWC,EAFdzG,EAEcyG,kBAAmB1H,EAFjCiB,EAEiCjB,eAC7CkB,EAAYxJ,IAAIkF,mBAAqBwD,EAAWL,GAAa7G,UAC7DuF,EAAS,IAAI0C,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,IAErBR,EAAyBlN,KAAKkN,uBAClCvC,EAAOgD,GAAG,kBAAmB,SAAUhJ,GAC/BA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,kBACtCV,EAAuBvI,EAAEwB,UAGjCwE,EAAOgD,GAAG,eAAgB,SAAUhJ,GAC5BA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,mBACtCjJ,EAAEwB,OAAO0H,QAAQ,UAAW,EAAG,CAC3B3N,SAAUyK,EAAOmD,UAAUvI,KAAKoF,KAEpCuC,EAAuBvI,EAAEwB,WAGjC+F,EAAe6B,UAAUpD,GACzB3K,KAAK6E,SAAS,CACV8F,OAAQA,EACRuB,eAAgBA,GACjB,WACCjF,EAAK+F,aAAaI,EAAW,WACzB,IAAIY,EAAU1B,EAAWL,GAAa1L,GACtC,GAAIoT,EAAU3F,GAAU,CACpB,IAAIC,EAAQ0F,EAAU3F,GAClB/C,EAAW2I,EAAkB5F,IAAY,GAC7C/G,EAAKkN,YAAYvQ,IAAIkF,mBAAqBmF,EAAOhD,+CAKlDhL,GACPA,EAAMmG,aAAenG,EAAMmG,YAAYC,UACvCrG,KAAK+T,YAAY9T,EAAMmG,YAAYC,SAAStD,KAAKgE,2CAQ5CqG,EAAWkB,GACpB,IAAI3D,EAAS3K,KAAKiF,MAAM0F,OACxBA,EAAO4D,QACPlB,SAAOmB,MAAMC,QAAQrB,EAAW,SAAUsB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClCjE,EAAOkE,UAAUH,EAAgBrD,QACjCV,EAAOmE,SAASJ,EAAgBtD,OAChCsD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT9D,KAAMwD,EAAgBtD,MAAQ,EAC9BD,IAAKuD,EAAgBrD,OAAS,IAElCV,EAAOsE,IAAIP,GACX/D,EAAOmD,YACiB,oBAAbQ,GACPA,0CAIAL,GAER,GADyBjO,KAAKiF,MAAxBiH,eACagD,WAAW,YAC1BjJ,IAAOkJ,QAAQ,4CACZ,CACH,IAAIC,EAAgBxL,IAAIkF,mBAAqBmF,EAD1CoB,EAEkFrP,KAAKiF,MAApF0O,EAFHtE,EAEGsE,UAAWC,EAFdvE,EAEcuE,kBAAmB3H,EAFjCoD,EAEiCpD,YAAahB,EAF9CoE,EAE8CpE,SAAUQ,EAFxD4D,EAEwD5D,cAAed,EAFvE0E,EAEuE1E,OAEtE2E,EADatP,KAAKC,MAAMgF,MAAMvB,OAAOM,YACNiI,GACnC0H,EAAUrE,EAAkB/O,IAAM0N,EAClC2F,EAAkBtE,EAAkB/O,IAAM0K,EANvC,IAAAmJ,EAOsBR,EAAkBtE,EAAkB/O,IAAvD+K,EAPH8I,EAOG9I,OAAQC,EAPX6I,EAOW7I,OACd8B,SAAOmB,MAAMC,QAAQW,EAAe,SAAUI,GAC1CA,EAAoBb,IAApBvN,OAAAqO,EAAA,EAAArO,CAAA,GACOqK,EADP,CAEIP,KAAMP,EAAOS,MAAQ,EACrBD,IAAKR,EAAOU,OAAS,EACrBC,SACAC,SACAqC,iBAAkB,WAClBxN,KAAM,WACN2O,QAAS,SACTC,QAAS,SACTU,gBAAgB,EAChBC,QAAS,KAEbhF,EAAOsE,IAAIO,GACX7E,EAAOmD,mDASPG,EAAOhD,GAAU,IAAA2E,EACO5P,KAAKiF,MAA/B0F,EADmBiF,EACnBjF,OAAQc,EADWmE,EACXnE,cACd4B,SAAOmB,MAAMC,QAAQR,EAAO,SAAUuB,GAClCA,EAAoBb,IAApBvN,OAAAqO,EAAA,EAAArO,CAAA,GACOqK,EACAR,EAFP,CAGI2C,iBAAkB,WAClBxN,KAAM,WACN2O,QAAS,SACTC,QAAS,YAEbrE,EAAOsE,IAAIO,GACX7E,EAAOmD,6DAOQ+B,GAAK,IAAAC,EACyB9P,KAAKiF,MAAhDvB,EADkBoM,EAClBpM,OAAQkQ,EADU9D,EACV8D,kBAAmB3H,EADT6D,EACS7D,YAC7BjF,EAAQhH,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYiI,GAAa1L,GAC7DqT,EAAkB5M,GAAlB5F,OAAAqO,EAAA,EAAArO,CAAA,GACOwS,EAAkB5M,GADzB,CAEIkE,KAAM2E,EAAI3E,KACVC,IAAK0E,EAAI1E,IACTG,OAAQuE,EAAIvE,OACZC,OAAQsE,EAAItE,OACZC,MAAOqE,EAAIrE,MACXJ,MAAOyE,EAAIzE,MACXC,OAAQwE,EAAIxE,OACZqE,eAAgBG,EAAIH,iBAExB,IAAIK,EAAaF,EAAIG,kBACrBhQ,KAAK6E,SAAS,CACVnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GACAsC,EADD,CAEFuM,EAAGJ,EAAI3E,KAAQ6E,EAAW3E,MAAQ,EAClC8E,EAAGL,EAAI1E,IAAO4E,EAAW1E,OAAS,EAClCD,MAAOyE,EAAIM,iBACX9E,OAAQwE,EAAIO,kBACZ5E,MAAOqE,EAAIrE,MACXF,OAAQuE,EAAIvE,OACZC,OAAQsE,EAAItE,SACbqI,4DAMG,IAAA3L,EAAAjI,KACJ0D,EAAW1D,KAAKiF,MAAhBvB,OACN1D,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,EAAP,CAAe2M,aAAc3M,EAAO2M,eAAiB,WAAM,IAAAC,EACpCrI,EAAKhD,MAAxC0F,EADuE2F,EACvE3F,OAAQuB,EAD+DoE,EAC/DpE,eAAgBxI,EAD+C4M,EAC/C5M,OACpBwI,EAAegD,WAAW,YAChCP,IAAI,CAAEe,eAAgBhM,EAAO2M,cACjC1F,EAAOmD,6DASQ1N,EAAML,EAAOwQ,GAChC,IAAIC,GAAU,EACVD,IACAC,GAAU,GAH4B,IAOtChF,EAPsCiF,EAKTzQ,KAAKiF,MAAhCiH,EALoCuE,EAKpCvE,eAAgBxI,EALoB+M,EAKpB/M,OAClBgN,EAASxE,EAAegD,WAAW,YAE3B,SAAR9O,IACAoL,EAAmB,KAAVzL,EAAgBoK,SAASpK,GAAS,EAC3C2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF8H,MAAOA,IAEXxL,KAAK2Q,iBAAiB,CAAEnF,SAASkF,EAAQF,GACzCxQ,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,gDAOnBgD,GAAO,IAGjBkK,EAAMC,EAAMvF,EAAQC,EAAQH,EAAOC,EAAQG,EAH1BsF,EACY9Q,KAAKiF,MAAhCiH,EADe4E,EACf5E,eAAgBxI,EADDoN,EACCpN,OAClBgN,EAASxE,EAAegD,WAAW,YAEvC,GAAwB,eAApBxI,EAAMP,OAAO5F,GAAqB,CAClCqQ,EAA+B,KAAvBlK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFuM,EAAGW,IAEP,IAAI1F,EAAO0F,EAAQF,EAAOV,kBAAkB5E,MAAQ,EACpDpL,KAAK2Q,iBAAiB,CAAEzF,QAAQwF,QAC7B,GAAyB,eAApBhK,EAAMP,OAAO5F,GAAsB,CAC3CsQ,EAA+B,KAAvBnK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFwM,EAAGW,IAEP,IAAI1F,EAAM0F,EAAQH,EAAOV,kBAAkB3E,OAAS,EACpDrL,KAAK2Q,iBAAiB,CAAExF,OAAOuF,QAC5B,GAAyB,UAApBhK,EAAMP,OAAO5F,GAAiB,CACtC,IAAIwQ,EAAcL,EAAOtF,MAEzBE,GADAF,EAAgC,KAAvB1E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,GACpDgR,EACjB1F,EAAS3H,EAAO2H,OAChBE,EAAS7H,EAAO6H,OAChB,IAAIyF,EAAQ1F,EAAS5H,EAAO4H,OACxB5H,EAAO2M,cACPhF,EAAS3H,EAAO2H,OAAS2F,EACzBzF,EAAS7H,EAAO6H,OAASyF,GAE7BtN,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF0H,QACAC,SACAC,SACAC,WAEJvL,KAAK2Q,iBAAiB,CAAErF,SAAQC,UAAUmF,QACvC,GAAyB,WAApBhK,EAAMP,OAAO5F,GAAkB,CACvC,IAAI0Q,EAAeP,EAAOrF,OAE1BE,GADAF,EAAiC,KAAvB3E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,GACpDkR,EAClB7F,EAAQ1H,EAAO0H,MACfE,EAAS5H,EAAO4H,OAChB,IAAI0F,EAAQzF,EAAS7H,EAAO6H,OACxB7H,EAAO2M,cACPjF,EAAQ1H,EAAO0H,MAAQ4F,EACvB1F,EAAS5H,EAAO4H,OAAS0F,GAE7BtN,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF0H,QACAC,SACAC,SACAC,WAEJvL,KAAK2Q,iBAAiB,CAAErF,SAAQC,UAAUmF,OACd,UAApBhK,EAAMP,OAAO5F,KACrBiL,EAAgC,KAAvB9E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACrE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF8H,MAAOA,IAEXxL,KAAK2Q,iBAAiB,CAAEnF,SAASkF,IAErC1Q,KAAK6E,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,8CAQhB1C,EAAM0P,EAAQF,GAAS,IAAAU,EACalR,KAAKiF,MAAhDgH,EAD8BiF,EAC9BjF,YAAa2H,EADiB1C,EACjB0C,kBAAmBjJ,EADFuG,EACEvG,OAClC3D,EAAQhH,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYiI,GAAa1L,GAC7DqT,EAAkB5M,GAAlB5F,OAAAqO,EAAA,EAAArO,CAAA,GACOwS,EAAkB5M,GAClBhG,GAEP0P,EAAO7C,QAAQ7M,EAAM,CACjBd,SAAUyK,EAAOmD,UAAUvI,KAAKoF,GAChCwG,WAAY,WACJX,GACA7F,EAAO6F,QAAQ,kBAAmB,CAAErK,OAAQuK,OAIxDA,EAAOU,+CAMApK,GAAO,IAAAqK,EAAArR,KACdA,KAAK6E,SAAS,CAAEoH,YAAajF,EAAOtD,OAAQ,IAAM,WAAM,IAAA4N,EACbD,EAAKpM,MAAtC0O,EAD8CrC,EAC9CqC,UAAWC,EADmCtC,EACnCsC,kBACbtH,EAAa+E,EAAKpR,MAAMgF,MAAMvB,OAAOM,YACrCoJ,EAAYxJ,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,UAC3DiM,EAAKrE,aAAaI,EAAW,WACzB,IAAIY,EAAU1B,EAAWtF,GAAOzG,GAChC,GAAIoT,EAAU3F,GAAU,CACpB,IAAIC,EAAQ0F,EAAU3F,GAClB/C,EAAW2I,EAAkB5F,IAAY,GAC7CqD,EAAK8C,YAAYvQ,IAAIkF,mBAAqBmF,EAAOhD,2CAStD,IACDgB,EAAgBjM,KAAKiF,MAArBgH,YACNA,GAA4B,EAC5BjM,KAAKuR,WAAWtF,sCAKT,IACDA,EAAgBjM,KAAKiF,MAArBgH,YACNA,GAA4B,EAC5BjM,KAAKuR,WAAWtF,kCAMbtH,GAAG,IAAA6M,EACiCxR,KAAKiF,MAAtC0O,EADAnC,EACAmC,UAAWC,EADXpC,EACWoC,kBACjB5T,KAAKC,MAAMoU,gBAAgB,CACvBxS,eAAgB7B,KAAKC,MAAMyT,eAAe1S,KAAKyS,QAAQ5R,eACvDgS,WAAYjH,KAAK8E,UAAUiC,GAC3BG,oBAAqBlH,KAAK8E,UAAUkC,KAExC3N,IAAO0L,QAAQ,+BACf3R,KAAKC,MAAMyE,WAAWC,kCAEnBA,GACHA,EAAEC,iBADI,IAAAgN,EAE8E5R,KAAKiF,MAAnFiH,EAFA0F,EAEA1F,eAAgByH,EAFhB/B,EAEgB+B,UAAWC,EAF3BhC,EAE2BgC,kBAAmB3H,EAF9C2F,EAE8C3F,YAAatB,EAF3DiH,EAE2DjH,OAC7D2B,GAHEsF,EAEmElO,OACxD1D,KAAKC,MAAMgF,MAAMvB,OAAOM,aACrCsQ,EAAcpI,EAAegD,WAAW,YAC5C,GAAIoF,EAAa,CACb,IAAIhF,EAAoBhD,EAAWL,GACnC0H,EAAUrE,EAAkB/O,IAAM,GAClCqT,EAAkBtE,EAAkB/O,IAAM,GAC1CP,KAAK6E,SAAS,CAAE8O,YAAWC,oBAAmBlQ,OAAQ,KACtDuC,IAAO0L,QAAQ,4BACfhH,EAAOmH,OAAOwC,wCAMV,IAAAvC,EAAA/R,KACFiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACjByM,EAAW/D,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,WACtByK,EAAA1K,EAAAC,cAAA,UACK0M,EAAW7D,IAAI,SAACzH,EAAMgG,GACnB,OAAOqD,EAAA1K,EAAAC,cAAA,MAAI8I,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAIoN,EAAKR,WAAWvK,IAAQnH,UAAW,cAAgBmH,GAASiF,EAAc,eAAiB,KAC5H5B,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,YACrDiF,EAAA1K,EAAAC,cAAA,SAAI0M,EAAWtF,GAAO7B,wDAQ/B,IAAAkN,EAAArS,KAGX,GAFyBA,KAAKiF,MAAxBiH,eAC8BgD,WAAW,YAE3C,OAAO7E,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAD,OAAO0N,EAAKtN,OAAOJ,KAA1E,mDAME,IAAA2N,EAAAtS,KACP0D,EAAW1D,KAAKiF,MAAhBvB,OACN,OAAO2G,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOuM,GAAK,EACnB1I,UAAW,aACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOwM,GAAK,EACnB3I,UAAW,aACXpD,YAAY,EACZuO,UAAUhP,EACV+O,UAAU,SACVvS,SAAUF,KAAK+M,sBAGvB1C,EAAA1K,EAAAC,cAAA,WACIyK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAO2D,EAAO8H,OAAS,EACvBjE,UAAW,QACXpD,YAAY,EACZuO,UAAUhP,EACV+O,UAAU,SACVvS,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC+S,EAAAhT,EAAD,CACIiT,SAAU,IACVC,UAAW,IACXH,UAAUhP,EACV3D,MAAO2D,EAAO8H,OAAS,EACvBtL,SAAU,SAAAH,GAAK,OAAIuS,EAAKQ,uBAAuB,QAAS/S,IACxDgT,iBAAkB,SAAAhT,GAAK,OAAIuS,EAAKQ,uBAAuB,QAAS/S,GAAO,OAE/EsK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAO2D,EAAO0H,OAAS,EACvB7D,UAAW,QACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,SACXvH,MAAO2D,EAAO2H,QAAU,EACxB9D,UAAW,SACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gBAAewK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,kBAAoB6D,EAAO2M,YAAc,SAAW,IAAKxI,QAAS,SAAAlD,GAAC,OAAI2N,EAAKjC,gBAAehG,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,oDAI5J,IAAA0S,EAAAvS,KACCiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mCAClBwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,eACVwK,EAAA1K,EAAAC,cAAA,8BAGRyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKiT,YACN5I,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,UAAQW,GAAG,WACX8J,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKkT,iBACLlT,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYuE,OAAS,GAC1C8B,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACImC,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAe,EAAI,WAAa,IAAKpE,QAAS,SAAAlD,GAAOsH,GAAe,EAAItH,EAAEC,iBAAmB2N,EAAKY,aAAc9I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,sBAC9LwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAeK,EAAW/D,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOsH,GAAeK,EAAW/D,OAAS5D,EAAEC,iBAAmB2N,EAAKa,aAAc/I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,0BAKlPwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACVG,KAAKqT,iBAGdhJ,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gBACXwK,EAAA1K,EAAAC,cAAC2U,EAAA,EAADnT,OAAAyE,OAAA,GACQ7F,KAAKC,MADb,CAEImI,KAAMpI,KAAKC,MAAMuU,UACjBjN,UAAW,YACXD,UAAW,WACXI,SAAU,WACVvD,YAAY,EACZpE,MAAO,GACPqF,UAAW,UAM/BiF,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kCACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAQ4N,EAAKtS,MAAMyE,WAAWC,KAAtF,UACA0F,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAD,OAAO4N,EAAKgB,OAAO5O,KAAxE,oBAliBStE,aA+iBdmJ,kBAPf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAKZoD,CAAyBgK,GCpjBlCiB,cACF,SAAAA,EAAYxU,GAAO,IAAA+K,EAAA3G,EAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAyU,IACfpQ,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAqT,GAAAhQ,KAAAzE,KAAMC,KA0EViN,uBAAyB,SAAA2C,GAAO,IAAA1C,EAC0B9I,EAAKY,MAArDvB,EADsByJ,EACtBzJ,OAAQwI,EADciB,EACdjB,eAAgBD,EADFkB,EACElB,YAAatB,EADfwC,EACexC,OAEvC+J,GADQrQ,EAAKpE,MAAMgF,MAAMvB,OAAOM,YAAYiI,GAAa1L,GAC/C2L,EAAegD,WAAW,YACxC,GAAIwF,EAAS,CACT,IAAIC,EAAW,IAAItH,SAAOuH,KAAK,CAC3B1J,KAAM2E,EAAI3E,KAAQwJ,EAAQtJ,MAAQ,EAClCD,IAAK0E,EAAI1E,IAAOuJ,EAAQrJ,OAAS,EACjCD,MAAOyE,EAAIM,iBACX9E,OAAQwE,EAAIO,kBACZyE,KAAM,KAEVH,EAAQ/F,IAAI,WAAYgG,GACxBhK,EAAOmD,YACPzJ,EAAKQ,SAAS,CACVnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GACAsC,EADD,CAEFuM,EAAGJ,EAAI3E,KACPgF,EAAGL,EAAI1E,IACPC,MAAOyE,EAAIM,iBACX9E,OAAQwE,EAAIO,wBA/FT/L,EAkNnBkN,WAAa,SAAAvK,GACT3C,EAAKQ,SAAS,CAAEoH,YAAajF,EAAOtD,OAAQ,IAAM,WAAM,IAAA2L,EACXhL,EAAKY,MAC1CqH,GAFgD+C,EAC9CjD,WAD8CiD,EAClChD,mBACDhI,EAAKpE,MAAMgF,MAAMvB,OAAOM,aACrCoJ,EAAYxJ,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,UAC3Df,EAAK2I,aAAaI,EAAW,WAAQ/I,EAAKyQ,YAAY1H,QAvN3C/I,EA0OnB0I,kBAAoB,SAAArG,GAAS,IAGrBkK,EAAMC,EAAsBzF,EAAOC,EAHduE,EACQvL,EAAKY,MAAhCiH,EADmB0D,EACnB1D,eAAgBxI,EADGkM,EACHlM,OAClBgN,EAASxE,EAAegD,WAAW,gBAEvC,GAAwB,eAApBxI,EAAMP,OAAO5F,GAAqB,CAClCqQ,EAA+B,KAAvBlK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFuM,EAAGW,IAEP,IAAI1F,EAAO0F,EACXvM,EAAKsM,iBAAiB,CAAEzF,QAAQwF,GAAO,QACpC,GAAyB,eAApBhK,EAAMP,OAAO5F,GAAsB,CAC3CsQ,EAA+B,KAAvBnK,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACpE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEFwM,EAAGW,IAEP,IAAI1F,EAAM0F,EACVxM,EAAKsM,iBAAiB,CAAExF,OAAOuF,GAAO,OACV,UAApBhK,EAAMP,OAAO5F,IACrB6K,EAAgC,KAAvB1E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACrE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF0H,MAAOA,IAEX/G,EAAKsM,iBAAiB,CAAEvF,SAASsF,GAAO,IACZ,WAApBhK,EAAMP,OAAO5F,KACrB8K,EAAiC,KAAvB3E,EAAMP,OAAOpG,MAAgBoK,SAASzD,EAAMP,OAAOpG,OAAS,EACtE2D,EAAMtC,OAAAqO,EAAA,EAAArO,CAAA,GACCsC,EADD,CAEF2H,OAAQA,IAEZhH,EAAKsM,iBAAiB,CAAEtF,UAAUqF,GAAO,IAE7CrM,EAAKQ,SAAS,CAAEnB,OAAOtC,OAAAqO,EAAA,EAAArO,CAAA,GAAMsC,MA3Q7BW,EAAKY,MAAQ,CACTgG,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEX9H,OAAQ,GACR+H,eAAaT,EAAA,CACTU,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANX3K,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,eAOI,GAPJ5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,UAQA,KARA5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,cASG,GATH5J,OAAA4K,EAAA,EAAA5K,CAAA4J,EAAA,oBAUS,GAVTA,GAYbiB,YAAa,EACbtB,OAAQ,GACRuB,eAAgBxB,EAAeyB,YAAY,KAE9B9H,EAAKpE,MAAMgF,MAAMvB,OAAOM,YA7B1B,OAAAK,mFA+BC,IAAA4C,EAAAjH,KACZsM,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YADzB8L,EAEsB9P,KAAKiF,MAArCgH,EAFU6D,EAEV7D,YAAaC,EAFH4D,EAEG5D,eAEfvB,GADY/G,IAAIkF,mBAAqBwD,EAAWL,GAAa7G,UACpD,IAAIiI,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,KAErBR,EAAyBlN,KAAKkN,uBAClCvC,EAAOgD,GAAG,gBAAiB,SAAUhJ,GAC7BA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,kBACtCV,EAAuBvI,EAAEwB,UAE9BwH,GAAG,kBAAmB,SAAUhJ,GAC3BA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,kBACtCV,EAAuBvI,EAAEwB,UAE9BwH,GAAG,iBAAkB,SAAUhJ,GAC1BA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,kBACtCV,EAAuBvI,EAAEwB,UAE9BwH,GAAG,eAAgB,SAAUhJ,GACxBA,EAAEwB,OAAOyH,kBAAiD,YAA7BjJ,EAAEwB,OAAOyH,mBACtCjJ,EAAEwB,OAAO0H,QAAQ,UAAW,EAAG,CAC3B3N,SAAUyK,EAAOmD,UAAUvI,KAAKoF,KAEpCuC,EAAuBvI,EAAEwB,WAGjC+F,EAAe6B,UAAUpD,GACzB3K,KAAK6E,SAAS,CACV8F,OAAQA,EACRuB,eAAgBA,GACjB,WACC,IAAIkB,EAAYxJ,IAAIkF,mBAAqBwD,EAAWL,GAAa7G,UACjE6B,EAAK+F,aAAaI,EAAW,WAAQnG,EAAK6N,YAAY1H,2CAgClDA,GACR,IAAMzC,EAAS3K,KAAKiF,MAAM0F,OACtBoK,EAAO,IAAI1H,SAAOuH,KAAK,CACvB1J,KAAM,EACNC,IAAK,EACLC,MAAOT,EAAOS,MACdC,OAAQV,EAAOU,OACfwJ,KAAM,OACNjG,YAAY,EACZe,QAAS,KAEbhF,EAAOsE,IAAI8F,GACX/U,KAAKgV,gBAAgB5H,EAAW,WAC5B,IAAI6H,EAAU,IAAI5H,SAAOuH,KAAK,CAC1B1J,MAAOP,EAAOS,MAAQ,KAAO,EAC7BD,KAAMR,EAAOU,OAAS,KAAO,EAC7BD,MAAO,IACPC,OAAQ,IACRwJ,KAAM,GACNK,WAAYvK,EAAOS,MACnB+J,YAAaxK,EAAOU,OACpBK,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,EACpBqJ,kBAAkB,EAClBxH,iBAAkB,WAClBxN,KAAM,iBAEVuK,EAAOsE,IAAIgG,GACXtK,EAAOmD,sDAGCV,EAAWkB,GACvB,IAAI3D,EAAS3K,KAAKiF,MAAM0F,OACxB0C,SAAOmB,MAAMC,QAAQrB,EAAW,SAAUsB,GACtC,IAAIiG,EAAW,IAAItH,SAAOuH,KAAK,CAC3B1J,MAAO,GACPC,KAAM,GACNC,MAAO,IACPC,OAAQ,IACRwJ,KAAM,KAEVnG,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT9D,KAAMwD,EAAgBtD,MAAQ,EAC9BD,IAAKuD,EAAgBrD,OAAS,EAC9BgK,SAAUV,EACV/F,YAAY,EACZxO,KAAM,YAEVuK,EAAOsE,IAAIP,GACX/D,EAAOmD,YACiB,oBAAbQ,GACPA,2CASClB,EAAWkB,GACpB,IAAI3D,EAAS3K,KAAKiF,MAAM0F,OACxBA,EAAO4D,QACPlB,SAAOmB,MAAMC,QAAQrB,EAAW,SAAUsB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClCjE,EAAOkE,UAAUH,EAAgBrD,QACjCV,EAAOmE,SAASJ,EAAgBtD,OAChCsD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT9D,KAAMwD,EAAgBtD,MAAQ,EAC9BD,IAAKuD,EAAgBrD,OAAS,IAElCV,EAAOsE,IAAIP,GACX/D,EAAOmD,YACiB,oBAAbQ,GACPA,0CAOA,IAAArG,EAAAjI,KACFiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACjByM,EAAW/D,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,WACtByK,EAAA1K,EAAAC,cAAA,UACK0M,EAAW7D,IAAI,SAACzH,EAAMgG,GACnB,OAAOqD,EAAA1K,EAAAC,cAAA,MAAI8I,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAIsD,EAAKsJ,WAAWvK,IAAQnH,UAAW,cAAgBmH,GAASiF,EAAc,eAAiB,KAC5H5B,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBwD,EAAWtF,GAAO5B,YACrDiF,EAAA1K,EAAAC,cAAA,SAAI0M,EAAWtF,GAAO7B,0DA0B7BnE,EAAM0P,EAAQF,GAAS,IAC/B7F,EAAW3K,KAAKiF,MAAhB0F,OACL+F,EAAO/B,IAAI3N,GACX2J,EAAO6F,QAAQ,kBAAmB,CAAErK,OAAQuK,IAC5CA,EAAOU,qDA8CM,IACP1N,EAAW1D,KAAKiF,MAAhBvB,OACN,OAAO2G,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOuM,GAAK,EACnB1I,UAAW,aACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,aACXvH,MAAO2D,EAAOwM,GAAK,EACnB3I,UAAW,aACXpD,YAAY,EACZuO,UAAUhP,EACV+O,UAAU,SACVvS,SAAUF,KAAK+M,sBAGvB1C,EAAA1K,EAAAC,cAAA,YAGAyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAO2D,EAAO0H,OAAS,EACvB7D,UAAW,QACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,qBAEnB1C,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,SACXvH,MAAO2D,EAAO2H,QAAU,EACxB9D,UAAW,SACXpD,YAAY,EACZsO,UAAU,SACVC,UAAUhP,EACVxD,SAAUF,KAAK+M,8DAMhB,IAAAsE,EAAArR,KAGX,OAFyBA,KAAKiF,MAAxBiH,eAC8BgD,WAAW,eAEpC7E,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAD,OAAO0M,EAAKtM,OAAOJ,KAAxE,UAEJ,kCAMJA,GAEH8H,QAAQC,IAAI1M,KAAKC,MAAMqV,aAMvBrP,IAAO0L,QAAQ,gDACf3R,KAAKC,MAAMyE,WAAWC,oCAEjB,IAAAoN,EAAA/R,KACCiM,EAAgBjM,KAAKiF,MAArBgH,YACFK,EAAatM,KAAKC,MAAMgF,MAAMvB,OAAOM,YACzC,OAAOqG,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mCAClBwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,eACVwK,EAAA1K,EAAAC,cAAA,yCAGRyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKiT,YACN5I,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,UAAQW,GAAG,WACX8J,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKkT,iBACLlT,KAAKC,MAAMgF,MAAMvB,OAAOM,YAAYuE,OAAS,GAC1C8B,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACImC,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAe,EAAI,WAAa,IAAKpE,QAAS,SAAAlD,GAAOsH,GAAe,EAAItH,EAAEC,iBAAmBmN,EAAKoB,aAAc9I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,sBAC9LwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,+CAAiDoM,GAAeK,EAAW/D,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOsH,GAAeK,EAAW/D,OAAS5D,EAAEC,iBAAmBmN,EAAKqB,aAAc/I,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,0BAKlPwK,EAAA1K,EAAAC,cAAA,WACKI,KAAKqT,kBAIlBhJ,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kCACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAQoN,EAAK9R,MAAMyE,WAAWC,KAAtF,UACA0F,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAD,OAAOoN,EAAKwB,OAAO5O,KAAxE,oBA3XMtE,aAwYXmJ,kBAPf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAKZoD,CAAyBiL,mCCzTzBc,cA3FX,SAAAA,EAAYtV,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAuV,IACflR,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAmU,GAAA9Q,KAAAzE,KAAMC,KACDgF,MAAQ,CACTuQ,QAAQ,GAHGnR,wEAMV,IAAA4C,EAAAjH,KACDyV,EAA2BzV,KAAKC,MAAMwV,yBACtCC,EAAuB1V,KAAKC,MAAMyV,qBAAuB1V,KAAKC,MAAMyV,qBAAuB1V,KAAKC,MAAM0V,0BAC1G,OAAOtL,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACVwK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,4BACPvL,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,eAAiBvL,EAAA1K,EAAAC,cAAA,uBAAcyK,EAAA1K,EAAAC,cAAA,SAAII,KAAKC,MAAM4V,mBAG/DxL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACVwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAc+I,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKhH,MAAM6V,uBAAuBnR,EAAGsC,EAAKhH,MAAM8V,qBAAsB9O,EAAKhH,MAAM+V,UAAW3L,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BAA1K,cAIZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAE2Q,QAASvO,EAAKhC,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGzJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACjCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gCACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,uBACT6V,GAAwBtU,OAAO6U,KAAKP,GAAsBnN,OAAS,GAAKnH,OAAO6U,KAAKP,GAAsBjN,IAAI,SAACC,EAAK1B,GACjH,IAAIuF,EAAwBmJ,EAAqBhN,GAC7CwF,EAAauH,EAAyB3K,KAAK,SAAC+E,GAAU,OAAOA,EAAIqG,6BAA+B3J,EAAsB2J,8BAC1HhI,EAAWvB,cAAgB,GAC3B,IAAIwJ,EAAkB,GAQtB,OAPAjI,EAAWgE,eAAezJ,IAAI,SAACzH,EAAMgG,GACV,yBAAnBhG,EAAKoV,WACLD,EAAkBnV,EAElBkN,EAAWvB,cAAcvC,KAAKpJ,KAG/BqJ,EAAA1K,EAAAC,cAAA,MAAI8I,IAAK1B,EAAOnH,UAAW,SAAWqO,EAAWgI,6BAA+BjP,EAAKhH,MAAMoW,eAAiB,UAAY,KAC3HhM,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,8BACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,WACKuW,GAAmB9L,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBqN,EAAgB/Q,aACrE+Q,GAAmBjI,EAAWvB,cAAcpE,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBoF,EAAWvB,cAAc,GAAGvH,YAC3HiF,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,gCAAgCqO,EAAWoI,eA0BhEjM,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,SAASgI,QAAS,SAAClD,GAAQsC,EAAKhH,MAAMsW,2BAA2B5R,EAAG,CAAE4H,wBAAuB2B,iBAAiB7D,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,qBAAzI,oCA/ElBvV,qBCChBmW,cACF,SAAAA,EAAYvW,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAwW,IACfnS,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAoV,GAAA/R,KAAAzE,KAAMC,KACDgF,MAAQ,CACTwR,YAAa,GACbjB,QAAQ,GAEZnR,EAAKqS,qBAAuBrS,EAAKqS,qBAAqBnR,KAA1BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IANbA,oFASfrE,KAAK0W,oEAEYnW,GAAI,IAAA0G,EAAAjH,KACrBA,KAAKC,MAAM0W,iCAAiCpO,OAAS,GAAKvI,KAAKC,MAAM0W,iCAAiClO,IAAI,SAACzH,EAAMgG,GACpGhG,EAAK4V,mCAAmCC,MAAM,KACpDpO,IAAI,SAAClI,EAAIyG,GACRC,EAAKhH,MAAM6W,SAASxW,YAAIC,0DAKVN,GACtB,IAAKA,EAAM8W,QAAQ/C,aAAe/T,EAAM8W,QAAQ9C,QAAS,CACrD,IAAI8C,EAAU9W,EAAM8W,QAAQ1Q,SAASrF,KAAMyV,EAAczW,KAAKiF,MAAMwR,YACpEA,EAAYM,EAAQH,oCAAsCG,EAC1D/W,KAAK6E,SAAS,CAAE4R,YAAaA,sCAG5B,IAAAxO,EAAAjI,KACD2W,EAAmC3W,KAAKC,MAAM0W,iCAC9CjB,EAAwB1V,KAAKC,MAAMyV,uBAA0B7K,IAAEmM,QAAQhX,KAAKC,MAAMyV,sBAA0B1V,KAAKC,MAAMyV,qBAAuB1V,KAAKC,MAAM0V,0BACzJc,EAAczW,KAAKiF,MAAMwR,YAC7B,OAAOpM,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACVwK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,4BACPvL,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,sBAAwBvL,EAAA1K,EAAAC,cAAA,uBAAcyK,EAAA1K,EAAAC,cAAA,SAAII,KAAKC,MAAM4V,mBAGtExL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACVwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQsD,EAAKhI,MAAMgX,qBAAqBtS,EAAG,CAAE+Q,0BAA2B9M,MAAM,gBACpHyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BADjB,6BAIJwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAc+I,MAAM,SAASf,QAAS,SAAClD,GAAQsD,EAAKhI,MAAM6V,uBAAuBnR,EAAGsD,EAAKhI,MAAM8V,qBAAsB9N,EAAKhI,MAAM+V,UAAW3L,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BAA1K,cAIZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsD,EAAKpD,SAAS,CAAE2Q,QAASvN,EAAKhD,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGzJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACjCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gCACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,2BAEN6V,GAAwBtU,OAAO6U,KAAKP,GAAsBnN,OAAS,GAAKnH,OAAO6U,KAAKP,GAAsBjN,IAAI,SAACC,EAAK1B,GAChH,IAAIuF,EAAwBmJ,EAAqBhN,GAGjD,OAFiB6D,EAAsB2K,oCAAsC3K,EAAwBoK,EAAiC7L,KAAK,SAAC+E,GAAU,OAAOA,EAAIqH,qCAAuC3K,EAAsB2J,+BACpMU,mCAAmCC,MAAM,KACnDpO,IAAI,SAAClI,EAAIyG,GACrB,IAAImQ,EAAiBV,EAAYlW,GACjC,OAAO4W,GAAkBA,EAAeC,gCAAgC3O,IAAI,SAACzH,EAAMgG,GAC/E,IAAIqQ,EAAarW,EAAKsW,8BACtB,OAAOjN,EAAA1K,EAAAC,cAAA,UACHyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACVwX,EAAahN,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKnE,IAAIkF,mBAAqBuO,IAAiBhN,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKwP,MAC5ElN,EAAA1K,EAAAC,cAAA,SAAIoB,EAAKwW,iCAzElCnX,aA6FRmJ,kBANf,SAAyBvE,GACrB,MAAO,CACH8R,QAAS9R,EAAM8R,UAIRvN,CAAyBgN,GCxCzBhI,cAvDX,SAAAA,EAAYvO,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAAwO,IACfnK,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAoN,GAAA/J,KAAAzE,KAAMC,KACDgF,MAAQ,CACTuQ,QAAQ,GAHGnR,wEAOV,IAAA4C,EAAAjH,KACDyX,EAAiCzX,KAAKC,MAAMwX,+BAC5C/B,EAAwB1V,KAAKC,MAAMyV,uBAA0B7K,IAAEmM,QAAQhX,KAAKC,MAAMyV,sBAA0B1V,KAAKC,MAAMyV,qBAAuB1V,KAAKC,MAAM0V,0BAC7J,OAAOtL,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACVwK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,4BACPvL,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,iBAAmBvL,EAAA1K,EAAAC,cAAA,uBAAcyK,EAAA1K,EAAAC,cAAA,SAAII,KAAKC,MAAM4V,mBAGjExL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACVwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQsC,EAAKhH,MAAMgX,qBAAqBtS,EAAG,KAAOiE,MAAM,gBAC9FyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BADjB,6BAIJwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAc+I,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKhH,MAAM6V,uBAAuBnR,EAAGsC,EAAKhH,MAAM8V,qBAAsB9O,EAAKhH,MAAM+V,UAAW3L,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BAA1K,cAIZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAE2Q,QAASvO,EAAKhC,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGzJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBAE7B6V,GAAwBtU,OAAO6U,KAAKP,GAAsBnN,OAAS,GAAKnH,OAAO6U,KAAKP,GAAsBjN,IAAI,SAACC,EAAK1B,GAChH,IAAIuF,EAAwBmJ,EAAqBhN,GAC7CwF,EAAa3B,EAAsBmL,kCAAoCnL,EAAwBkL,EAA+B3M,KAAK,SAAC+E,GAAU,OAAOA,EAAI6H,mCAAqCnL,EAAsB2J,8BAExN,OAAO7L,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBAClBwK,EAAA1K,EAAAC,cAAA,SAAGyK,EAAA1K,EAAAC,cAAA,YAAO,cAAoByK,EAAA1K,EAAAC,cAAA,YAAO,KAAWyK,EAAA1K,EAAAC,cAAA,YAAOsO,EAAWyJ,aAClEtN,EAAA1K,EAAAC,cAAA,SAAGyK,EAAA1K,EAAAC,cAAA,YAAO,gBAAsByK,EAAA1K,EAAAC,cAAA,YAAO,KAAWyK,EAAA1K,EAAAC,cAAA,YAAOsO,EAAW0J,eACpEvN,EAAA1K,EAAAC,cAAA,SAAGyK,EAAA1K,EAAAC,cAAA,YAAO,yBAA+ByK,EAAA1K,EAAAC,cAAA,YAAO,KAAWyK,EAAA1K,EAAAC,cAAA,YAAOsO,EAAW2J,kBAC7ExN,EAAA1K,EAAAC,cAAA,SAAGyK,EAAA1K,EAAAC,cAAA,YAAO,yBAA+ByK,EAAA1K,EAAAC,cAAA,YAAO,KAAWyK,EAAA1K,EAAAC,cAAA,YAAOsO,EAAW4J,8BA/CrFzX,wCCGd0X,cACF,SAAAA,EAAY9X,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAA+X,IACf1T,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAA2W,GAAAtT,KAAAzE,KAAMC,KACDgF,MAAQ,CACT+S,UAAW,GACXC,MAAO,GACPC,WAAY,GACZ1C,QAAQ,GANGnR,oFAWfrE,KAAKC,MAAM6W,SAASqB,eACpBnY,KAAKC,MAAM6W,SAASsB,eACpBpY,KAAKC,MAAM6W,SAASuB,iEAGEpY,GACtB,IAAKA,EAAMgY,MAAMjE,aAAe/T,EAAMgY,MAAMhE,QAAS,CACjD,IAAIgE,EAAQhY,EAAMgY,MAAM5R,SAASrF,KAAMsX,EAAY,GACnDL,EAAMxP,IAAI,SAACzH,EAAMgG,GACbsR,EAAUtX,EAAKuX,SAAWvX,IAE9BhB,KAAK6E,SAAS,CAAEoT,MAAOK,IAE3B,IAAKrY,EAAMuY,UAAUxE,aAAe/T,EAAMuY,UAAUvE,QAAS,CACzD,IAAIuE,EAAYvY,EAAMuY,UAAUnS,SAASrF,KAAMsX,EAAY,GAC3DE,EAAU/P,IAAI,SAACzH,EAAMgG,GACjBsR,EAAUtX,EAAKyX,cAAgBzX,IAEnChB,KAAK6E,SAAS,CAAEmT,UAAWM,IAE/B,IAAKrY,EAAMyY,WAAW1E,aAAe/T,EAAMyY,WAAWzE,QAAS,CAC3D,IAAIyE,EAAazY,EAAMyY,WAAWrS,SAASrF,KAAMsX,EAAY,GAC7DI,EAAWjQ,IAAI,SAACzH,EAAMgG,GAClBsR,EAAUtX,EAAK2X,uBAAyB3X,IAE5ChB,KAAK6E,SAAS,CAAEqT,WAAYI,sCAI3B,IAAArR,EAAAjH,KAAAmN,EACkCnN,KAAKiF,MAAtCgT,EADD9K,EACC8K,MAAOD,EADR7K,EACQ6K,UAAWE,EADnB/K,EACmB+K,WACpBU,EAAgC5Y,KAAKC,MAAM2Y,8BAC3ClD,EAAwB1V,KAAKC,MAAMyV,uBAA0B7K,IAAEmM,QAAQhX,KAAKC,MAAMyV,sBAA0B1V,KAAKC,MAAMyV,qBAAuB1V,KAAKC,MAAM0V,0BAC7J,OAAOtL,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACVwK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,4BACPvL,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,eAAiBvL,EAAA1K,EAAAC,cAAA,uBAAcyK,EAAA1K,EAAAC,cAAA,SAAII,KAAKC,MAAM4V,mBAG/DxL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACVwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQsC,EAAKhH,MAAMgX,qBAAqBtS,EAAG,CAAE7E,KAAM,OAAQ+Y,0BAA2B5R,EAAKhH,MAAM2Y,iCAAoChQ,MAAM,gBACjLyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BADjB,6BAIJwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAc+I,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKhH,MAAM6V,uBAAuBnR,EAAGsC,EAAKhH,MAAM8V,qBAAsB9O,EAAKhH,MAAM+V,UAAW3L,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BAA1K,cAIZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAE2Q,QAASvO,EAAKhC,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGzJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACjCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gCAEP6V,GAAwBtU,OAAO6U,KAAKP,GAAsBnN,OAAS,GAAKnH,OAAO6U,KAAKP,GAAsBjN,IAAI,SAACC,EAAK1B,GAChH,IAAIuF,EAAwBmJ,EAAqBhN,GAC7CwF,EAAa3B,EAAsBuM,iCAAmCvM,EAAwBqM,EAA8B9N,KAAK,SAAC+E,GAAU,OAAOA,EAAIiJ,kCAAoCvM,EAAsB2J,8BACjNqC,EAAUrK,EAAW6K,SAASlC,MAAM,KACpCmC,EAAgB9K,EAAW8K,cAAcnC,MAAM,KAC/CoC,EAAiB/K,EAAW+K,eAAepC,MAAM,KACrD,OAAQxM,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACJmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAO6U,KAAKgC,GAAO1P,OAAS,GAAK2F,GAAc7D,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SAAQwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,SAAS,gBAAmBwK,EAAA1K,EAAAC,cAAA,QAAMgW,MAAM,6BAA6BqC,EAAM/J,EAAWgL,qBAAqBC,YAC/L9O,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,+BAA+B,SAC5CwK,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,wBAEFqC,GAASM,EAAQ9P,IAAI,SAAClI,EAAIyG,GACtB,IAAIoS,EAAOnB,EAAM1X,GACjB,OAAO6Y,GAAQ/O,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,6BAA6BwD,EAAKD,eAK3E9O,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAO6U,KAAK+B,GAAWzP,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SAAQwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,SAAS,qBAAwBwK,EAAA1K,EAAAC,cAAA,QAAMgW,MAAM,6BAA6BoC,EAAU9J,EAAWmL,mBAAmBC,YAC5LjP,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,kCAAkC,cAC/CwK,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,wBAEFoC,GAAagB,EAAcvQ,IAAI,SAAClI,EAAIyG,GAChC,IAAIoS,EAAOpB,EAAUzX,GACrB,OAAO6Y,GAAQ/O,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,6BAA6BwD,EAAKE,eAK3EjP,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAO6U,KAAKiC,GAAY3P,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SAAQwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,SAAS,sBAAyBwK,EAAA1K,EAAAC,cAAA,QAAMgW,MAAM,6BAA6BsC,EAAWhK,EAAWqL,eAAeC,kBAC3LnP,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,kCAAkC,eAC/CwK,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,wBAEFsC,GAAce,EAAexQ,IAAI,SAAClI,EAAIyG,GAClC,IAAIoS,EAAOlB,EAAW3X,GACtB,OAAO6Y,GAAQ/O,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,6BAA6BwD,EAAKI,mCAjH5FnZ,aAyIJmJ,kBARf,SAAyBvE,GACrB,MAAO,CACHgT,MAAOhT,EAAMgT,MACbO,UAAWvT,EAAMuT,UACjBE,WAAYzT,EAAMyT,aAIXlP,CAAyBuO,GCnGzB0B,2LAvCb,IAAMtV,EAAanE,KAAKC,MAAMmI,KAAKjE,WAAWnE,KAAKC,MAAMqH,WACnDoS,EAAUvV,EAAanE,KAAKC,MAAMgF,MAAMhB,YAAYjE,KAAKC,MAAMqH,WAAWoS,QAAU,GACpFC,EAAe,cAAAlZ,OAAiB0D,EAAa,cAAgB,GAA9C,KAAA1D,OAAoDT,KAAKC,MAAMF,QAAUoE,EAAa,eAAiB,IAE5H,MAAO,CAAEtE,UADSG,KAAKC,MAAMkE,WAAawV,EAAkB,aAC3BD,QAAWA,EAASvV,WAAcA,mCAInE,IAAMA,EAAanE,KAAK4Z,iBACxB,OAAQvP,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KAAgBmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACtCwK,EAAA1K,EAAAC,cAAA,SAAOia,QAAS7Z,KAAKC,MAAMqH,UAAWzH,UAAU,8BAA8BG,KAAKC,MAAMsH,UAAWvH,KAAKC,MAAMkE,YAAckG,EAAA1K,EAAAC,cAAA,iBAC7HyK,EAAA1K,EAAAC,cAAA,YAAUC,UAAU,uBACnBC,KAAME,KAAKC,MAAMwS,UAAYzS,KAAKC,MAAMwS,UAAY,OACpDlS,GAAIP,KAAKC,MAAMqH,UACfwS,KAAM9Z,KAAKC,MAAM8Z,UAAY/Z,KAAKC,MAAM8Z,UAAY,GACpDC,YAAWha,KAAKC,MAAMga,UAAY,OAClCC,YAAWla,KAAKC,MAAMyH,SACtBvH,YAAa,IACbC,KAAMJ,KAAKC,MAAMqH,UACjB6S,OAAQna,KAAKC,MAAMka,QAAUna,KAAKC,MAAMmI,KAAKgS,iBAC7C1H,SAAU1S,KAAKC,MAAMyS,SACrBxS,SAAUF,KAAKC,MAAMC,UAAYF,KAAKC,MAAMmI,KAAKiS,mBACjDta,MAAOC,KAAKC,MAAMF,MAClBua,uBAAsBta,KAAKC,MAAMsH,UACjCgT,UAAWva,KAAKC,MAAMsa,UACtBC,KAAK,MAELrW,EAAU,YAAkBkG,EAAA1K,EAAAC,cAAA,QAAMC,UAAU,sBAAsB,GAAAY,OAAGT,KAAKC,MAAMsH,UAAd,KAA6BpD,EAAU,4CAM3G,OAAQkG,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACNlI,KAAKya,gBArCkBhQ,IAAMpK,WCqOlBqa,6MA3NXzV,MAAQ,CACJuQ,QAAQ,EACRmF,WAAW,KAMfC,WAAa,SAAAC,GACTA,EAAGjW,iBACHiW,EAAGC,aAAaC,WAAa,OAC7B1W,EAAKQ,SAAS,CAAE8V,WAAW,OAE/BK,YAAc,SAAAH,GACVxW,EAAKQ,SAAS,CAAE8V,WAAW,OAE/BM,OAAS,SAACtW,EAAGuW,EAAWC,GACpB9W,EAAKQ,SAAS,CAAE8V,WAAW,IAC3BtW,EAAKpE,MAAMgb,OAAOtW,EAAGuW,EAAWC,4EAG3B,IAAAlU,EAAAjH,KAAAob,EACgCpb,KAAKC,MAArCwT,EADA2H,EACA3H,QAASyH,EADTE,EACSF,UAAWC,EADpBC,EACoBD,SACpBR,EAAa3a,KAAKiF,MAAlB0V,UACDxT,EAAQsM,EAAQ4H,UAAYzO,KAAKC,MAAM4G,EAAQ4H,WAAY,CAACjU,QAAQ,EAAGiE,OAAO,GAAID,MAAM,IAE5F,OAAOf,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,yCACZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACT4T,EAAQjJ,UAEbH,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACTG,KAAKC,MAAMqb,cAAc7H,EAASyH,EAAWC,EAAUnb,KAAKC,MAAMsb,iBAG3ElR,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACfwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAE2Q,QAASvO,EAAKhC,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGrJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,uBAClCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,cACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,WACXvH,MAAO0T,EAAQjJ,SACfjD,UAAW,WACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,WAAYwW,IACvDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,WAAYwW,SAIvE9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,eACXvH,MAAO0T,EAAQiI,aACfnU,UAAW,eACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,eAAgBwW,IAC3Djb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,eAAgBwW,SAI3E9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,UACXvH,MAAO0T,EAAQkI,QACfpU,UAAW,UACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,UAAWwW,IACtDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,UAAWwW,aAQtF9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAACgc,EAAA,EAADxa,OAAAyE,OAAA,GAAkB7F,KAAKiF,MAAvB,CACIpF,UAAU,YACV0H,UAAW,eACXD,UAAW,eACXI,SAAU,eACVnH,GAAI,eAAiB4a,EACrBpb,MAAO0T,EAAQoI,aACfC,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnC7X,YAAY,EACZjE,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMic,mBAAmBvX,EAAG,eAAgBwW,QAGxE9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAACgc,EAAA,EAADxa,OAAAyE,OAAA,GAAkB7F,KAAKiF,MAAvB,CACIpF,UAAU,YACV0H,UAAW,cACXD,UAAW,iBACXI,SAAU,iBACVnH,GAAI,iBAAmB4a,EACvBpb,MAAO0T,EAAQ0I,eACfL,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnC7X,YAAY,EACZjE,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMic,mBAAmBvX,EAAG,iBAAkBwW,UAKlF9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACfwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACPwK,EAAA1K,EAAAC,cAACwc,EAADhb,OAAAyE,OAAA,GAAkB7F,KAAKC,MAAvB,CACIqH,UAAW,kBACXvH,MAAO0T,EAAQ4I,gBACf9U,UAAW,kBACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,kBAAmBwW,IAC9Djb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,kBAAmBwW,QAG1E9Q,EAAA1K,EAAAC,cAAA,WACIyK,EAAA1K,EAAAC,cAAC0c,EAAA,EAAD,CACIzS,gBAAiB7J,KAAKC,MAAM4J,gBAC5B7I,KAAM,CAAC,CAACZ,KAAO,SAAUL,MAAQ,GAAG,CAACK,KAAO,QAASL,MAAQ,GAAG,CAACK,KAAO,WAAYL,MAAQ,GAAI,CAACK,KAAO,SAAUL,MAAQ,GAAI,CAACK,KAAO,QAASL,MAAQ,IACvJwc,WAAW,OACXC,YAAY,QACZC,gBAAkB,mBAClB1c,MAAOoH,EAAMC,QACbhH,KAAK,eACLmH,UAAU,eACV1F,eAAkBsZ,KAG1B9Q,EAAA1K,EAAAC,cAAA,WACQyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,SACXvH,MAAOoH,EAAMkE,OACb9D,UAAW,wBACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMyc,qBAAqB/X,EAAG,SAAUwW,IAC1Djb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAM0c,uBAAuBhY,EAAG,SAAUwW,SAI1E9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAOoH,EAAMiE,MACb7D,UAAW,uBACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMyc,qBAAqB/X,EAAG,QAASwW,IACzDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAM0c,uBAAuBhY,EAAG,QAASwW,YAOzF9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC2U,EAAA,EAAD,CACIjG,UAAU,EACVsO,QAAS,SAAC5b,GACNiG,EAAKhH,MAAM4c,cAAc7b,IAE7BA,KAAMyS,EAAQ5R,eACd0F,UAAW,gBACXD,UAAW,gBACXI,SAAU,gBACVU,KAAMpI,KAAKC,MAAM6c,mBACjB3Y,YAAY,EACZwD,UAAW,gBACXvC,UAAWqO,EAAQsJ,SACnBhd,MAAO0T,EAAQsJ,aAI1B1S,EAAA1K,EAAAC,cAAA,WACI6T,EAAQuJ,eAAiB5b,OAAO6U,KAAKxC,EAAQuJ,eAAezU,OAAS,GAAKnH,OAAO6U,KAAKxC,EAAQuJ,eAAevU,IAAI,SAACC,EAAK1B,GACpH,IAAIiW,EAAmBxJ,EAAQuJ,cAActU,GACzCwU,EAAkCD,EAAiBxF,+BAAiCwF,EAAiBxF,+BAAiC,GACtI0F,EAAiCF,EAAiBrE,8BAAgCqE,EAAiBrE,8BAAgC,GACnIwE,EAAoCH,EAAiBtG,iCAAmCsG,EAAiBtG,iCAAmC,GAC5IhB,EAA4BsH,EAAiBxH,yBAA2BwH,EAAiBxH,yBAA2B,GACxH,OAAOpL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBAAuB6I,IAAK1B,GACV,UAAnCiW,EAAiBI,gBAA8BhT,EAAA1K,EAAAC,cAAC0d,EAADlc,OAAAyE,OAAA,CAASwQ,eAAgB,GAAIV,0BAA2BA,GAA+BsH,EAAuBhW,EAAKhH,MAAnH,CAA0H+V,OAAQmF,KAC9I,WAAnC8B,EAAiBI,gBAA+BhT,EAAA1K,EAAAC,cAAC2d,EAADnc,OAAAyE,OAAA,CAAUwQ,eAAgB,GAAIV,0BAA2ByH,GAAuCH,EAAsBhW,EAAKhH,MAA3H,CAAkI+V,OAAQmF,KACvJ,QAAnC8B,EAAiBI,gBAA4BhT,EAAA1K,EAAAC,cAAC4d,EAADpc,OAAAyE,OAAA,CAAMwQ,eAAgB,GAAIV,0BAA2BwH,GAAoCF,EAAsBhW,EAAKhH,MAApH,CAA2H+V,OAAQmF,KAC7I,SAAnC8B,EAAiBI,gBAA6BhT,EAAA1K,EAAAC,cAAC6d,EAADrc,OAAAyE,OAAA,CAAOwQ,eAAgB,GAAIV,0BAA2BuH,GAAqCD,EAAsBhW,EAAKhH,MAAtH,CAA6H+V,OAAQmF,SAIhM9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,sBAAwB8a,EAAY,oBAAsB,IAAKM,OAAQ,SAAAtW,GAAOsC,EAAKgU,OAAOtW,EAAGuW,EAAWC,IAAaP,WAAY5a,KAAK4a,WAAYI,YAAahb,KAAKgb,aAChL3Q,EAAA1K,EAAAC,cAAA,iDAAwCyK,EAAA1K,EAAAC,cAAA,yCAnN/C6K,IAAMpK,WCqQZqd,eAlQX,SAAAA,EAAYzd,GAAO,IAAAoE,EAAA,OAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAA0d,IACfrZ,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAsc,GAAAjZ,KAAAzE,KAAMC,KAWV2a,WAAa,SAAAC,GACTA,EAAGjW,iBACHiW,EAAGC,aAAaC,WAAa,OAC7B1W,EAAKQ,SAAS,CAAE8V,WAAW,KAfZtW,EAiBnB2W,YAAc,SAAAH,GACVxW,EAAKQ,SAAS,CAAE8V,WAAW,KAlBZtW,EAoBnB4W,OAAS,SAACtW,EAAGuW,EAAWC,GACpB9W,EAAKQ,SAAS,CAAE8V,WAAW,IAC3BtW,EAAKpE,MAAMgb,OAAOtW,EAAGuW,EAAWC,IAtBjB9W,EAyBnBsZ,cAAgB,SAAClK,EAASyH,EAAWC,EAAUI,GAC3C,IAAMva,EAAO,CACTyS,UACAyH,YACAC,WACAI,iBAEJ,OAAOlR,EAAA1K,EAAAC,cAACge,EAADxc,OAAAyE,OAAA,GAAYxB,EAAKpE,MAAWe,KA9BnCqD,EAAKY,MAAQ,CACT4Y,YAAY,EACZrI,QAAQ,EACRsI,WAAY,IALDzZ,wEAmCV,IAAA4C,EAAAjH,KACG2a,EAAc3a,KAAKiF,MAAnB0V,UACFoD,EAAa/d,KAAKC,MAAMgF,MAAM+Y,QAC9BC,EAAOje,KAAKC,MAAMgF,MAAMgZ,KAHzB7C,EAIkCpb,KAAKC,MAAtCwT,EAJD2H,EAIC3H,QAASyH,EAJVE,EAIUF,UAAWC,EAJrBC,EAIqBD,SACtBhU,EAAQsM,EAAQ4H,UAAYzO,KAAKC,MAAM4G,EAAQ4H,WAAY,CAACjU,QAAQ,EAAGiE,OAAO,GAAID,MAAM,IAC5F,OAA0B,GAAtBqI,EAAQyK,WACD,GAEJ7T,EAAA1K,EAAAC,cAAAyK,EAAA1K,EAAAuI,SAAA,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,yCACZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACT4T,EAAQjJ,UAEbH,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,4BACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,MACTG,KAAKC,MAAMqb,cAAc7H,EAASyH,EAAWC,KAGtD9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,OAAMwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAEzCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKiF,MAAMuQ,OAAS,GAAK,UAAW3N,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAE2Q,QAASvO,EAAKhC,MAAMuQ,WAAcnL,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBAGzJG,KAAKiF,MAAMuQ,QAAUnL,EAAA1K,EAAAC,cAAA,OAAKC,UAAasK,SAAS4T,EAAW5C,WAAahR,SAASgR,IAAehR,SAAS4T,EAAW7C,YAAc/Q,SAAS+Q,IAAqC,GAAtBzH,EAAQyK,WAAmB,yBAA2B,0BAC7M7T,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,cACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,WACXvH,MAAO0T,EAAQjJ,SACfjD,UAAW,WACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,WAAYwW,IACvDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,WAAYwW,SAIvE9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,eACXvH,MAAO0T,EAAQiI,aACfnU,UAAW,eACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,eAAgBwW,IAC3Djb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,eAAgBwW,SAI3E9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,UACXvH,MAAO0T,EAAQkI,QACfpU,UAAW,UACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMub,gBAAgB7W,EAAG,UAAWwW,IACtDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMwb,kBAAkB9W,EAAG,UAAWwW,aAQtF9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAACgc,EAAA,EAADxa,OAAAyE,OAAA,GAAkB7F,KAAKiF,MAAvB,CACIpF,UAAU,YACV0H,UAAW,eACXD,UAAW,eACXI,SAAU,eACVnH,GAAI,eAAiB4a,EACrBpb,MAAO0T,EAAQoI,aACfC,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnC7X,YAAY,EACZjE,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMic,mBAAmBvX,EAAG,eAAgBwW,QAGxE9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAACgc,EAAA,EAADxa,OAAAyE,OAAA,GAAkB7F,KAAKiF,MAAvB,CACIpF,UAAU,YACV0H,UAAW,cACXD,UAAW,iBACXI,SAAU,iBACVnH,GAAI,iBAAmB4a,EACvBpb,MAAO0T,EAAQ0I,eACfL,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnC7X,YAAY,EACZjE,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAMic,mBAAmBvX,EAAG,iBAAkBwW,UAKlF9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SAWXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACfwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACfwK,EAAA1K,EAAAC,cAAC0c,EAAA,EAAD,CACIzS,gBAAiB7J,KAAKC,MAAM4J,gBAC5B7I,KAAM,CAAC,CAACZ,KAAO,SAAUL,MAAQ,GAAG,CAACK,KAAO,QAASL,MAAQ,GAAG,CAACK,KAAO,WAAYL,MAAQ,GAAI,CAACK,KAAO,SAAUL,MAAQ,GAAI,CAACK,KAAO,QAASL,MAAQ,IACvJwc,WAAW,OACXC,YAAY,QACZC,gBAAkB,mBAClB1c,MAAOoH,EAAMC,QACbhH,KAAK,eACLmH,UAAU,eACV1F,eAAkBsZ,MAI1B9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACPwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,MACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,SACXvH,MAAOoH,EAAMkE,OACb9D,UAAW,iBACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMyc,qBAAqB/X,EAAG,SAAUwW,IAC1Djb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAM0c,uBAAuBhY,EAAG,SAAUwW,SAI1E9Q,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAADpR,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CACIqH,UAAW,QACXvH,MAAOoH,EAAMiE,MACb7D,UAAW,gBACXpD,YAAY,EACZgW,OAAQ,SAAAxV,GAAC,OAAIsC,EAAKhH,MAAMyc,qBAAqB/X,EAAG,QAASwW,IACzDjb,SAAU,SAAAyE,GAAC,OAAIsC,EAAKhH,MAAM0c,uBAAuBhY,EAAG,QAASwW,cA0B7F9Q,EAAA1K,EAAAC,cAAA,WACIyK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,wBACPvL,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,sBAAV,eAEHnC,EAAQuJ,eAAiB5b,OAAO6U,KAAKxC,EAAQuJ,eAAezU,OAAS,GAAKnH,OAAO6U,KAAKxC,EAAQuJ,eAAevU,IAAI,SAACC,EAAK1B,GACpH,IAAIiW,EAAmBxJ,EAAQuJ,cAActU,GAC7C,IAAKuU,EACD,OAAO,EAEX,IAAIC,EAAkCD,EAAiBxF,+BAAiCwF,EAAiBxF,+BAAiC,GACtI0F,EAAiCF,EAAiBrE,8BAAgCqE,EAAiBrE,8BAAgC,GACnIwE,EAAoCH,EAAiBtG,iCAAmCsG,EAAiBtG,iCAAmC,GAC5IhB,EAA4BsH,EAAiBxH,yBAA2BwH,EAAiBxH,yBAA2B,GACxH,OAAOpL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBAAuB6I,IAAK1B,GACV,UAAnCiW,EAAiBI,gBAA8BhT,EAAA1K,EAAAC,cAAC0d,EAADlc,OAAAyE,OAAA,CAASwQ,eAAgB,GAAIL,OAAQmF,EAAUxF,0BAA2BA,EAA2BG,uBAAwB7O,EAAKhH,MAAM6V,wBAA4BmH,EAAuBhW,EAAKhH,QAC5M,WAAnCgd,EAAiBI,gBAA+BhT,EAAA1K,EAAAC,cAAC2d,EAADnc,OAAAyE,OAAA,CAAUwQ,eAAgB,GAAIP,uBAAwB7O,EAAKhH,MAAM6V,uBAAwBE,OAAQmF,EAAUxF,0BAA2ByH,GAAuCH,EAAsBhW,EAAKhH,QACrN,QAAnCgd,EAAiBI,gBAA4BhT,EAAA1K,EAAAC,cAAC4d,EAADpc,OAAAyE,OAAA,CAAMwQ,eAAgB,GAAIP,uBAAwB7O,EAAKhH,MAAM6V,uBAAwBE,OAAQmF,EAAUxF,0BAA2BwH,GAAoCF,EAAsBhW,EAAKhH,QAC3M,SAAnCgd,EAAiBI,gBAA6BhT,EAAA1K,EAAAC,cAAC6d,EAADrc,OAAAyE,OAAA,CAAOwQ,eAAgB,GAAIP,uBAAwB7O,EAAKhH,MAAM6V,uBAAwBE,OAAQmF,EAAUxF,0BAA2BuH,GAAqCD,EAAsBhW,EAAKhH,YAI9PoK,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,sBAAwB8a,EAAY,oBAAsB,IAAKM,OAAQ,SAAAtW,GAAOsC,EAAKgU,OAAOtW,EAAGuW,EAAWC,IAAaP,WAAY5a,KAAK4a,WAAYI,YAAahb,KAAKgb,aAChL3Q,EAAA1K,EAAAC,cAAA,6CAAoCyK,EAAA1K,EAAAC,cAAA,8BAEvC6T,EAAQ0K,kBAAoB1K,EAAQ0K,iBAAiB5V,OAAS,GAC3D8B,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,SACXwK,EAAA1K,EAAAC,cAAA,OAAKgW,MAAM,wBACPvL,EAAA1K,EAAAC,cAAA,MAAIgW,MAAM,sBAAV,aAEHnC,EAAQ0K,iBAAiB1V,IAAI,SAAC2V,EAAYC,GACvC,IAAIC,EAASL,EAAKG,EAAWG,cAC7B,OAAOD,GAAUjU,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBAAmBoH,EAAK0W,cAAcW,EAAQpD,EAAWkD,EAAWG,aAAa9K,kBAxPlIpT,iECGZ,IAAMme,GAAoB,SAACve,GAI9B,MAHc,CACVwe,aAAgB,aAKlBC,eAEF,SAAAA,EAAYze,GAAO,IAAAoE,EAAAjD,OAAAsI,EAAA,EAAAtI,CAAApB,KAAA0e,IACfra,EAAAjD,OAAAuI,EAAA,EAAAvI,CAAApB,KAAAoB,OAAAwI,EAAA,EAAAxI,CAAAsd,GAAAja,KAAAzE,KAAMC,KA6IV0e,OAAS,SAACC,EAAIlW,GACVrE,EAAKwa,YAAYnW,GAAOkW,GA/ITva,EAqPnByR,uBAAyB,SAACnR,EAAGoR,EAAsBC,GAC/C,IAAIlR,EAAQ,GACGT,EAAKY,MAAbgZ,KACPnZ,EAAM8D,MAAQ,mBACd9D,EAAMga,QAAU,wCAChBha,EAAMyO,OAAS,WACXlP,EAAK0a,yBAAyBpa,EAAGoR,EAAsBC,IAE3D3R,EAAKQ,SAAS,CAACC,WA7PAT,EA+PnB0a,yBAA2B,SAACpa,EAAGoR,EAAsBC,GACjDrR,EAAEC,iBAD0D,IAEvDqZ,EAAQ5Z,EAAKY,MAAbgZ,KACDe,EAAc,EACdC,EAAW7d,OAAAqO,EAAA,EAAArO,CAAA,GACR6c,EAAK9T,SAAS6L,KAEjBkJ,EAAiBjB,EAAK9T,SAAS6L,IAASmJ,wBAA0BlB,EAAK9T,SAAS6L,IAASgH,cAC1FkC,GACCA,EAAezW,IAAI,SAAC2W,EAAUpY,GAC1B,GAAGoY,EAASrJ,sBAAwBA,EAAqB,CACrDiJ,EAAcI,EAAS9c,yBACvB,IAAIuN,EAAM,CACNwP,IAAM,CAACD,EAAS9c,0BAChBhB,UAAU,wBACVC,MAAM,4BAEV8C,EAAKpE,MAAM6W,SAAS1U,aAAayN,OAI9CmP,UAAsBC,EAAYjC,cAAcgC,GAC/Cf,EAAK9T,SAAS6L,IAAWiJ,EACzB5a,EAAKQ,SAAS,CAACoZ,UAtRA5Z,EA8bnBwF,gBAAkB,SAAClF,GAAI,IACdsZ,EAAQ5Z,EAAKY,MAAbgZ,KACDpc,EAAiB8C,EAAEwB,OAASgE,SAASxF,EAAEwB,OAAOmZ,aAAa,mBAAqB,GACpF,GAAGzd,GAAkBoc,EAAK,CACtB,IAAIgB,EAAchB,EAAKpc,GACnBsF,EAAQ8X,EAAY5D,UAAYzO,KAAKC,MAAMoS,EAAY5D,WAAa,CAACjU,QAAQ,EAAGiE,OAAO,GAAID,MAAM,IACrGjE,EAAMC,QAAUzC,EAAEwB,OAAOpG,MAAQoK,SAASxF,EAAEwB,OAAOpG,OAAS,EAC5Dkf,EAAW7d,OAAAqO,EAAA,EAAArO,CAAA,GACJ6c,EAAKpc,GADD,CAEPwZ,UAAYzO,KAAK8E,UAAUvK,KAE/B8W,EAAKpc,GAAkBod,EACvB5a,EAAKQ,SAAS,CAACoZ,SACf5Z,EAAKpE,MAAM6W,SAASlV,aAAQqc,EAAKpc,OA3ctBwC,EAodnBkb,YAAc,SAAC1E,EAAI2E,EAAMC,GACrB5E,EAAGC,aAAa4E,QAAQ,KAAMF,EAAI,sBAClC3E,EAAGC,aAAa4E,QAAQ,UAAWD,GACnC5E,EAAGC,aAAa6E,cAAgB,QAvdjBtb,EA+dnB4W,OAAS,SAACJ,EAAIK,EAAW0E,GACrB,IAAIrf,EAAKsa,EAAGC,aAAa+E,QAAQ,MACjB,MAAbD,GAAkC,MAAb1E,GACpB7W,EAAKpE,MAAM6f,WAAWzZ,SAASrF,KAAKyH,IAAI,SAACzH,EAAMgG,GACxChG,EAAK+U,sBAAwBxV,GAAI8D,EAAK0b,kBAAkBlF,EAAI7Z,EAAMka,EAAW0E,KAGxFvb,EAAKQ,SAAS,CAAE8V,WAAW,KAteZtW,EAwgBnB2b,eAAiB,SAACnF,EAAI2E,EAAMS,GACxBpF,EAAGC,aAAa4E,QAAQ,KAAMF,EAAI,sBAClC3E,EAAGC,aAAa4E,QAAQ,aAAcO,GACtCpF,EAAGC,aAAa6E,cAAgB,QA3gBjBtb,EAgkBnB6b,uBAAyB,SAAC/E,EAAUD,EAAWiF,EAAalC,GACxD,IAAIpO,EAAM,CACNwP,IAAM,CAAClE,GACP7Z,UAAU,cACVC,MAAM,kBAEP0c,EAAK9C,GAAU+C,YAAcD,EAAKkC,EAAYte,gBAAgBsc,mBACjEF,EAAKkC,EAAYte,gBAAgBsc,iBAAmBF,EAAKkC,EAAYte,gBAAgBsc,iBAAiBiC,OAAO,SAACpf,GAC1G,OAAOA,EAAKud,cAAgBpD,YAGzB8C,EAAK9C,GACZ9W,EAAKpE,MAAM6W,SAAS1U,aAAayN,IACjCxL,EAAKQ,SAAS,CAACoZ,UA7kBA5Z,EA+uBnBqY,qBAAuB,SAAC/X,EAAG2C,EAAW6T,GAClCxW,EAAEC,iBAD6C,IAE1CqZ,EAAQ5Z,EAAKY,MAAbgZ,KACL,GAAGA,EAAK9C,GAAU,CACd,IAAI8D,EAAchB,EAAK9C,GACnBhU,EAAQ8X,EAAY5D,UAAYzO,KAAKC,MAAMoS,EAAY5D,WAAa,CAACjU,QAAQ,EAAGiE,OAAO,GAAID,MAAM,IACrGjE,EAAMG,GAAc3C,EAAEwB,OAAOpG,MAAQoK,SAASxF,EAAEwB,OAAOpG,OAAS,KAChEkf,EAAW7d,OAAAqO,EAAA,EAAArO,CAAA,GACJ6c,EAAK9C,GADD,CAEPE,UAAYzO,KAAK8E,UAAUvK,KAE/B8W,EAAK9C,GAAY8D,EACjB5a,EAAKpE,MAAM6W,SAASlV,aAAQqc,EAAK9C,OA3vBtB9W,EAowBnBsY,uBAAyB,SAAChY,EAAG2C,EAAW6T,GACpCxW,EAAEC,iBAD+C,IAE5CqZ,EAAQ5Z,EAAKY,MAAbgZ,KACL,GAAGA,EAAK9C,GAAU,CACd,IAAI8D,EAAchB,EAAK9C,GACnBhU,EAAQ8X,EAAY5D,UAAYzO,KAAKC,MAAMoS,EAAY5D,WAAa,CAACjU,QAAQ,EAAGiE,OAAO,GAAID,MAAM,IACrGjE,EAAMG,GAAc3C,EAAEwB,OAAOpG,MAAQoK,SAASxF,EAAEwB,OAAOpG,OAAS,KAChEkf,EAAW7d,OAAAqO,EAAA,EAAArO,CAAA,GACJ6c,EAAK9C,GADD,CAEPE,UAAYzO,KAAK8E,UAAUvK,KAE/B8W,EAAK9C,GAAY8D,EACjB5a,EAAKQ,SAAS,CAACoZ,WAhxBJ5Z,EAu4BnBgc,YAAc,SAAC9f,EAAG+f,GACd,IAAIC,EAAWlc,EAAKwa,YAAYyB,GAASE,wBAAwBvQ,GAAK,EAClEwQ,EAAkBpc,EAAKqc,KAAL,eAA4BF,wBAAwBvQ,GAAK,EAC3E0Q,EAActc,EAAKY,MAAM2b,SAASrgB,GAClC0P,EAAIsQ,EAAWE,EACnBpc,EAAKQ,SAAS,CAACwb,YAAY,CAAC3a,MAAK,EAAK1E,KAAK,CAAC6f,WAAWtgB,EAAGugB,QAAQH,EAAY1Q,SA54B/D5L,EA84BnBsc,YAAc,SAAAhc,GACV,IAAM0b,EAAchc,EAAKY,MAAMob,YACzBS,EAAUT,EAAYrf,KAAK8f,QACjCT,EAAYrf,KAAK8f,QAAjB1f,OAAAqO,EAAA,EAAArO,CAAA,GAA+B0f,EAA/B,CACIrC,aAAc9Z,EAAEwB,OAAOpG,OAAS,KAEpCsE,EAAKQ,SAAS,CAACwb,YAAYjf,OAAAqO,EAAA,EAAArO,CAAA,GAAIif,MAp5BhBhc,EAs5BnB0c,gBAAkB,SAACpc,EAAE0b,GACjBpa,IAAO0L,QAAQ,wBACftN,EAAKpE,MAAM6W,SAASrV,aAAY,CAC5BC,mBAAmB2e,EAAYrf,KAAK8f,QAAQpf,mBAC5C+c,aAAa4B,EAAYrf,KAAK8f,QAAQrC,gBAE1Cpa,EAAKQ,SAAS,CAACwb,YAAY,CAAC3a,MAAK,MA55BlBrB,EA85BnB2c,cAAgB,SAACrc,EAAE0b,GACf,IAAIvb,EAAQ,CACZA,MAAc,iBACdA,QAAgB,sCAChBA,OAAe,WACXT,EAAK4c,gBAAgBtc,EAAE0b,KAE3Bhc,EAAKQ,SAAS,CAACC,WAr6BAT,EAu6BnB4c,gBAAkB,SAACtc,EAAE0b,GAAgB,IAC1BO,EAAYvc,EAAKY,MAAjB2b,SACHM,EAAeb,EAAYrf,KAAK8f,QAAQpf,mBACxCmO,EAAM,CACNwP,IAAM,CAAC6B,GACP5f,UAAU,kBACVC,MAAM,6BAEHqf,EAASM,GAChB7c,EAAKpE,MAAM6W,SAAS1U,aAAayN,IACjC,IAAIsR,EAAkB/f,OAAO6U,KAAK2K,GAAU,GAC5Cvc,EAAKQ,SAAS,CAAC+b,WAASO,kBAAgBd,YAAY,CAAC3a,MAAK,MAh7B1DrB,EAAKY,MAAQ,CACTH,OAAO,EACPub,YAAY,CACR3a,MAAM,EACN1E,KAAM,IAEVgc,cAAc,GACdtH,qBAAqB,GACrB0L,IAAI,CACA5W,SAAS,UACT6R,gBAAgB,GAChBxI,WAAW,GACXC,oBAAoB,GACpB4H,aAAc,EACdG,aAAc,EACdwF,cAAc,GACdC,iBAAiB,GACjBC,qBAAqB,GACrBC,cAAc,GACdnG,UAAUzO,KAAK8E,UAAU,CAACtK,QAAQ,EAAGiE,OAAO,GAAID,MAAM,KACtDuQ,QAAS,EACT8F,aAAc,EACdtF,eAAgB,EAChB1G,yBAAyB,GACzByJ,eAAe,GACf7I,eAAgB,GAChB6H,WAAa,GAEjBwD,aAAc,GACdzX,gBAAiB,GACjB+T,QAAS,CACL9C,UAAW,GACXC,SAAU,IAEdkD,YAAa,CACTnD,UAAW,GACXC,SAAU,IAEd3O,kBAAkB,CACd9G,MAAK,EACL1E,KAAK,IAET0S,eAAgB,CACZhO,MAAK,EACL1E,KAAK,IAETsU,YAAa,CACT5P,MAAM,EACN1E,KAAK,IAET2gB,aAAc,GACdC,WAAY,GACZT,gBAAiB,GACjBxG,WAAU,EACVwF,YAAc,IAElB9b,EAAKsP,UAAYkO,IAAK1V,YAAL/K,OAAA0I,EAAA,EAAA1I,CAAAiD,GACP,GACL,GACD,SAACyd,GACGzd,EAAKpE,MAAM6W,SAASxT,aAAewe,EAAU,YAAa,iBAE9D,IAEJzd,EAAKyY,mBAAqB+E,IAAK1V,YAAL/K,OAAA0I,EAAA,EAAA1I,CAAAiD,GAChB,GACN,GACA,SAACyd,GACGzd,EAAKpE,MAAM6W,SAASvT,aAAwBue,EAAU,YAAa,iBAEvE,IAEJzd,EAAKyc,QAAUe,IAAK1V,YAAL/K,OAAA0I,EAAA,EAAA1I,CAAAiD,GACL,GACN,SAACX,GACG+I,QAAQC,IAAI,UAEhB,GACA,IAEJrI,EAAKwa,YAAc,GACnB,IAAI+B,EAAW,GACX3C,EAAO,GApFI,OAqFf5Z,EAAKpE,MAAM8hB,gBAAkB1d,EAAKpE,MAAM8hB,eAAeC,kBAAoB3d,EAAKpE,MAAM8hB,eAAeC,iBAAiBvZ,IAAI,SAACqY,EAAQ9Z,GAC/H4Z,EAASE,EAAQpf,oBAAjBN,OAAAqO,EAAA,EAAArO,CAAA,GACO0f,GAEPA,EAAQmB,aAAaxZ,IAAI,SAAC2Y,EAAIc,GAC1BjE,EAAKmD,EAAIvf,gBAAkBuf,EAC3BnD,EAAKmD,EAAIvf,gBAAgBmb,cAAgB,GACzCoE,EAAIjC,uBAAuB1W,IAAI,SAAC0Z,EAAWC,GAEvC,GADAnE,EAAKmD,EAAIvf,gBAAgBmb,cAAcmF,EAAU7f,0BAA4B6f,EAAUE,kBACpFF,EAAUE,kBAAkB,CAC3B,IAAIC,EAAgBH,EAAUE,kBAC3BF,EAAUI,8BACTD,EAAc5M,qBAAuB,GACrCyM,EAAUI,6BAA6B9Z,IAAI,SAAC+Z,GACxCF,EAAc5M,qBAAqB8M,EAAe/f,iCAAmC+f,KAEpFL,EAAUM,mCACfH,EAAczJ,0BAA4B,GAC1CsJ,EAAUM,kCAAkCha,IAAI,SAAC+Z,GAC7CF,EAAczJ,0BAA0B2J,EAAeE,sCAAwCF,KAE9FL,EAAUQ,qCACfL,EAAcM,2BAA6B,GAC3CT,EAAUQ,mCAAmCla,IAAI,SAAC+Z,GAC9CF,EAAcM,2BAA2BJ,EAAeK,uCAAyCL,KAGzGvE,EAAKmD,EAAIvf,gBAAgBmb,cAAcmF,EAAU7f,0BAA4BggB,SAM7Fje,EAAKY,MAAM2b,SAAWA,EACtBvc,EAAKY,MAAMgZ,KAAOA,EAClB5Z,EAAK4W,OAAS5W,EAAK4W,OAAO1V,KAAZnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACdA,EAAKkb,YAAclb,EAAKkb,YAAYha,KAAjBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACnBA,EAAKkS,2BAA6BlS,EAAKkS,2BAA2BhR,KAAhCnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAClCA,EAAK4S,qBAAuB5S,EAAK4S,qBAAqB1R,KAA1BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAC5BA,EAAKK,WAAaL,EAAKK,WAAWa,KAAhBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAClBA,EAAKye,UAAYze,EAAKye,UAAUvd,KAAfnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACjBA,EAAK0b,kBAAoB1b,EAAK0b,kBAAkBxa,KAAvBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACzBA,EAAK0e,mBAAqB1e,EAAK0e,mBAAmBxd,KAAxBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAC1BA,EAAK2e,eAAiB3e,EAAK2e,eAAezd,KAApBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACtBA,EAAK4e,wBAA0B5e,EAAK4e,wBAAwB1d,KAA7BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAC/BA,EAAKoX,kBAAoBpX,EAAKoX,kBAAkBlW,KAAvBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACzBA,EAAK6X,mBAAqB7X,EAAK6X,mBAAmB3W,KAAxBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAC1BA,EAAKmX,gBAAkBnX,EAAKmX,gBAAgBjW,KAArBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACvBA,EAAK6e,IAAM7e,EAAKoX,kBAAkBlW,KAAvBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACXA,EAAK8e,2BAA6B9e,EAAK8e,2BAA2B5d,KAAhCnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAClCA,EAAKoN,yBAA2BpN,EAAKoN,yBAAyBlM,KAA9BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAChCA,EAAKgQ,gBAAkBhQ,EAAKgQ,gBAAgB9O,KAArBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACvBA,EAAKwY,cAAgBxY,EAAKwY,cAActX,KAAnBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACrBA,EAAKiX,cAAgBjX,EAAKiX,cAAc/V,KAAnBnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IACrBA,EAAK7B,uBAAyB6B,EAAK7B,uBAAuB+C,KAA5BnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IAC9BA,EAAK2Z,QAAU3Z,EAAK2Z,QAAQzY,KAAbnE,OAAA0I,EAAA,EAAA1I,CAAAiD,IA5IAA,oFAmJfrE,KAAKC,MAAM6W,SAASsM,eACpBpjB,KAAKC,MAAMojB,KAAOrjB,KAAKC,MAAM6W,SAASrV,aAAY,CAC9CD,sBAAuBxB,KAAKC,MAAMgF,MAAMvB,OAAOlC,sBAC/Cid,aAAcze,KAAKC,MAAMgF,MAAMvB,OAAOI,wBACtC6X,QAAQ,iDAGG,IAAA2H,EACwBtjB,KAAK0gB,KAAvC6C,EADUD,EACVC,iBAAiBC,EADPF,EACOE,cACtB,GAAGD,GAAoBC,EAAc,CACjC,IAAIC,EAA2BF,EAAiB/C,wBAC5CkD,EAAwBF,EAAchD,wBACtCmD,EAAsBF,EAAyBrY,MAAQsY,EAAsBtY,MACjFpL,KAAK6E,SAAS,CAAC8e,2EAGGC,GAAS,IAAA3c,EAAAjH,KAC3BmgB,EAAcngB,KAAKiF,MAAMkb,YAI7B,GAHIyD,EAAS9C,QAAQ9M,YAAe4P,EAAS9C,QAAQ7M,SAAWjU,KAAKC,MAAM6gB,QAAQ9M,YAAc4P,EAAS9C,QAAQ9M,YAC9GhU,KAAK+iB,mBAAmBa,EAAS9C,QAAQza,SAASwd,QAAQD,EAAS9C,SAEpE8C,EAASxC,KAAOwC,EAASxC,IAAI/a,WAAarG,KAAKC,MAAMmhB,IAAI/a,UAAmC,QAAvBud,EAASxC,IAAItgB,SAAqB8iB,EAASxC,IAAIpN,aAAe4P,EAASxC,IAAInN,SAAWjU,KAAKC,MAAMmhB,IAAIpN,YAAc4P,EAASxC,IAAIpN,WAAW,CAC/M,GAAGmM,EAAY,CACX,IAAItQ,EAAM,CACNiU,cAAgB3D,EAChB5B,aAAeqF,EAASxC,IAAI/a,SAASwd,QAAQhiB,gBAEjD7B,KAAK6E,SAAS,CAACsb,YAAc,IAAI,WAC7BlZ,EAAKhH,MAAM6W,SAAS7U,aAAW4N,MAGvC7P,KAAKgjB,eAAeY,EAASxC,IAAI/a,SAASwd,UAE3CD,EAAStF,QAAWsF,EAAStF,OAAOtK,YAAe4P,EAAStF,OAAOrK,SAAWjU,KAAKC,MAAMqe,OAAOtK,YAAc4P,EAAStF,OAAOtK,YAC7HhU,KAAK+jB,kBAAkBH,EAAStF,OAAOjY,SAASwd,UAEjDD,EAASI,cAAiBJ,EAASI,aAAahQ,YAAe4P,EAASI,aAAa/P,SAAWjU,KAAKC,MAAM+jB,aAAahQ,YAAc4P,EAASI,aAAahQ,YAC3JhU,KAAKijB,wBAAwBW,EAASI,aAAa3d,SAASwd,UAE7DD,EAASK,wBAA2BL,EAASK,uBAAuBjQ,YAAe4P,EAASK,uBAAuBhQ,SAAWjU,KAAKC,MAAMgkB,uBAAuBjQ,YAAc4P,EAASK,uBAAuBjQ,YAC7MhU,KAAKmjB,2BAA2BS,EAASK,uBAAuB5d,SAASwd,UAE1ED,EAASM,oBAAuBN,EAASM,mBAAmBlQ,YAAe4P,EAASM,mBAAmBjQ,SAAWjU,KAAKC,MAAMikB,mBAAmBlQ,YAAc4P,EAASM,mBAAmBlQ,YACzLhU,KAAKwC,uBAAuBohB,EAASM,mBAAmB7d,SAASwd,UACjED,EAASO,mBAAsBP,EAASO,kBAAkBnQ,YAAe4P,EAASO,kBAAkBlQ,SAAWjU,KAAKC,MAAMkkB,kBAAkBnQ,YAAc4P,EAASO,kBAAkBnQ,YACrLhU,KAAKokB,aAAaR,EAASO,kBAAkB9d,SAAStD,iDAO3C/B,EAAKqjB,GAAY,IAAApc,EAAAjI,KAC3B4gB,EAAY5gB,KAAKiF,MAAjB2b,SACL,GAAG5f,EAAK,CACJ,IAAIsjB,EAAe1D,EAAS5f,EAAKU,qBAAuB,GACxDkf,EAAS5f,EAAKU,oBAAdN,OAAAqO,EAAA,EAAArO,CAAA,GACOkjB,EACAtjB,GAGXhB,KAAK6E,SAAS,CAAC+b,WAASO,gBAAgBngB,EAAKU,oBAAoB,WAC7D2iB,EAAYvjB,QAAgC,QAAtBujB,EAAYvjB,QAAoBmH,EAAK6a,UAAU,GAAG9hB,EAAKU,6DAOlEV,GAAK,IACfid,EAAQje,KAAKiF,MAAbgZ,KACL,GAAGjd,EAAK,CACJ,IAAIyS,EAAUwK,EAAKjd,EAAKa,iBAAmB,GAC3Coc,EAAKjd,EAAKa,gBAAVT,OAAAqO,EAAA,EAAArO,CAAA,GAAgCqS,EAAWzS,GAE/ChB,KAAK6E,SAAS,CAACoZ,mDAMDjd,GAAK,IACdid,EAAQje,KAAKiF,MAAbgZ,KACL,GAAGjd,EAAK,CACJ,IAAIyS,EAAUwK,EAAKjd,EAAK8iB,gBAAkB,QACXS,GAA5B9Q,EAAQ0K,mBACP1K,EAAQ0K,iBAAmB,IAE/B1K,EAAQ0K,iBAAiB/T,KAAKpJ,GAC9Bid,EAAKjd,EAAK8iB,eAAV1iB,OAAAqO,EAAA,EAAArO,CAAA,GAA+BqS,GAEnCzT,KAAK6E,SAAS,CAACoZ,yDA8CKjd,GAAK,IAAAqQ,EAAArR,KACpBie,EAAQje,KAAKiF,MAAbgZ,KACL,GAAGjd,GAAQA,EAAKsB,0BAA4BtB,EAAKa,eAAe,CAC5D,IAAIuf,EAAMnD,EAAKjd,EAAKa,iBAAmB,GACvCuf,EAAIjC,uBAAyBiC,EAAIjC,wBAA0B,GAC3DiC,EAAIpE,cAAgBoE,EAAIpE,eAAiB,GACzC,IAAIsF,EAAgBtiB,KAAKC,MAAM6f,WAAWzZ,SAASrF,KAAK8J,KAAK,SAAA0Z,GAAC,OAAIA,EAAEzO,uBAAyB/U,EAAK+U,uBAClGqL,EAAIpE,cAAchc,EAAKsB,0BAAvBlB,OAAAqO,EAAA,EAAArO,CAAA,GACOJ,EACAshB,GAERlB,EAAIjC,uBAAuB/U,KAAKgX,EAAIpE,cAAchc,EAAKsB,2BACtD2b,EAAKjd,EAAKa,gBAAkBuf,EAC5BphB,KAAK6E,SAAS,CAACoZ,QAAM,WACjB,IAAIwG,EAAqB,GACrBnC,EAAgBjR,EAAKpR,MAAM6f,WAAWzZ,SAASrF,KAAK8J,KAAK,SAAA0Z,GAAC,OAAIA,EAAEzO,uBAAyB/U,EAAK+U,uBAClG,GAAGuM,EAAc7M,yBAAyBlN,OAAS,EAC/C+Z,EAAc7M,yBAAyBhN,IAAI,SAAC6Z,EAActb,GACtDyd,EAAmBra,KAAK,CACpB9H,yBAA2B6H,SAASnJ,EAAKsB,0BACzC4T,4BAA8BoM,EAAcpM,gCAGpDuO,EAAmBlc,OAAS,GAAK8I,EAAKpR,MAAM6W,SAASnU,aAAuB8hB,SAC1E,GAAGnC,EAAc3L,iCAAiCpO,OAAS,EAAE,CAC/D+Z,EAAc3L,iCAAiClO,IAAI,SAAC6Z,EAActb,GAC9Dyd,EAAmBra,KAAK,CACpB9H,yBAA2B6H,SAASnJ,EAAKsB,0BACzC4T,4BAA8BoM,EAAcpL,wCAGpD,IAAIwN,EAAU,CACV1jB,KAAOyjB,EACP5U,IAAM,CAACvO,UAAY,yCAEvBmjB,EAAmBlc,OAAS,GAAK8I,EAAKpR,MAAM6W,SAASjU,aAA8B6hB,SACjF,GAAGpC,EAAc7K,+BAA+BlP,OAAS,EAAE,CAC7D+Z,EAAc7K,+BAA+BhP,IAAI,SAAC6Z,EAActb,GAC5Dyd,EAAmBra,KAAK,CACpB9H,yBAA2B6H,SAASnJ,EAAKsB,0BACzC4T,4BAA8BoM,EAAc5K,sCAGpD,IAAIgN,EAAU,CACV1jB,KAAOyjB,EACP5U,IAAM,CAACvO,UAAY,uCAEvBmjB,EAAmBlc,OAAS,GAAK8I,EAAKpR,MAAM6W,SAASjU,aAA8B6hB,SACjF,GAAGpC,EAAc1J,8BAA8BrQ,OAAS,EAAE,CAC5D+Z,EAAc1J,8BAA8BnQ,IAAI,SAAC6Z,EAActb,GAC3Dyd,EAAmBra,KAAK,CACpB9H,yBAA2B6H,SAASnJ,EAAKsB,0BACzC4T,4BAA8BoM,EAAcxJ,qCAGpD,IAAI4L,EAAU,CACV1jB,KAAOyjB,EACP5U,IAAM,CAACvO,UAAY,sCAEvBmjB,EAAmBlc,OAAS,GAAK8I,EAAKpR,MAAM6W,SAASjU,aAA8B6hB,2DAUxE1jB,GAAK,IAAA+Q,EAAA/R,KACvBie,EAAQje,KAAKiF,MAAbgZ,KACL,GAAGjd,EAAK,CACJ,IAAIsB,EAA2BtB,EAAK,GAAGsB,yBACvClB,OAAO6U,KAAKgI,GAAMxV,IAAI,SAACC,EAAI1B,GACvB,GAAGiX,EAAKvV,GAAKsU,eAAiBiB,EAAKvV,GAAKsU,cAAc1a,GAA0B,CAC5E,IAAI0a,EAAgBiB,EAAKvV,GAAKsU,cAAc1a,IAA6B,GACzEtB,EAAKyH,IAAI,SAAC1I,EAAMiH,GACZgW,EAActH,qBAAuBsH,EAActH,sBAAwB,GACxE3V,EAAM0C,gCACLua,EAActH,qBAAqB3V,EAAM0C,iCAAzCrB,OAAAqO,EAAA,EAAArO,CAAA,GAAgFrB,GAC3EA,EAAM4kB,wCACX3H,EAActH,qBAAqB3V,EAAM4kB,yCAAzCvjB,OAAAqO,EAAA,EAAArO,CAAA,GAAwFrB,GACnFA,EAAM8iB,sCACX7F,EAActH,qBAAqB3V,EAAM8iB,uCAAzCzhB,OAAAqO,EAAA,EAAArO,CAAA,GAAsFrB,GACjFA,EAAM2iB,uCACX1F,EAActH,qBAAqB3V,EAAM2iB,sCAAzCthB,OAAAqO,EAAA,EAAArO,CAAA,GAAqFrB,MAG7Fke,EAAKvV,GAAKsU,cAAc1a,GAA4B0a,EACpDjL,EAAKlN,SAAS,CAACoZ,4DAKRjd,GAAK,IAAAqR,EAAArS,KACnBie,EAAQje,KAAKiF,MAAbgZ,KACL7c,OAAO6U,KAAKgI,GAAMxV,IAAI,SAACC,EAAI1B,GACvB,GAAGiX,EAAKvV,GAAKsU,cAAchc,EAAKsB,0BAA0B,CACtD,IAAI0a,EAAgBiB,EAAKvV,GAAKsU,cAAchc,EAAKsB,2BAA6B,GAC9E0a,EAActH,qBAAuBsH,EAActH,sBAAwB,GAC3EsH,EAActH,qBAAqB1U,EAAKyB,iCAAxCrB,OAAAqO,EAAA,EAAArO,CAAA,GAA+EJ,GAC/Eid,EAAKvV,GAAKsU,cAAchc,EAAKsB,0BAA4B0a,EACzD3K,EAAKxN,SAAS,CAACoZ,iDAIdjd,GAAK,IAAAmM,EACYnN,KAAKiF,MAA1B0c,EADSxU,EACTwU,aAAa1D,EADJ9Q,EACI8Q,KACf0D,GAAgB1D,EAAK0D,IACpB3hB,KAAKC,MAAM6W,SAASlV,aAAQ,CAACC,eAAeoc,EAAK0D,GAAc9f,eAAekb,SAAS/b,EAAK+F,QAEhG/G,KAAK6E,SAAS,CAAC8c,aAAc,uCAMvBhd,EAAEuW,GAAU,IACbkG,EAAOphB,KAAKiF,MAAZmc,IACLphB,KAAKC,MAAM6W,SAASlV,aAAQR,OAAAqO,EAAA,EAAArO,CAAA,GAAIggB,EAAL,CAAS1f,mBAAmBwZ,2CAMvDlb,KAAK6E,SAAS,CAACwb,YAAY,CAAC3a,MAAK,KACjC1F,KAAKC,MAAM6W,SAASrV,aAAY,CAC5BD,sBAAuBxB,KAAKC,MAAMgF,MAAMvB,OAAOlC,sBAC/Cid,aAAc,eACd9C,QAAQ,sDAOS3a,EAAKlB,GACf,QAARA,GAGCE,KAAKC,MAAM6W,SAAStU,aAAuBpB,OAAAqO,EAAA,EAAArO,CAAA,GACpCJ,6CAUCA,GAAK,IACZid,EAAQje,KAAKiF,MAAbgZ,KACFjd,GAAQid,IACPA,EAAKjd,EAAKa,gBAAVT,OAAAqO,EAAA,EAAArO,CAAA,GACO6c,EAAKjd,EAAKa,gBACVb,GAEPhB,KAAK6E,SAAS,CAACoZ,SACfje,KAAKC,MAAM6W,SAASlV,aAAQR,OAAAqO,EAAA,EAAArO,CAAA,GAAIJ,8CAoDxB2D,EAAGigB,EAAS1J,GACxBvW,EAAEC,iBACF,IAAIgc,EAAW5gB,KAAKiF,MAAM2b,cACM2D,GAA5B3D,EAAS1F,GAAW+C,OACpB2C,EAAS1F,GAAW+C,KAAO,IAE/B,IAAIyD,EAAed,EAAS1F,GAAW+C,KACvCyD,EAAatX,KAAKwa,GAClBhE,EAAS1F,GAAW+C,KAAOyD,EAC3B1hB,KAAK6E,SAAS,CAAE+b,uDAEFjc,EAAGigB,EAAS1J,EAAW0E,GACrCjb,EAAEC,iBACF5E,KAAKC,MAAM6W,SAASzU,aAAiB,CACjCR,eAAgB+d,EAChB7J,qBAAsB6O,EAAQ7O,qBAC9B4F,QAAS,4CAkBFhX,GACXA,EAAEC,iBACF,IAAIsW,EAAYlb,KAAKiF,MAAMoZ,YAAYnD,UACnCC,EAAWnb,KAAKiF,MAAMoZ,YAAYlD,SAClCyF,EAAW5gB,KAAKiF,MAAM2b,SACtBiE,EAAU7kB,KAAKiF,MAAMgF,qBAC0Bsa,GAA/C3D,EAAS1F,GAAW+C,KAAK9C,GAAU2J,WACnClE,EAAS1F,GAAW+C,KAAK9C,GAAU2J,SAAW,IAElD,IAAIC,EAAmBnE,EAAS1F,GAAW+C,KAAK9C,GAAU2J,SAC1D9kB,KAAKC,MAAM6f,WAAWzZ,SAASrF,KAAKyH,IAAI,SAACzH,EAAMgG,GACvC6d,EAAQ3a,SAASlJ,EAAK+U,uBACtBgP,EAAiB3a,KAAKpJ,KAG9B4f,EAAS1F,GAAW+C,KAAK9C,GAAU2J,SAAWC,EAC9C/kB,KAAK6E,SAAS,CAAE+b,WAAU3W,gBAAiB,KAC3CjK,KAAKglB,uBAAuBrgB,+CASZsgB,EAAMhF,EAAYiF,GAClC,IAAMC,EAASC,MAAMC,KAAKJ,GADkBK,EAE1BH,EAAOI,OAAOtF,EAAY,GAArCuF,EAFqCpkB,OAAAqkB,EAAA,EAAArkB,CAAAkkB,EAAA,MAI5C,OADAH,EAAOI,OAAOL,EAAU,EAAGM,GACpBL,+CAOUhK,EAAUD,EAAWiF,GAAa,IAAA7N,EAAAtS,KAC/C8E,EAAQ,GACLmZ,EAAQje,KAAKiF,MAAbgZ,KACPnZ,EAAM8D,MAAQ,aACd9D,EAAMga,QAAU,kCAChBha,EAAMyO,OAAS,SAAA5O,GACX2N,EAAK4N,uBAAuB/E,EAAUD,EAAWiF,EAAalC,IAElEje,KAAK6E,SAAS,CAACC,0CAuBXH,EAAGwW,EAAUD,GACjBvW,EAAEC,iBACF,IAAIwc,EAAMphB,KAAKiF,MAAM+Y,QACjBoD,EAAIjG,WAAaA,GACjBiG,EAAIlG,UAAY/Q,SAAS+Q,GACzBkG,EAAIjG,SAAWhR,SAASgR,GACxBnb,KAAK6E,SAAS,CAAEmZ,QAASoD,MAEzBA,EAAIlG,UAAY,GAChBkG,EAAIjG,SAAW,GACfnb,KAAK6E,SAAS,CAAEmZ,QAASoD,mDAUXzc,EAAG8O,EAASyH,EAAWC,GAAU,IAAA5I,EAAAvS,KAC9CohB,EAAQphB,KAAKiF,MAAbmc,IACL3U,QAAQC,IAAI,WAAYyO,EAAU1H,EAAQ0H,UAC1CxW,EAAEC,iBACF,IAAIiL,EAAGzO,OAAAqO,EAAA,EAAArO,CAAA,GACAggB,EADA,CAEHlD,WAAa,EACbxc,mBAAqByI,SAASsJ,EAAQyH,aAE1Clb,KAAK6E,SAAS,CAACsb,YAAchW,SAASsJ,EAAQ0H,WAAW,WACrD5I,EAAKtS,MAAM6W,SAASlV,aAAQiO,qDAYblL,GACnBA,EAAEC,iBACFa,IAAE,sCAAsCE,8CAM7BhB,GACXA,EAAEC,iBACF,IAAIoF,EAAUhK,KAAKiF,MAAMgF,gBACzBD,EAAQI,KAAKD,SAASxF,EAAEwB,OAAO5F,KAC/BP,KAAK6E,SAAS,CAAEoF,gBAAiBD,oDAUbrF,EAAG3D,GACvB2D,EAAEC,iBACF5E,KAAK6E,SAAS,CAAC6O,eAAe,CAC1BhO,MAAK,EACL1E,KAAKI,OAAAqO,EAAA,EAAArO,CAAA,GACEJ,mDASM2D,EAAG3D,GACpB2D,EAAEC,iBACF5E,KAAK6E,SAAS,CAACyQ,YAAY,CACvB5P,MAAK,EACL1E,KAAKI,OAAAqO,EAAA,EAAArO,CAAA,GACEJ,yDAYY2D,EAAG3D,GAC1B2D,EAAEC,iBACF,IAAI4H,EAAoBxM,KAAKiF,MAAMuH,kBACnCxM,KAAK6E,SAAS,CAAC2H,kBAAkBpL,OAAAqO,EAAA,EAAArO,CAAA,GAC1BoL,EADyB,CAE5B9G,MAAK,EACL1E,KAAKI,OAAAqO,EAAA,EAAArO,CAAA,GACEJ,0CAQJ2D,GACPA,GAAKA,EAAEC,iBACP5E,KAAK6E,SAAS,CAAC2H,kBAAkB,CAC7B9G,MAAK,EACL1E,KAAK,IACP0S,eAAe,CACbhO,MAAK,EACL1E,KAAK,IACPsU,YAAY,CACV5P,MAAK,EACL1E,KAAK,IACP8D,OAAO,4CAOGH,EAAG2C,EAAW6T,GAC1BxW,EAAEC,iBADiC,IAE9BqZ,EAAQje,KAAKiF,MAAbgZ,KACFA,EAAK9C,IACJnb,KAAKC,MAAM6W,SAASlV,aAAQR,OAAA4K,EAAA,EAAA5K,CAAA,CAACS,eAAeoc,EAAK9C,GAAUtZ,gBAAgByF,EAAW3C,EAAEwB,OAAOpG,mDASrF4E,EAAG2C,EAAW6T,GAC5BxW,EAAEC,iBADmC,IAEhCqZ,EAAQje,KAAKiF,MAAbgZ,KACFA,EAAK9C,KACJ8C,EAAK9C,GAAU7T,GAAa3C,EAAEwB,OAAOpG,MACrCC,KAAK6E,SAAS,CAACoZ,qDAkDJtZ,EAAG2C,EAAW6T,GAAS,IAAAnI,EAAAhT,KAEjCie,EAAQje,KAAKiF,MAAbgZ,KACDle,GAAQ,EACT4E,EAAEwB,OAAOoE,UACRxK,GAAQ,GAEZ,IAAI2lB,EAAa3lB,EAAQ,EAAI,EAC1Bke,EAAK9C,KACJ8C,EAAK9C,GAAU7T,GAAavH,EAC5BC,KAAK6E,SAAS,CAACoZ,QAAM,WACjBjL,EAAK/S,MAAM6W,SAASlV,aAAQR,OAAA4K,EAAA,EAAA5K,CAAA,CAACS,eAAeoc,EAAK9C,GAAUtZ,gBAAgByF,EAAWoe,8CAWpFjS,EAASyH,EAAWC,EAAUI,GAAe,IAAAoK,EAAA3lB,KACvD,OAAQqK,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,MACFqT,GAAiBlR,EAAA1K,EAAAC,cAAA,UACfyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQghB,EAAKC,sBAAsBjhB,EAAG,CAAC8O,UAASyH,YAAWC,cAAcvS,MAAM,cACrHyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,6BADjB,iBAIJwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQghB,EAAKE,wBAAwBlhB,EAAG,CAAC8O,UAASyH,YAAWC,cAAcvS,MAAM,oBACvHyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,uBADjB,eAIJwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAQghB,EAAKG,qBAAqB3b,SAASgR,GAAWhR,SAAS+Q,GAAWK,IAAkB3S,MAAM,UACxIyB,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,4BADjB,yDAUQ,IAAAkmB,EAAA/lB,KAChB,OAAQqK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,oCAAoCsH,MAAO,CAAEC,QAAW,SAC3EiD,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,0BACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,eACVwK,EAAA1K,EAAAC,cAAA,iCAKRyK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBACXwK,EAAA1K,EAAAC,cAACH,EAAA,EAAD,MACA4K,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mCAC8B0kB,GAAvCvkB,KAAKC,MAAM6f,WAAWzZ,SAASrF,MAC7BqJ,EAAA1K,EAAAC,cAAComB,EAAD5kB,OAAAyE,OAAA,GAAc7F,KAAKC,MAAnB,CACI8J,iBAAkB/J,KAClBsK,SAAUtK,KAAKC,MAAM6f,WAAWzZ,SAASrF,KACzCsG,UAAW,UACXvH,MAAOC,KAAKiF,MAAMgF,gBAClBJ,gBAAiB7J,KAAKimB,eACtB1e,UAAW,UAM/B8C,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kCACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAClD,GAAQohB,EAAKf,uBAAuBrgB,KAA5F,UACA0F,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAQohB,EAAKG,eAAevhB,KAAlF,mDAMFgd,GACV3hB,KAAK6E,SAAS,CAAC8c,wDAQJlO,EAASyH,EAAWC,GAC/B,OAAO9Q,EAAA1K,EAAAC,cAACumB,GAAD/kB,OAAAyE,OAAA,CAAM6C,IAAKyS,GAAcnb,KAAKC,MAA9B,CAAqCgb,OAAQjb,KAAKib,OAAQxH,QAASA,EAASyH,UAAWA,EAAWC,SAAUA,EAAUlW,MAAOjF,KAAKiF,MAAOqW,cAAetb,KAAKsb,cAAe0C,QAAShe,KAAKge,QAASlI,uBAAwB9V,KAAK8V,uBAAwBjM,gBAAiB7J,KAAK6J,gBAAiB2R,gBAAiBxb,KAAKwb,gBAAiBC,kBAAmBzb,KAAKyb,kBAAmBkB,uBAAwB3c,KAAK2c,uBAAwBD,qBAAsB1c,KAAK0c,qBAAsBR,mBAAoBlc,KAAKkc,mBAAoBW,cAAe7c,KAAK6c,cAAeuJ,cAAepmB,KAAKomB,cAAe7P,2BAA4BvW,KAAKuW,2BAA4BU,qBAAsBjX,KAAKiX,qBAAsBoP,iBAAkBrmB,KAAKqmB,iBAAkBvJ,mBAAsB9c,KAAK8c,+DAStvBrJ,EAASyH,EAAWC,EAAUkD,GAC3C,OAAOhU,EAAA1K,EAAAC,cAAA,OAAK8I,IAAK2V,EAAaxe,UAAU,wCACpCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,wBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yBACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,wBACT4T,EAAQoC,4DAsDZ,IAUGyQ,EAVHC,EAAAvmB,KAAAqP,EACuBrP,KAAKiF,MAAlC2b,EADMvR,EACNuR,SAAS3C,EADH5O,EACG4O,KAAKoC,EADRhR,EACQgR,YAChBc,EAAmBnhB,KAAKiF,MAAxBkc,gBAEDqF,EAAY,GAsEhB,OArEGvI,IACCuI,EAAYplB,OAAOqlB,QAAQxI,GAAMyI,KAAK,SAAS/mB,EAAGgnB,GAC9C,OAAOhnB,EAAE,GAAGgc,QAAUgL,EAAE,GAAGhL,YAI/BwF,GAAmBP,IACnBO,EAAkB/f,OAAO6U,KAAK2K,GAAU,IAE5C0F,EAAgB1F,EAASO,GACrB/f,OAAO6U,KAAK2K,GAAUrY,OAAS,EACjB8B,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACVmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uCAAuC+e,IAAI,oBACtDvU,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,4BAA4BsH,MAAO,CAACiE,MAAOpL,KAAKiF,MAAM0e,oBAAoB3jB,KAAKiF,MAAM0e,oBAAoB,KAAK,QAAU/E,IAAI,kBACrIxd,OAAO6U,KAAK2K,GAAUnY,IAAI,SAAC6X,EAASpF,GACjC,IAAIla,EAAO4f,EAASN,GACpB,OAAOjW,EAAA1K,EAAAC,cAAA,MAAIC,UAAWygB,GAAWgG,EAAc5kB,oBAAsB,SAAUkd,IAAK,SAAAA,GAAG,OAAI2H,EAAK5H,OAAOC,EAAI0B,KACvGjW,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBAAuBgI,QAAS,SAAClD,GAAKA,EAAEC,iBAAiB2hB,EAAK1hB,SAAS,CAACsc,gBAAgBb,MACnGjW,EAAA1K,EAAAC,cAAA,QAAMC,UAAU,YAAYgI,QAAS,SAAAlD,GAAC,OAAI4hB,EAAKlG,YAAYC,EAAQA,KAAUjW,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,sBAC1FwK,EAAA1K,EAAAC,cAAA,YAAOoB,EAAKyd,cACZpU,EAAA1K,EAAAC,cAAA,QAAMC,UAAU,uCAKhCwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBAAmB+e,IAAI,iBAClCvU,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,gBAAgBgI,QAAS,SAAClD,GAAD,OAAO4hB,EAAKK,eAAcvc,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,eAAlF,iBAEHwgB,EAAY3a,MAAQ2E,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCAAiCsH,MAAO,CAAC+D,KAAKmV,EAAYrf,KAAKiP,EAAE,OACrG5F,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACPwK,EAAA1K,EAAAC,cAAC4S,EAAA,EAAD,CACIpK,KAAMpI,KAAK8gB,QACXxZ,UAAW,eACXvH,MAAOsgB,EAAYrf,KAAK8f,QAAQrC,aAChClX,UAAW,eACXpD,YAAY,EACZjE,SAAUF,KAAK2gB,cAEnBtW,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,aACVuB,OAAO6U,KAAK2K,GAAUrY,OAAS,GAAK8B,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgI,QAAS,SAAAlD,GAAC,OAAI4hB,EAAKvF,cAAcrc,EAAE0b,KAAchW,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,gBAA5G,WACrCwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAAlD,GAAC,OAAI4hB,EAAKxF,gBAAgBpc,EAAE0b,KAAjF,YAMfiG,GACGjc,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,+BACV2mB,GAAaA,EAAUje,OAAS,GAC7Bie,EAAU/d,IAAI,SAACoe,EAAQ1L,GACvB,GAAG0L,EAAO,GAAGnlB,oBAAsB4kB,EAAc5kB,mBAC7C,OAAO6kB,EAAKO,eAAeD,EAAO,GAAIP,EAAc5kB,mBAAoBmlB,EAAO,MAIvFxc,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,cACXwK,EAAA1K,EAAAC,cAAA,UAAQiI,QAAS,SAAClD,GAAD,OAAK4hB,EAAKzD,UAAUne,EAAE2hB,EAAc5kB,qBAAqB7B,UAAU,2BAApF,cAMFwK,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACVmC,EAAA1K,EAAAC,cAAA,WACIyK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cAAcgI,QAAS,SAAClD,GAAD,OAAO4hB,EAAKK,eAAcvc,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,eAAhF,iBAEHG,KAAKomB,cAAc,gEAKlB1M,GACV,OAAOrP,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBAClBwK,EAAA1K,EAAAC,cAAA,OAAKmI,IAAKwP,MACVlN,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,SAAS6Z,0CAGhB5Z,GACV,IAAIinB,EAAO,oBAQX,MAPW,QAARjnB,EACCinB,EAAO,aACM,SAARjnB,EACLinB,EAAO,eACM,UAARjnB,IACLinB,EAAO,cAEJ1c,EAAA1K,EAAAC,cAAA,KAAGC,UAAWknB,mDAEF,IAAAC,EAAAhnB,KAAA4P,EACW5P,KAAKiF,MAAnB2c,GADGhS,EACZgR,SADYhR,EACHgS,YACZU,EAAgBtiB,KAAKC,MAAM6f,WAAWzZ,SAASrF,KAOnD,OANG4gB,IACCU,EAAgBA,EAAclC,OAAO,SAAC+B,GAElC,OAAmD,IADxCA,EAAUtM,eAAeoR,cACxB7U,QAAQwP,EAAWqF,kBAInC5c,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,gBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,uBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,sBACXwK,EAAA1K,EAAAC,cAAA,UACIyK,EAAA1K,EAAAC,cAAA,gCAEJyK,EAAA1K,EAAAC,cAAA,KAAGgW,MAAM,0BAAT,qCAEJvL,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iCACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,aACXwK,EAAA1K,EAAAC,cAACsnB,EAAA,EAAD,CAAMle,GAAI,mBAAoBnJ,UAAU,iBAAgBwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,eAArE,eAIZwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,qBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,mBACXwK,EAAA1K,EAAAC,cAACH,EAAA,EAAD,CAAQM,MAAO6hB,EAAY1hB,SAAU,SAACyE,GAAKA,EAAEC,iBAAiBoiB,EAAKniB,SAAS,CAAC+c,WAAYjd,EAAEwB,OAAOpG,OAAO,QACzGsK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,oCACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,8BACU0kB,GAAjBjC,GACCA,EAAc7Z,IAAI,SAACzH,EAAMgG,GACrB,OAAOqD,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,QAAQ6I,IAAK1B,EAAOmgB,WAAS,EAAC5H,YAAa,SAAA5a,GAAC,OAAIqiB,EAAKzH,YAAY5a,EAAG3D,GAAM,KAC3FqJ,EAAA1K,EAAAC,cAAA,OAAKC,UAAW,wBAA0BmH,GACtCqD,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,iBACXwK,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,cACdwK,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,iBAGrBwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yCACVmnB,EAAKI,cAAcpmB,EAAKqc,gBAAiBrc,EAAK6U,eAAexL,EAAA1K,EAAAC,cAACsnB,EAAA,EAAD,CAAMle,GAAI,oBAAsBhI,EAAK+U,sBAAuB1L,EAAA1K,EAAAC,cAAA,KAAGC,UAAU,wBAU3KwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,+DAMvBoG,IAAO0L,QAAQ,8BACf3R,KAAKC,MAAMonB,QAAQjd,KAAK,8CAGnB,IAAAkd,EAAAtnB,KACL,OAAOqK,EAAA1K,EAAAC,cAACyK,EAAA1K,EAAMuI,SAAP,KACHmC,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,yCACXwK,EAAA1K,EAAAC,cAAA,MAAIC,UAAU,sBAAsBG,KAAKC,MAAMgF,MAAMvB,OAAOI,yBAC5DuG,EAAA1K,EAAAC,cAAA,UAAQC,UAAU,0BAA0BgI,QAAS,SAAClD,GAAQ2iB,EAAKC,aAAnE,SAEJld,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,kBACXwK,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,eACXwK,EAAA1K,EAAAC,cAAA,WAAMI,KAAKwnB,qBACNxnB,KAAKiF,MAAMuH,kBAAkB9G,MAAQ2E,EAAA1K,EAAAC,cAAC6nB,EAADrmB,OAAAyE,OAAA,GAAuB7F,KAAKiF,MAAWjF,KAAKC,MAA5C,CAAmDyE,WAAY1E,KAAK0E,WAAY+M,yBAA0BzR,KAAKyR,4BACpJzR,KAAKiF,MAAMyO,eAAehO,MAAQ2E,EAAA1K,EAAAC,cAAC8nB,EAADtmB,OAAAyE,OAAA,GAAsB7F,KAAKiF,MAAWjF,KAAKC,MAA3C,CAAkDyE,WAAY1E,KAAK0E,WAAY8P,UAAWxU,KAAK2T,UAAWU,gBAAiBrU,KAAKqU,mBAClKrU,KAAKiF,MAAMqQ,YAAY5P,MAAQ2E,EAAA1K,EAAAC,cAAC+nB,EAADvmB,OAAAyE,OAAA,GAAmB7F,KAAKiF,MAAWjF,KAAKC,MAAxC,CAA+CyE,WAAY1E,KAAK0E,WAAY8P,UAAWxU,KAAK2T,UAAWlC,yBAA0BzR,KAAKyR,4BAC1KpH,EAAA1K,EAAAC,cAAA,eAAOI,KAAK4nB,mBAEhBvd,EAAA1K,EAAAC,cAAA,OAAKC,UAAU,2BACVG,KAAK6nB,yBAGb7nB,KAAKiF,MAAMH,OAASuF,EAAA1K,EAAAC,cAACkoB,GAAA,EAAD1mB,OAAAyE,OAAA,GAAW7F,KAAKiF,MAAMH,MAAtB,CAA6BwE,aAAa,SAASC,OAAQvJ,KAAK0E,sBAnmCtErE,aAsnCZmJ,gBAdf,SAAyBvE,GACrB,MAAO,CACH6a,WAAY7a,EAAM6a,WAClBgB,QAAS7b,EAAM6b,QACfM,IAAKnc,EAAMmc,IACX9C,OAAQrZ,EAAMqZ,OACd0F,aAAc/e,EAAM+e,aACpBE,mBAAoBjf,EAAMif,mBAC1BD,uBAAwBhf,EAAMgf,uBAC9BE,kBAAmBlf,EAAMkf,oBAKlB3a,CAAyBkV,6QCjoClCqJ,cAUF,SAAAA,EAAY9nB,GAAM,IAAAoE,EAAAjD,OAAA4mB,EAAA,EAAA5mB,CAAApB,KAAA+nB,IACd1jB,EAAAjD,OAAA6mB,EAAA,EAAA7mB,CAAApB,KAAAoB,OAAA8mB,EAAA,EAAA9mB,CAAA2mB,GAAAtjB,KAAAzE,KAAMC,KACDiE,QAAS,EAEd,IAAMikB,EAAiBhkB,YAAWlE,GAElCoE,EAAK8E,QAAU0Y,IAAK1V,YAAL/K,OAAAgnB,EAAA,EAAAhnB,CAAAiD,GACF8jB,EACL,SAACzkB,GACGW,EAAKpE,MAAM6W,SAAS3V,YAAKuC,KAG7B,SAACwB,GACGb,EAAKpE,MAAM6W,SAAShU,YAAgBoC,EAAO,aAAc,iBAE7D,IAGRb,EAAKY,MAAQxB,YAAaY,EAAKH,QAC/BG,EAAKY,MAAMojB,KAAO,GAClBhkB,EAAK0B,SAAW1B,EAAK0B,SAASR,KAAdnE,OAAAgnB,EAAA,EAAAhnB,CAAAiD,IAChBA,EAAKY,MAAMqjB,SAAW,GACtBjkB,EAAKZ,aAAeA,YAAaY,EAAKH,QACtCG,EAAKY,MAAMsjB,aAAc,EACzBlkB,EAAKY,MAAM2b,SAAW,CAClBpf,sBAAuB,GACvBid,aAAc,GACd9C,QAAS,GACT5X,QAAU,GAEdM,EAAKY,MAAM8c,eAAiB,GAC5B,IAAIyG,EAAiBhK,YAAkBve,GA/BzB,OAgCdoE,EAAKyc,QAAUe,IAAK1V,YAAL/K,OAAAgnB,EAAA,EAAAhnB,CAAAiD,GACLmkB,EACN,WACInkB,EAAKpE,MAAM6W,SAASrV,YAAY4C,EAAKY,MAAM2b,YAE/C,GACA,IAEJvc,EAAK0B,SAAW1B,EAAK0B,SAASR,KAAdnE,OAAAgnB,EAAA,EAAAhnB,CAAAiD,IAChBA,EAAKyB,WAAazB,EAAKyB,WAAWP,KAAhBnE,OAAAgnB,EAAA,EAAAhnB,CAAAiD,IAClBA,EAAKW,WAAaX,EAAKW,WAAWO,KAAhBnE,OAAAgnB,EAAA,EAAAhnB,CAAAiD,IA1CJA,mFAiDXrE,KAAKC,MAAMwoB,MAAMC,OAAOnoB,IACvBP,KAAKC,MAAM6W,SAASxW,YAAIN,KAAKC,MAAMwoB,MAAMC,OAAOnoB,uDAQ9BqjB,GACtB,IAAIA,EAASza,QAAQ6K,aAAe4P,EAASza,QAAQ8K,QACjD,GAAG2P,EAASza,QAAQ9C,SAASsiB,QAA2C,aAAjC/E,EAASza,QAAQjI,aACpD,GAAGlB,KAAKiF,MAAMf,QAAUlE,KAAKC,MAAMwoB,MAAMC,OAAOnoB,GAAG,CAC/CP,KAAK6E,SAAS,CAACX,QAAO,IACtB,IAAI6d,EAAiB6B,EAASza,QAAQ9C,SAASsiB,OAC5C5G,EAAe/d,cACd+d,EAAe/d,YAAc4I,KAAKC,MAAMkV,EAAe/d,cAE3D,IAAIN,EAASmH,IAAE+d,KAAK7G,EAAe,CAAC,YAAY,YAAY,wBAAwB,0BAA0B,SAAS,gBACvH/hB,KAAKyD,aAAe,CAACC,OAAOA,GAC5B1D,KAAK6E,SAAS,CAACnB,SAAOqe,yBAExB,GAAoC,aAAjC6B,EAASza,QAAQjI,YAA2B,CAEjD,IAAIwC,EAAS1D,KAAKiF,MAAMvB,OAClBkC,EAASxE,OAAOyE,OAAO,GAAInC,EAAQ,CACrClC,sBAAuBoiB,EAASza,QAAQ9C,SAASwd,QAAQriB,wBAE7DxB,KAAK6E,SAAS,CAAEnB,OAAQkC,EAAO2iB,aAAY,sCAQ/CF,GAAM,IACL3kB,EAAU1D,KAAKiF,MAAfvB,OACAM,EAAeN,EAAfM,YACLA,EAAYoG,KAAZhJ,OAAAC,EAAA,EAAAD,CAAA,GAAqBinB,EAArB,CACI9nB,GAAIsoB,iBAER7oB,KAAK6E,SAAS,CAACnB,OAAOtC,OAAAC,EAAA,EAAAD,CAAA,GACfsC,EADc,CAEbM,YAAaA,yCASdzD,EAAG8nB,GAAK,IACV3kB,EAAU1D,KAAKiF,MAAfvB,OACAM,EAAeN,EAAfM,YACDgD,EAAQ6D,IAAEie,UAAU9kB,EAAa,CAACzD,GAAIA,IAC1CyD,EAAYuhB,OAAOve,EAAO,EAAGqhB,GAC7BroB,KAAK6E,SAAS,CAACnB,OAAOtC,OAAAC,EAAA,EAAAD,CAAA,GACfsC,EADc,CAEbM,YAAaA,yCAQdzD,GAAG,IACLmD,EAAU1D,KAAKiF,MAAfvB,OACAM,EAAeN,EAAfM,YACL6G,IAAEiH,OAAO9N,EAAY,SAAS+kB,GAC1B,OAAOA,EAAExoB,IAAMA,IAEnB,IAAMqF,EAAMxE,OAAAC,EAAA,EAAAD,CAAA,GACLsC,EADK,CAERM,YAAaA,IAEjBhE,KAAK6E,SAAS,CAAEnB,OAAQkC,qCAEnB,IAAAwV,EACuBpb,KAAKC,MAAzBkJ,EADHiS,EACGjS,QAAQ2X,EADX1F,EACW0F,QACH1f,OAAAC,EAAA,EAAAD,CAAA,GACNpB,KAAKC,OAGZ,OAAO+oB,EAAArpB,EAAAC,cAACopB,EAAArpB,EAAMuI,SAAP,MACLlI,KAAKiF,MAAMsjB,aAAeS,EAAArpB,EAAAC,cAAA,OAAKC,UAAU,gBACvCmpB,EAAArpB,EAAAC,cAAA,OAAKC,UAAU,uBACXmpB,EAAArpB,EAAAC,cAAA,OAAKC,UAAU,4BACXmpB,EAAArpB,EAAAC,cAAA,UACIopB,EAAArpB,EAAAC,cAAA,8BAGRopB,EAAArpB,EAAAC,cAAA,OAAKC,UAAU,8BACXmpB,EAAArpB,EAAAC,cAACqpB,EAAA,EAAD7nB,OAAAyE,OAAA,GAAkB7F,KAAKiF,MAAvB,CACIsC,UAAW,SACXD,UAAW,SACXI,SAAU,SACVnH,GAAI,EACJR,MAAOC,KAAKiF,MAAMvB,OAAOK,OACzB+X,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnC7X,YAAY,EACZiE,KAAMpI,KAAK8gB,aAIvBkI,EAAArpB,EAAAC,cAACspB,EAAA,EAAD9nB,OAAAyE,OAAA,GAAW7F,KAAKC,MAAhB,CAAuB8J,iBAAkB/J,KAAM+F,SAAU/F,KAAK+F,SAAUD,WAAY9F,KAAK8F,WAAYd,WAAYhF,KAAKgF,WAAYoD,KAAMpI,KAAKmJ,QAASA,QAASA,EAASlE,MAAOjF,KAAKiF,MAAOkkB,MAAOnpB,KAAKyD,aAAcS,QAAQ,MAEhOlE,KAAKiF,MAAMsjB,aAAeS,EAAArpB,EAAAC,cAACwpB,EAAA,EAADhoB,OAAAyE,OAAA,GAAkB7F,KAAKC,MAAvB,CAA8B8J,iBAAkB/J,KAAMoI,KAAMpI,KAAK8gB,QAASA,QAASA,EAAS7b,MAAOjF,KAAKiF,MAAOf,QAAQ,EAAOmf,KAAK,EAAOtB,eAAgB/hB,KAAKiF,MAAM8c,0BAzKrL1hB,aAqLJmJ,sBAPf,SAAyBvE,GAErB,MAAO,CACHkE,QAFgBlE,EAAZkE,UAMGK,CAAyBue,uBCjMxCsB,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/10.3a6cf4e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID. \n    *With an arrow function, we have to pass it explicitly, \n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\nclass Search extends Component {\n    render() {\n        return <div className=\"search-container\">\n            <input type=\"text\" value={this.props.value || ''} onChange={this.props.onChange} className=\"promize-form-control\" placeholder=\"Search.. \" name=\"searchVal\" />\n            <i className=\"fa fa-search\"></i>\n        </div>\n    }\n\n}\n\nexport default Search;","import { \n    PENDING, FULFILLED, REJECTED,\n    PRODUCT, IMAGE_UPLOAD,TAB_THUMBNAIL_IMAGE, SECTION, TAB, TAB_ATTRIBUTE,TAB_ATTRIBUTE_VALUES,TAB_ATTRIBUTE_VALUES_LIST, SUB_TAB\n} from \"../../utility/constants\";\n/**\n * get the customizer product details\n * @param {Number} id \n */\nexport function get(id){\n    const method = 'POST';\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: 'getProductWithPK/',\n        data: {\n            id\n        },\n        payload: {receiveType:'editData'}\n    }\n}\n/**\n * Create/Update the customizer product\n * @param {Object} data \n */\nexport function save(data){\n    let method = 'POST';\n    data = {\n        ...data,\n        modelName:\"promize_customizer\",\n        idKey:\"promize_customizer_id\"\n    }\n    let url = 'createRecord'\n\tif(data.promize_customizer_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveSection(data){\n    data = {\n        ...data,\n        modelName:\"promize_section\",\n        idKey:\"promize_section_id\"\n    }\n\tlet method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_section_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SECTION}_${PENDING}`, `${SECTION}_${FULFILLED}`, `${SECTION}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab\",\n        idKey:\"promize_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveSubTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_sub_tab\",\n        idKey:\"promize_sub_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_sub_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SUB_TAB}_${PENDING}`, `${SUB_TAB}_${FULFILLED}`, `${SUB_TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function deleteRecord(data){\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: \"DELETE\",\n        url: \"deleteRecord\",\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttribute(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute\",\n        idKey:\"promize_tab_attribute_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE}_${PENDING}`, `${TAB_ATTRIBUTE}_${FULFILLED}`, `${TAB_ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTabAttributeValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute_values\",\n        idKey:\"promize_tab_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttributeTextValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_text_attribute_values\",\n        idKey:\"promize_tab_text_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function linkTabAttributeValues(data){\n    let method = 'POST'\n    let url = 'linkTabAttributeValues'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function linkTabAttributeClipartValues(data){\n    let method = 'POST'\n    let url = 'createBulkRecord'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function uploadBaseImage(file,typeName,name){\n    /**\n     * Upload image async action creators\n     * Hanlde the Pending, Fullfilled (Success), Rejected actions\n     *\n     * @return object\n     */\n\tconst formData = new FormData();\n    formData.append('file',file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType:'FormData',\n        url: 'uploadBaseImage',\n        data: formData,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function uploadTabImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function uploadTabThumbnailImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${TAB_THUMBNAIL_IMAGE}_${PENDING}`, `${TAB_THUMBNAIL_IMAGE}_${FULFILLED}`, `${TAB_THUMBNAIL_IMAGE}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport toastr from 'toastr';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport Input from '../../components/form/input';\nimport { SubmitButton } from \"../../components/form/SubmitButton\";\nimport { app } from '../../config/app';\nimport ImageUpload from '../../components/files/ImageUpload';\nimport noImages from '../../assets/images/no-image.png';\nimport Popup from '../../components/design/Popup'\n\nexport function initialState() {\n    const initialState = {\n        fields:\n        {\n            \"domain_id\": app.DOMAIN_ID,\n            \"modelName\" : \"promize_customizer\",\n            \"promize_customizer_id\": \"\",\n            \"promize_customizer_name\": \"\",\n            \"status\": true,\n            \"model_image\": [],\n        },\n        inputErrors: {},\n        isEdit: true,\n    };\n\n    return initialState;\n}\n\nexport const validation = (props) => {\n    const rules = {\n        \"promize_customizer_name\": \"required\",\n    }\n    return rules;\n}\n\nexport const sectionValidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass Forms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            views: {\n                'view_name': '',\n                'image_url': '',\n                'file_name': ''\n            },\n        }\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    showAddViewPopup(e) {\n        e.preventDefault();\n        this.setState({views:{\n            'view_name': '',\n            'image_url': '',\n            'file_name': ''\n        }},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    hideAddViewPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover').hide();\n        const views = this.state.views;\n        const newObj = Object.assign({}, views, {\n            view_name: '',\n            image_url: '',\n            file_name: ''\n        });\n        this.setState({ views: newObj });\n    }\n    handleUploadView(e) {\n        e.preventDefault();\n        const views = this.state.views;\n        if (views.view_name && views.image_url) {\n            if(!views.id){\n                this.props.saveView(views);\n            }else{\n                this.props.updateView(views.id,views);\n            }\n            this.hideAddViewPopup(e);\n        } else {\n            toastr.error(\"Add view name and base image\");\n        }\n    }\n    handleViewNameChange(e) {\n        e.preventDefault();\n        let fields = this.state.views;\n        const newObj = Object.assign({}, fields, {\n            view_name: e.target.value\n        });\n        fields = newObj;\n        this.setState({ views: fields });\n    }\n    handleEdit(views){\n        this.setState({views},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    componentWillReceiveProps(props) {\n        if (props.imageUpload.response !== this.props.imageUpload.response) {\n            this.handleUploadedImage(props);\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (!event.target.classList.contains('btn-popup')) {\n            $('.portlet-dropdown-menu').removeClass('show');\n            $('.portlet-dropdown-menu').addClass('hide');\n        }\n    }\n\n    handleUploadedImage(props) {\n        const response = props.imageUpload.response;\n        if (response.status && response.status === 200) {\n            const fields = this.state.views;\n            let newObj = Object.assign({}, fields, {\n                image_url: response.file.path,\n            });\n            this.setState({ views: newObj });\n        }\n    }\n    openImageOptions(e, index) {\n        e.preventDefault();\n        $('.index-' + index).removeClass('hide');\n        $('.index-' + index).addClass('show');\n    }\n\n    addView() {\n        return (<div className=\"promize-modal-cover\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Add New View\n                        </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-form-group mt-10\">\n                        <Input {...this.props}\n                            fieldName={'view_name'}\n                            value={this.state.views.view_name}\n                            labelName={\"View Name\"}\n                            onChange={(e) => { this.handleViewNameChange(e) }}\n                            validation={true}\n                        />\n                    </div>\n                    <ImageUpload {...this.props}\n                        labelName={\"View Image\"}\n                        fieldName={'image_file'}\n                        dataName={'image_file'}\n                        validation={false}\n                        imageType={\"base_image\"}\n                        image_url={this.state.views.image_url}\n                        header={'View Image'}\n                        value={this.state.views.file_name}\n                    />\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.hideAddViewPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.handleUploadView(e) }}>Upload</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    displayNoImage() {\n        return <div className=\"promize-no-data\">\n            <img src={noImages} />\n            <p className=\"mt-10\">No Views available</p>\n        </div>\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup = (e) => {\n        e && e.preventDefault();\n        this.setState({ popup: false })\n    }\n    delete = (e, data) => {\n        let popup = {};\n        popup.title = \"Remove View\";\n        popup.content = 'Do you want to remove this view?';\n        popup.submit = () => {\n            this.props.deleteView(data.id)\n        }\n        this.setState({ popup })\n    }\n    render() {\n        return <>\n        <form onSubmit={this.props.form.handleProductSubmit} method=\"POST\">\n            <div className=\"promize-card-body\">\n                <div className=\"df\">\n                    <div className=\"wd-30\">\n                        <Input {...this.props}\n                            fieldName={'promize_customizer_name'}\n                            value={this.props.state.fields.promize_customizer_name}\n                            labelName={\"Product Name\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"promize-card-header promize-card-innerheader\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Views</span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <button className=\"btn btn-links\" onClick={(e) => { this.showAddViewPopup(e) }}><i className=\"fa fa-plus\"></i> Add View</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-tab-option-container\">\n                    {this.props.state.fields.model_image.length == 0 && this.displayNoImage()}\n                    {this.props.state.fields.model_image.length > 0 &&\n                        <ul className=\"promize-tab-options\">\n                            {this.props.state.fields.model_image.map((data, index) => {\n                                return <li key={index} className=\"mr-15 mb-15\">\n                                    <div className=\"promize-tab-options-detail\">\n                                        <div className=\"promize-tab-option-header\">\n                                            <p className=\"tab-option-title\">{data.view_name}</p>\n                                            <div className=\"pormize-portlet-dropdown\">\n                                                <button className=\"btn button-dropdown\" onClick={(e) => this.openImageOptions(e, index)}><i className=\"fa fa-ellipsis-v\" ></i></button>\n                                                <div className={\"portlet-dropdown-menu index-\" + index}>\n                                                    <ul className=\"portlet-menu\">\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Edit\" onClick={e => this.handleEdit(data)}><i className=\"fa fa-edit\"></i> Edit</button></li>\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Delete\" onClick={e => this.delete(e, data)}><i className=\"fa fa-trash-alt\"></i> Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"tab-option-container\">\n                                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                                        </div>\n                                    </div>\n                                </li>\n                            })}\n                        </ul>}\n\n                </div>\n            </div>\n            <div className=\"promize-footer-actions\">\n                <NavLink to=\"/products\" className=\"btn btn-promize-secondary\">{\"Cancel\"}</NavLink>\n                <SubmitButton className=\"btn btn-promize-primary\" text={\"Next\"} response={this.props.product} />\n            </div>\n            {this.addView()}\n        </form>\n        {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup} />}\n        </>\n\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload,\n    };\n}\n\nexport default connect(mapStateToProps)(Forms);","import React from 'react';\n\nclass CheckBox extends React.Component {\n  constructor (props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.currentComponent = this.props.currentComponent;\n  }\n  onChangeHandler(e){\n      let subTabs = this.currentComponent.state.selectedSubTabs;\n      if(!subTabs.includes(parseInt(e.target.id))){\n        subTabs.push(parseInt(e.target.id));\n        this.currentComponent.setState({selectedSubTabs : subTabs});\n      }else{\n\n      }\n      \n  }\n\n  render() {\n    const checkList = (<React.Fragment> \n         <ul className=\"promize-dragable-list\">\n        {this.props.dataList.map((data, index)=>{\n          return <li className=\"mb-10\" key={index}>\n          <label className=\"promize-checkbox\" key={index}>\n            <input type=\"checkbox\" id={data.promize_tab_id} onChange={(e)=>this.onChangeHandler(e)} checked={(this.props.value.includes(data.promize_tab_id)) ? true : false} value={this.props.value.includes(data.promize_tab_id)} name={this.props.fieldName} />\n            <span> {data.tab_name}</span>  \n          </label>\n          </li>\n        })}\n        </ul>\n        </React.Fragment>);\n\n    return (checkList);\n  }\n}\n\nexport default CheckBox;","import _ from 'lodash';\nclass FabricFunction{\n    static getInstance(canvas) {\n        return new FabricFunction(canvas);\n    }\n    /**\n     * Create Fabric Function\n     * \n     * @param {Fabric Canvas | Object} canvas Fabric js canvas\n     */\n    constructor(canvas){\n        this.canvas = canvas\n    }\n    setCanvas(canvas){\n        this.canvas = canvas \n    }\n    /**\n     * find the Object from the fabric canvas using the object name\n     * @param {string} name the object name\n     */\n    findByName(name){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['name', name]);\n        }\n    }\n    /**\n     * find the Object from the fabric canvas using the object id\n     * @param {string | number} id the object id\n     */\n    findById(id){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['id', id]);\n        }\n    }\n}\n\nexport default FabricFunction;","/**\n * Todo:\n *  - Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport toastr from 'toastr'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetOptionPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let optionView = {};\n        let optionViewPosition = {};\n        let modelImage = this.props.state.fields.model_image\n        let tabAttributeValueData = this.props.setOptionPosition.data.tabAttributeValueData\n        console.log(tabAttributeValueData)\n        modelImage.map((data, index) => {\n            optionView[data.id] = \"\";\n            optionViewPosition[data.id] = \"\";\n        });\n        if (tabAttributeValueData.option_images && typeof tabAttributeValueData.option_images == \"string\") {\n            optionView = JSON.parse(tabAttributeValueData.option_images)\n        }\n        if (tabAttributeValueData.option_position && typeof tabAttributeValueData.option_position == \"string\") {\n            optionViewPosition = JSON.parse(tabAttributeValueData.option_position)\n        }\n\n        this.state.optionView = optionView\n        this.state.optionViewPosition = optionViewPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addOptionImage = this.addOptionImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, optionView, optionViewPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (optionView[modelId]) {\n                    let option_images = this.props.setOptionPosition.data.optionData.option_images\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            })\n        })\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addOptionImage(data) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"optionImage\")) {\n            toastr.warning(\"Option Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + data.image_url\n            let { optionView, optionViewPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = data.promize_images_id\n            optionViewPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = optionViewPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"optionImage\",\n                    name: \"optionImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the option image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setOptionImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"optionImage\",\n                name: \"optionImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, optionViewPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, optionViewPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"optionImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, optionViewPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                var option_images = this.props.setOptionPosition.data.optionData.option_images\n                if (optionView[modelId]) {\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { optionView, optionViewPosition } = this.state\n        this.props.updateTabAttributeValues({\n            promize_tab_attribute_values_id: this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_values_id,\n            option_images: JSON.stringify(optionView),\n            option_position: JSON.stringify(optionViewPosition)\n        })\n        toastr.success(\"Option Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, optionView, optionViewPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = \"\"\n            optionViewPosition[currnetModelImage.id] = \"\"\n            this.setState({ optionView, optionViewPosition, fields: \"\" })\n            toastr.success(\"The option image is removed\")\n            canvas.remove(optionImageObj)\n        }\n    }\n    /**\n     * Image Collection Section\n     */\n    imageCollection() {\n        let { optionView } = this.state\n        let optionViewImageId = Object.values(optionView)\n        return <div className=\"promize-image-collection\">\n            <div className=\"promize-img-coll df\">\n                <div className=\"promize-img-coll-detail wd-30\">\n                    <div className=\"promize-img-coll-title mb-10\">Image Collection</div>\n                    <div className=\"promize-img-coll-subtitle\">Some sample information about the sample images in followed detailed description,Some sample information about the sample images in followed detailed description.</div>\n                </div>\n                <div className=\"promize-coll-images-section df df-flow wd-70\">\n                    {this.props.setOptionPosition.data.optionData.promize_images && this.props.setOptionPosition.data.optionData.option_images.map((data, index) => {\n                        let active = (optionViewImageId.indexOf(data.promize_images_id) != -1 ? true : false)\n                        return <div className={\"promize-coll-images-items \" + (active ? \"disabled\" : \"\")} key={index} onClick={(e) => { active ? e.preventDefault() : this.addOptionImage(data) }}>\n                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>Delete</button>\n        }\n        return '';\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Option Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    {this.props.setOptionPosition.data.optionData && this.imageCollection()}\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default SetOptionPosition;\n","/**\n * Todo:\n *  -  Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from './../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetTabPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance(\"\")\n        }\n        let modelImage = this.props.state.fields.model_image\n        let tabData = this.props.setTabPosition.data.tabData\n        let tabImages = {}\n        let tabImagesPosition = {}\n        modelImage.map((data, index) => {\n            tabImages[data.id] = \"\";\n            tabImagesPosition[data.id] = \"\";\n        });\n        if (tabData.tab_images) {\n            tabImages = JSON.parse(tabData.tab_images)\n        }\n        if (tabData.tab_images_position) {\n            tabImagesPosition = JSON.parse(tabData.tab_images_position)\n        }\n\n        this.state.tabImages = tabImages\n        this.state.tabImagesPosition = tabImagesPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addTabImage = this.addTabImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentWillReceiveProps(props) {\n        if (!props.imageUpload.isFetching && !props.imageUpload.isError && this.props.imageUpload.isFetching !== props.imageUpload.isFetching) {\n            this.handleTabImage(props);\n        }\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, tabImages, tabImagesPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            })\n        })\n    }\n    handleTabImage(props) {\n        if (props.imageUpload && props.imageUpload.response) {\n            this.addTabImage(props.imageUpload.response.file.path)\n        }\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addTabImage(image) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"tabImage\")) {\n            toastr.warning(\"Tab Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + image\n            let { tabImages, tabImagesPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = image\n            tabImagesPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = tabImagesPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"tabImage\",\n                    name: \"tabImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the Tab image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setTabImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"tabImage\",\n                name: \"tabImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, tabImagesPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, tabImagesPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"tabImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, tabImagesPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { tabImages, tabImagesPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { tabImages, tabImagesPosition } = this.state\n        this.props.updateTabImages({\n            promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n            tab_images: JSON.stringify(tabImages),\n            tab_images_position: JSON.stringify(tabImagesPosition)\n        })\n        toastr.success(\"Tab Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, tabImages, tabImagesPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let tabImageObj = fabricFunction.findByName(\"tabImage\")\n        if (tabImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = \"\"\n            tabImagesPosition[currnetModelImage.id] = \"\"\n            this.setState({ tabImages, tabImagesPosition, fields: \"\" })\n            toastr.success(\"The tab image is removed\")\n            canvas.remove(tabImageObj)\n        }\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"tabImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Tab Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    <div className=\"df-js-center mt-20\">\n                        <div className=\"wd-25\">\n                            <div className=\"upload-image\">\n                                <ImageUpload\n                                    {...this.props}\n                                    form={this.props.imageForm}\n                                    labelName={\"Tab image\"}\n                                    fieldName={'tab_file'}\n                                    dataName={'tab_file'}\n                                    validation={false}\n                                    value={\"\"}\n                                    image_url={\"\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetTabPosition);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from '../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetBoundary extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let modelImage = this.props.state.fields.model_image\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:moving', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:scaling', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n    * call back front the fabric when scale or move the object\n    * @param {FabricObject} obj \n    */\n    positionChangeCallback = obj => {\n        let { fields, fabricFunction, currentView, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        let overlay = fabricFunction.findByName(\"overlay\")\n        if (overlay) {\n            var clipRect = new fabric.Rect({\n                left: obj.left - (overlay.width / 2),\n                top: obj.top - (overlay.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                fill: '',\n            });\n            overlay.set(\"clipPath\", clipRect)\n            canvas.renderAll()\n            this.setState({\n                fields: {\n                    ...fields,\n                    x: obj.left,\n                    y: obj.top,\n                    width: obj.getScaledWidth(),\n                    height: obj.getScaledHeight(),\n                }\n            })\n        }\n    }\n    addBoundary(baseImage) {\n        const canvas = this.state.canvas\n        var rect = new fabric.Rect({\n            left: 0,\n            top: 0,\n            width: canvas.width,\n            height: canvas.height,\n            fill: '#777',\n            selectable: false,\n            opacity: 0.7\n        });\n        canvas.add(rect);\n        this.addOverlayImage(baseImage, () => {\n            var rectRed = new fabric.Rect({\n                left: (canvas.width - 100) / 2,\n                top: (canvas.height - 100) / 2,\n                width: 100,\n                height: 100,\n                fill: '',\n                imageWidth: canvas.width,\n                imageHeight: canvas.height,\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasRotatingPoint: false,\n                productimizeType: 'boundary',\n                name: \"boundaryCtrl\"\n            });\n            canvas.add(rectRed);\n            canvas.renderAll()\n        })\n    }\n    addOverlayImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            var clipRect = new fabric.Rect({\n                left: -50,\n                top: -50,\n                width: 100,\n                height: 100,\n                fill: ''\n            });\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n                clipPath: clipRect,\n                selectable: false,\n                name: \"overlay\"\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n    * View Thmubnail Section\n    */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView = index => {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let {canvas } = this.state\n        object.set(data)\n        canvas.trigger('object:modified', { target: object })\n        object.setCoords();\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange = event => {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"boundaryCtrl\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos\n            this.changeCanvasData({ left }, object,true)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos \n            this.changeCanvasData({ top }, object,true)\n        } else if ((event.target.id === 'width')) {\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                width: width\n            }\n            this.changeCanvasData({ width }, object,true)\n        } else if ((event.target.id === 'height')) {\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                height: height\n            }\n            this.changeCanvasData({ height }, object,true)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                {/* <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div> */}\n            </div>\n        </React.Fragment>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-primary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n        return '';\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e){ \n        // let {tabImages,tabImagesPosition} = this.state\n        console.log(this.props.setBoundary)\n        // this.props.updateTabImages({\n        //     promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n        //     tab_images: JSON.stringify(tabImages),\n        //     tab_images_position: JSON.stringify(tabImagesPosition)\n        // })\n        toastr.success(\"Boundary / Default View Updated Successfully\")\n        this.props.closePopup(e)\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Boundary / Default View</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div>\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetBoundary);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport Switchtoggle from '../../../components/form/switchtoggle';\nimport { SimpleSelect } from '../../../components/form/SimpleSelect';\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n    render() {\n        let promize_attribute_values = this.props.promize_attribute_values\n        let tab_attribute_values = this.props.tab_attribute_values ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div class=\"promize-widget-sub-title\">\n                        <i class=\"fa fa-cube\"></i><span> Name : <b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt clr-org\"></i> Remove</button>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div>\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body\">\n                <div className=\"promize-tab-option-container\">\n                    <ul className=\"promize-tab-options\">\n                        {tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                            let tabAttributeValueData = tab_attribute_values[key]\n                            let optionData = promize_attribute_values.find((obj) => { return obj.promize_attribute_values_id == tabAttributeValueData.promize_attribute_values_id })\n                            optionData.option_images = [];\n                            let thumbnail_image = '';\n                            optionData.promize_images.map((data, index) => {\n                                if (data.image_type == \"option_thubnail_image\") {\n                                    thumbnail_image = data\n                                } else {\n                                    optionData.option_images.push(data)\n                                }\n                            })\n                            return <li key={index} className={\"mb-15\" + (optionData.promize_attribute_values_id == this.props.default_option ? \" active\" : \"\")} >\n                                <div className=\"promize-tab-options-detail\">\n                                    <div className=\"tab-option-container\">\n                                        <div>\n                                            {thumbnail_image && <img src={app.APP_IMAGE_BASE_URL + thumbnail_image.image_url} />}\n                                            {!thumbnail_image && optionData.option_images.length > 0 && <img src={app.APP_IMAGE_BASE_URL + optionData.option_images[0].image_url} />}\n                                            <p className=\"tab-option-title text-center\">{optionData.option_name}</p>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"wd-25\">\n                                        <SimpleSelect\n                                            optionText=\"label\"\n                                            optionValue='value'\n                                            emptyOptionText=\"No View\"\n                                            value={[\"view 1\", \"View 2\"]}\n                                            name=\"Default Font\"\n                                            labelName={\"Default View\"}\n                                        />\n                                    </div>\n                                    <div className=\"wd-25\">\n                                        <Switchtoggle  {...this.props}\n                                            value={false}\n                                            fieldName={'status'}\n                                            id={key}\n                                            spanLabel={{ first: 'Active', second: 'InActive' }}\n                                            checkValue={{ first: true, second: false }}\n                                            className=\"toggle-aa\"\n                                            labelName=\"Default Option\"\n                                            classWrapper=\"promize-form-group\"\n                                        />\n                                    </div> */}\n\n                                    <div className=\"promize-set-position\">\n                                        <button className=\"clr-bl\" onClick={(e) => { this.props.openSetOptionPositionPopup(e, { tabAttributeValueData, optionData }) }}><i class=\"fa fa-crosshairs\"></i> Option Position</button>\n                                    </div>\n                                </div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>}\n        </>\n    }\n}\n\n\nexport default Options;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport { getAllCliparts, get } from '../../../actions/cliparts';\nimport noData from '../../../assets/images/no-data.png';\nimport _ from 'lodash'\nclass Cliparts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clipartList: {},\n            toggle: false\n        }\n        this.getAssociatedClipart = this.getAssociatedClipart.bind(this)\n    }\n    componentWillMount() {\n        this.getAssociatedClipart();\n    }\n    getAssociatedClipart(id) {\n        this.props.promize_attribute_clipart_values.length > 0 && this.props.promize_attribute_clipart_values.map((data, index) => {\n            let id = data.promize_domain_clipart_category_id.split(',');\n            id.map((id, index) => {\n                this.props.dispatch(get(id));\n            })\n        })\n\n    }\n    componentWillReceiveProps(props) {\n        if (!props.clipart.isFetching && !props.clipart.isError) {\n            let clipart = props.clipart.response.data, clipartList = this.state.clipartList;\n            clipartList[clipart.promize_domain_clipart_category_id] = clipart\n            this.setState({ clipartList: clipartList });\n        }\n    }\n    render() {\n        let promize_attribute_clipart_values = this.props.promize_attribute_clipart_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        let clipartList = this.state.clipartList;\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div class=\"promize-widget-sub-title\">\n                        <i class=\"fa fa-grin-hearts\"></i><span> Name : <b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { tab_attribute_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs clr-bl\"></i> Boundary / Default View\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt clr-org\"></i> Remove</button>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div>\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body\">\n                <div className=\"promize-tab-option-container\">\n                    <ul className=\"promize-clipart-options\">\n                        {\n                            tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                let tabAttributeValueData = tab_attribute_values[key]\n                                let optionData = tabAttributeValueData.promize_attribute_clipart_values_id ? tabAttributeValueData : promize_attribute_clipart_values.find((obj) => { return obj.promize_attribute_clipart_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                let clip_ids = optionData.promize_domain_clipart_category_id.split(',');\n                                return clip_ids.map((id, index) => {\n                                    let clipart_images = clipartList[id];\n                                    return clipart_images && clipart_images.promize_clipart_category_images.map((data, index) => {\n                                        let clipartImg = data.promize_product_clipart_image\n                                        return <li>\n                                            <div className=\"promize-clipart-thumb\">\n                                                {clipartImg ? <img src={app.APP_IMAGE_BASE_URL + clipartImg} /> : <img src={noData} />}\n                                                <p>{data.clipart_name}</p>\n                                            </div>\n                                        </li>\n                                    })\n                                })\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clipart: state.clipart,\n    };\n}\n\nexport default connect(mapStateToProps)(Cliparts);","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n\n    render() {\n        let promize_attribute_image_values = this.props.promize_attribute_image_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div class=\"promize-widget-sub-title\">\n                        <i class=\"fa fa-images\"></i><span> Name : <b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, {}) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs clr-bl\"></i> Boundary / Default View\n                        </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt clr-org\"></i> Remove</button>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div>\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body\">\n                {\n                    tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                        let tabAttributeValueData = tab_attribute_values[key]\n                        let optionData = tabAttributeValueData.promize_attribute_image_values_id ? tabAttributeValueData : promize_attribute_image_values.find((obj) => { return obj.promize_attribute_image_values_id == tabAttributeValueData.promize_attribute_values_id })\n\n                        return <div className=\"promize-upld-options\">\n                            <p><span>{\"Image Name\"}</span><span>{\":\"}</span><span>{optionData.image_name}</span></p>\n                            <p><span>{\"Image Format\"}</span><span>{\":\"}</span><span>{optionData.image_format}</span></p>\n                            <p><span>{\"Image Max Upload Size\"}</span><span>{\":\"}</span><span>{optionData.max_upload_size}</span></p>\n                            <p><span>{\"Image Min Upload Size\"}</span><span>{\":\"}</span><span>{optionData.min_upload_size}</span></p>\n                        </div>\n                    })\n                }\n            </div>}\n        </>\n    }\n}\n\nexport default Image;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { getAllFonts } from '../../../actions/fontfamily'\nimport { getAllFontSizes } from '../../../actions/fontsize'\nimport { getAllFontColors } from '../../../actions/fontcolor'\nclass Text extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fontSizes: {},\n            fonts: {},\n            fontColors: {},\n            toggle: false\n        }\n    }\n\n    componentWillMount() {\n        this.props.dispatch(getAllFontSizes());\n        this.props.dispatch(getAllFonts());\n        this.props.dispatch(getAllFontColors());\n    }\n\n    componentWillReceiveProps(props) {\n        if (!props.fonts.isFetching && !props.fonts.isError) {\n            let fonts = props.fonts.response.data, fontsList = {};\n            fonts.map((data, index) => {\n                fontsList[data.font_id] = data\n            })\n            this.setState({ fonts: fontsList });\n        }\n        if (!props.fontsizes.isFetching && !props.fontsizes.isError) {\n            let fontsizes = props.fontsizes.response.data, fontsList = {};\n            fontsizes.map((data, index) => {\n                fontsList[data.font_size_id] = data\n            })\n            this.setState({ fontSizes: fontsList });\n        }\n        if (!props.fontcolors.isFetching && !props.fontcolors.isError) {\n            let fontcolors = props.fontcolors.response.data, fontsList = {};\n            fontcolors.map((data, index) => {\n                fontsList[data.promize_font_color_id] = data\n            })\n            this.setState({ fontColors: fontsList });\n        }\n    }\n\n    render() {\n        let { fonts, fontSizes, fontColors } = this.state\n        let promize_attribute_text_values = this.props.promize_attribute_text_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div class=\"promize-widget-sub-title\">\n                        <i class=\"fa fa-font\"></i><span> Name : <b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { type: \"text\", tab_text_attribute_values: this.props.promize_attribute_text_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs clr-bl\"></i> Boundary / Default View\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt clr-org\"></i> Remove</button>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div>\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body\">\n                <div className=\"promize-tab-option-container\">\n                    {\n                        tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                            let tabAttributeValueData = tab_attribute_values[key]\n                            let optionData = tabAttributeValueData.promize_attribute_text_values_id ? tabAttributeValueData : promize_attribute_text_values.find((obj) => { return obj.promize_attribute_text_values_id == tabAttributeValueData.promize_attribute_values_id })\n                            let font_id = optionData.font_ids.split(',');\n                            let font_size_ids = optionData.font_size_ids.split(',')\n                            let font_color_ids = optionData.font_color_ids.split(',')\n                            return (<>\n                                <div className=\"df\">\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fonts).length > 0 && optionData && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font\"}</p><span class=\"promize-text-highlight-aa\">{fonts[optionData.default_font_family].font_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10\">{\"Fonts\"}</p>\n                                        <ul class=\"promize-text-options\">\n                                            {\n                                                fonts && font_id.map((id, index) => {\n                                                    let font = fonts[id];\n                                                    return font && <li class=\"promize-text-highlight-aa\">{font.font_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontSizes).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Size\"}</p><span class=\"promize-text-highlight-aa\">{fontSizes[optionData.default_font_size].font_size}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Sizes\"}</p>\n                                        <ul class=\"promize-text-options\">\n                                            {\n                                                fontSizes && font_size_ids.map((id, index) => {\n                                                    let font = fontSizes[id];\n                                                    return font && <li class=\"promize-text-highlight-aa\">{font.font_size}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontColors).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Color\"}</p><span class=\"promize-text-highlight-aa\">{fontColors[optionData.default_color].font_color_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Colors\"}</p>\n                                        <ul class=\"promize-text-options\">\n                                            {\n                                                fontColors && font_color_ids.map((id, index) => {\n                                                    let font = fontColors[id];\n                                                    return font && <li class=\"promize-text-highlight-aa\">{font.font_color_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            </>\n                            )\n                        })\n                    }\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fonts: state.fonts,\n        fontsizes: state.fontsizes,\n        fontcolors: state.fontcolors,\n    };\n}\n\nexport default connect(mapStateToProps)(Text);","import React from 'react';\n\nclass InputMultple extends React.Component {\n\n\tclassNameCheck() {\n\t\tconst validation = this.props.form.validation(this.props.fieldName)\n\t\tconst message = validation ? this.props.state.inputErrors[this.props.fieldName].message : '';\n\t\tconst classValidation = `form-group ${validation ? 'feild-wrong' : ''} ${this.props.value && !validation ? 'feild-sucess' : ''}`\n\t\tconst className = this.props.validation ? classValidation : 'form-group';\n\t\treturn { 'className': className, 'message': message, 'validation': validation };\n\t}\n\n\tinput() {\n\t\tconst validation = this.classNameCheck();\n\t\treturn (<React.Fragment><div className=\"promize-form-group\">\n\t\t\t<label htmlFor={this.props.fieldName} className=\"promize-form-control-label\">{this.props.labelName}{this.props.validation && <sup>*</sup>}</label>\n\t\t\t<textarea className=\"promize-form-control\"\n\t\t\t\ttype={this.props.inputType ? this.props.inputType : \"text\"}\n\t\t\t\tid={this.props.fieldName}\n\t\t\t\tstep={this.props.inputStep ? this.props.inputStep : \"\"}\n\t\t\t\tdata-type={this.props.dataType || \"text\"}\n\t\t\t\tdata-name={this.props.dataName}\n\t\t\t\tplaceholder={\" \"}\n\t\t\t\tname={this.props.fieldName}\n\t\t\t\tonBlur={this.props.onBlur || this.props.form.blurEventListner}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tonChange={this.props.onChange || this.props.form.handleFieldsChange}\n\t\t\t\tvalue={this.props.value}\n\t\t\t\tdata-validation-name={this.props.labelName}\n\t\t\t\tmaxLength={this.props.maxLength}\n\t\t\t\trows=\"5\" />\n\n\t\t\t{validation['validation'] && <span className=\"promize-form-error\">{`${this.props.labelName} ` + validation['message']}</span>}\n\t\t</div></React.Fragment>);\n\t}\n\n\trender() {\n\n\t\treturn (<React.Fragment>\n\t\t\t{this.input()}\n\t\t</React.Fragment>);\n\t}\n}\n\nexport default InputMultple;\n","import React from 'react'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\nclass Subtab extends React.Component {\n    state = {\n        toggle: false,\n        highlight: false,\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    render() {\n        let {tabData, sectIndex, tabIndex} = this.props\n        let {highlight} = this.state\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n\n        return <>\n            <div className={\"promize-dragable-tab-container  mb-20\"}>\n                <div className=\"promize-widget promize-subtab\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action df\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex, this.props.parentTabData)}\n                            </ul>\n                        </div>\n                        <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div>\n                        <div className=\"promize-widget-toggle\">\n                        <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                        </div>\n                    </div>\n                    {this.state.toggle && <div className={\"promize-widget-body\"}>\n                        <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <div className=\"mr-15\">\n                                            <div className=\"df\">\n                                                <div className=\"wd-50\">\n                                                    <div className=\"mr-15\">\n                                                        <Input {...this.props}\n                                                            fieldName={'tab_layer_no'}\n                                                            value={tabData.tab_layer_no}\n                                                            labelName={\"Tab Layer No\"}\n                                                            validation={false}\n                                                            onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                            onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"wd-50\">\n                                                    <Input {...this.props}\n                                                        fieldName={'sort_id'}\n                                                        value={tabData.sort_id}\n                                                        labelName={\"Sort Id\"}\n                                                        validation={false}\n                                                        onBlur={e => this.props.handleFieldBlur(e, 'sort_id', tabIndex)}\n                                                        onChange={e => this.props.handleFieldChange(e, 'sort_id', tabIndex)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-70\">\n                            <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                                <div >\n                                    <SimpleSelect\n                                        onChangeHandler={this.props.onChangeHandler}\n                                        data={[{'name':'Circle', 'value':2},{'name':'Radio', 'value':3},{'name':'Checkbox', 'value':4}, {'name':'Select', 'value':5}, {'name':'Input', 'value':6}]}\n                                        optionText=\"name\"\n                                        optionValue=\"value\"\n                                        emptyOptionText = \"Default (Square)\"\n                                        value={style.display}\n                                        name=\"Display Type\"\n                                        labelName=\"Display Type\"\n                                        promize_tab_id = {tabIndex}\n                                    />\n                                </div>\n                                <div>\n                                        <div className=\"mr-15\">\n                                            <div className=\"df\">\n                                                <div className=\"wd-50\">\n                                                    <div className=\"mr-15\">\n                                                        <Input {...this.props}\n                                                            fieldName={'height'}\n                                                            value={style.height}\n                                                            labelName={\"Option Display Height\"}\n                                                            validation={false}\n                                                            onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                            onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"wd-50\">\n                                                    <Input {...this.props}\n                                                        fieldName={'width'}\n                                                        value={style.width}\n                                                        labelName={\"Option Display Width\"}\n                                                        validation={false}\n                                                        onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                        onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                />\n                            </div>\n                        </div>\n                        {<div>\n                            {tabData.tab_attribute && Object.keys(tabData.tab_attribute).length > 0 && Object.keys(tabData.tab_attribute).map((key, index) => {\n                                let tabAttributeData = tabData.tab_attribute[key]\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return <div className=\"promize-widget mb-15\" key={index}>\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_attribute_data_values={tab_attribute_data_values} {...tabAttributeData}  {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                </div>\n                            })}\n                        </div>}\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from the <b>Attributes List</b></p>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Subtab","import React, { Component } from 'react'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport SubTab from './subTab'\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\n\nclass Tabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hightlight: true,\n            toggle: true,\n            subTabHide: {},\n        }\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    getTabContent = (tabData, sectIndex, tabIndex, parentTabData) => {\n        const data = {\n            tabData,\n            sectIndex,\n            tabIndex,\n            parentTabData\n        }\n        return <SubTab {...this.props} {...data}/>\n    }\n\n    render() {\n        const { highlight } = this.state\n        const displayTab = this.props.state.openTab\n        const tabs = this.props.state.tabs\n        let { tabData, sectIndex, tabIndex } = this.props\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <>\n            <div className={\"promize-dragable-tab-container  mb-20\"}>\n                <div className=\"promize-widget\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action df\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex)}\n                            </ul>\n                        </div>\n                        <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div>\n                        <div className=\"promize-widget-toggle\">\n                            <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-sort-down\"></i></button>\n                        </div>\n                    </div>\n                    {this.state.toggle && <div className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) && tabData.is_sub_tab == 0) ? \"promize-widget-body db\" : \"promize-widget-body dn\"}>\n                        <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <div className=\"mr-15\">\n                                            <div className=\"df\">\n                                                <div className=\"wd-50\">\n                                                    <div className=\"mr-15\">\n                                                        <Input {...this.props}\n                                                            fieldName={'tab_layer_no'}\n                                                            value={tabData.tab_layer_no}\n                                                            labelName={\"Tab Layer No\"}\n                                                            validation={false}\n                                                            onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                            onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"wd-50\">\n                                                    <Input {...this.props}\n                                                        fieldName={'sort_id'}\n                                                        value={tabData.sort_id}\n                                                        labelName={\"Sort Id\"}\n                                                        validation={false}\n                                                        onBlur={e => this.props.handleFieldBlur(e, 'sort_id', tabIndex)}\n                                                        onChange={e => this.props.handleFieldChange(e, 'sort_id', tabIndex)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-70\">\n                                {/* <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div> */}\n                                <div className=\"df\">\n                                <div className=\"wd-50\">\n                                    <div className=\"mr-15\">\n                                    <SimpleSelect\n                                        onChangeHandler={this.props.onChangeHandler}\n                                        data={[{'name':'Circle', 'value':2},{'name':'Radio', 'value':3},{'name':'Checkbox', 'value':4}, {'name':'Select', 'value':5}, {'name':'Input', 'value':6}]}\n                                        optionText=\"name\"\n                                        optionValue=\"value\"\n                                        emptyOptionText = \"Default (Square)\"\n                                        value={style.display}\n                                        name=\"Display Type\"\n                                        labelName=\"Display Type\"\n                                        promize_tab_id = {tabIndex}\n                                    />\n                                    </div>\n                                </div>\n                                <div className=\"wd-50\">\n                                        <div className=\"mr-15\">\n                                            <div className=\"df\">\n                                                <div className=\"wd-50\">\n                                                    <div className=\"mr-15\">\n                                                        <Input {...this.props}\n                                                            fieldName={'height'}\n                                                            value={style.height}\n                                                            labelName={\"Display Height\"}\n                                                            validation={false}\n                                                            onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                            onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"wd-50\">\n                                                    <Input {...this.props}\n                                                        fieldName={'width'}\n                                                        value={style.width}\n                                                        labelName={\"Display Width\"}\n                                                        validation={false}\n                                                        onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                        onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                </div>\n                                </div>\n                            </div>\n                            {/* <div className=\"wd-30\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                />\n                            </div> */}\n                        </div>\n                        <div>\n                            <div class=\"promize-attr-section\">\n                                <h3 class=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.tab_attribute && Object.keys(tabData.tab_attribute).length > 0 && Object.keys(tabData.tab_attribute).map((key, index) => {\n                                let tabAttributeData = tabData.tab_attribute[key]\n                                if (!tabAttributeData) {\n                                    return false\n                                }\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return <div className=\"promize-widget mb-15\" key={index}>\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_values} deleteAttributeFromTab={this.props.deleteAttributeFromTab} {...tabAttributeData}  {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} />}\n                                </div>\n                            })}\n                        </div>\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from <b>Attributes List</b></p>\n                        </div>\n                        {tabData.promize_sub_tabs && tabData.promize_sub_tabs.length > 0 &&\n                            <div className=\"mt-15\">\n                                <div class=\"promize-attr-section\">\n                                    <h3 class=\"promize-attr-title\">Sub Tabs</h3>\n                                </div>\n                                {tabData.promize_sub_tabs.map((subTabData, subTabIndex) => {\n                                    let subTab = tabs[subTabData.child_tab_id]\n                                    return subTab && <div className=\"sub-tab-content\">{this.getTabContent(subTab, sectIndex, subTabData.child_tab_id,tabData)}</div>\n                                })\n                                }\n                            </div>}\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Tabs","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport { getAllAttributes } from '../../actions/attributes';\nimport noData from '../../assets/images/no-data.png';\nimport CheckBox from '../../components/form/CheckBox';\nimport Search from '../../components/form/Search';\nimport {SetOptionPosition, SetTabPosition, SetBoundary} from \"../../components/form\"\nimport {Link} from 'react-router-dom'\nimport Form from '../../utility/Form';\nimport Tabs from './tab.jsx';\nimport { saveSection, saveTab, saveTabAttribute, linkTabAttributeValues,saveTabAttributeValues,uploadTabImage,uploadTabThumbnailImage,saveSubTab, linkTabAttributeClipartValues, deleteRecord} from '../../actions/products';\nimport Input from '../../components/form/input';\nimport Popup from '../../components/design/Popup'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass SectionForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            editSection:{\n                show: false,\n                data: {}\n            },\n            tab_attribute:{},\n            tab_attribute_values:{},\n            tab:{\n                tab_name:'New Tab',\n                tab_description:'',\n                tab_images:'',\n                tab_images_position:'',\n                tab_layer_no: 0,\n                tab_required: 0,\n                overlay_image:'',\n                overlay_position:'',\n                image_color_settings:'',\n                tab_thumbnail:'',\n                tab_style:JSON.stringify({display:1, height:50, width:50}),\n                sort_id: 0,\n                default_view: 0,\n                is_default_tab: 0,\n                promize_attribute_values:[],\n                tab_attributes:[],\n                default_option: \"\",\n                is_sub_tab : 0\n            },\n            selectedTabs: [],\n            selectedSubTabs: [],\n            openTab: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            subTabIndex: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            setOptionPosition:{\n                show:false,\n                data:{}\n            },\n            setTabPosition: {\n                show:false,\n                data:{}\n            },\n            setBoundary: {\n                show: false,\n                data:{}\n            },\n            currnetTabId: '',\n            searchText: '',\n            activeSectionId: '',\n            highlight:false,\n            parentTabId : ''\n        }\n        this.tabImages = Form.getInstance(\n            this, {},\n             {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.tabThumbnailImages = Form.getInstance(\n            this, {},\n            {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabThumbnailImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.section = Form.getInstance(\n            this, {},\n            (fields) => {\n                console.log(\"alert\")\n            },\n            {},\n            {}\n        );\n        this.sectionRefs = {}\n        let sections = {}\n        let tabs = {};\n        this.props.productDetails && this.props.productDetails.promize_sections && this.props.productDetails.promize_sections.map((section,index)=>{\n            sections[section.promize_section_id] = {\n                ...section\n            }\n            section.promize_tabs.map((tab,tab_index)=>{\n                tabs[tab.promize_tab_id] = tab\n                tabs[tab.promize_tab_id].tab_attribute = {}\n                tab.promize_tab_attributes.map((attribute, attr_index)=>{\n                    tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attribute.promize_attribute\n                    if(attribute.promize_attribute){\n                        let attributeData = attribute.promize_attribute\n                        if(attribute.promize_tab_attribute_values){\n                            attributeData.tab_attribute_values = {}\n                            attribute.promize_tab_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_attribute_values[tab_attr_value.promize_tab_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_text_attribute_values){\n                            attributeData.tab_text_attribute_values = {}\n                            attribute.promize_tab_text_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_text_attribute_values[tab_attr_value.promize_tab_text_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_image_attribute_values){\n                            attributeData.tab_image_attribute_values = {}\n                            attribute.promize_tab_image_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_image_attribute_values[tab_attr_value.promize_tab_image_attribute_values_id] = tab_attr_value\n                            })\n                        }\n                        tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attributeData\n                        //tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id].attribute = attributeData\n                    }\n                })\n            })\n        })\n        this.state.sections = sections\n        this.state.tabs = tabs\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.openSetOptionPositionPopup = this.openSetOptionPositionPopup.bind(this);\n        this.openSetBoundaryPopup = this.openSetBoundaryPopup.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.createTab = this.createTab.bind(this);\n        this.addAttributeToTab = this.addAttributeToTab.bind(this);\n        this.saveSectionToState = this.saveSectionToState.bind(this);\n        this.saveTabToState = this.saveTabToState.bind(this);\n        this.saveTabAttributeToState = this.saveTabAttributeToState.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleSwitchChange = this.handleSwitchChange.bind(this)\n        this.handleFieldBlur = this.handleFieldBlur.bind(this)\n        this.han = this.handleFieldChange.bind(this)\n        this.saveTabAttributeValuesList = this.saveTabAttributeValuesList.bind(this)\n        this.updateTabAttributeValues = this.updateTabAttributeValues.bind(this)\n        this.updateTabImages = this.updateTabImages.bind(this)\n        this.setCurrentTab = this.setCurrentTab.bind(this)\n        this.actionButtons = this.actionButtons.bind(this)\n        this.saveTabAttributeValues = this.saveTabAttributeValues.bind(this)\n        this.openTab = this.openTab.bind(this)\n    }\n    setRef = (ref,key) => {\n        this.sectionRefs[key] = ref;\n    };\n     \n    componentWillMount() {\n        this.props.dispatch(getAllAttributes());\n        this.props.new && this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: this.props.state.fields.promize_customizer_name,\n            sort_id:1\n        }))\n    }\n    componentDidMount(){\n        let {sectionContainer,sectionAddBtn} = this.refs;\n        if(sectionContainer && sectionAddBtn){\n            let sectionContainerBoundBox = sectionContainer.getBoundingClientRect()\n            let sectionAddBtnBoundBox = sectionAddBtn.getBoundingClientRect()\n            let sectionWrapperWidth = sectionContainerBoundBox.width - sectionAddBtnBoundBox.width\n            this.setState({sectionWrapperWidth})\n        }\n    }\n    componentWillReceiveProps(newProps){\n        let parentTabId = this.state.parentTabId;\n        if(!newProps.section.isFetching && !newProps.section.isError && this.props.section.isFetching != newProps.section.isFetching){\n            this.saveSectionToState(newProps.section.response.records,newProps.section)\n        }\n        if(newProps.tab && newProps.tab.response !== this.props.tab.response && newProps.tab.method == \"POST\" && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            if(parentTabId){\n                let obj = {\n                    parent_tab_id : parentTabId,\n                    child_tab_id : newProps.tab.response.records.promize_tab_id\n                }\n                this.setState({parentTabId : ''},()=>{\n                    this.props.dispatch(saveSubTab(obj));\n                })\n            }\n            this.saveTabToState(newProps.tab.response.records)\n        }\n        if(newProps.subTab && !newProps.subTab.isFetching && !newProps.subTab.isError && this.props.subTab.isFetching != newProps.subTab.isFetching){\n            this.saveSubTabToState(newProps.subTab.response.records);\n        }\n        if(newProps.tabAttribute && !newProps.tabAttribute.isFetching && !newProps.tabAttribute.isError && this.props.tabAttribute.isFetching != newProps.tabAttribute.isFetching){\n            this.saveTabAttributeToState(newProps.tabAttribute.response.records);\n        }\n        if(newProps.tabAttributevalueslist && !newProps.tabAttributevalueslist.isFetching && !newProps.tabAttributevalueslist.isError && this.props.tabAttributevalueslist.isFetching != newProps.tabAttributevalueslist.isFetching){\n            this.saveTabAttributeValuesList(newProps.tabAttributevalueslist.response.records)\n        }\n        if(newProps.tabAttributevalues && !newProps.tabAttributevalues.isFetching && !newProps.tabAttributevalues.isError && this.props.tabAttributevalues.isFetching != newProps.tabAttributevalues.isFetching){\n            this.saveTabAttributeValues(newProps.tabAttributevalues.response.records)\n        }if(newProps.tabThumbnailImage && !newProps.tabThumbnailImage.isFetching && !newProps.tabThumbnailImage.isError && this.props.tabThumbnailImage.isFetching != newProps.tabThumbnailImage.isFetching){\n            this.saveTabImage(newProps.tabThumbnailImage.response.file)\n        }\n    }\n    /**\n     * Save Section Data to the state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSectionToState(data,sectionData){\n        let {sections} = this.state;\n        if(data){\n            let sectionsData = sections[data.promize_section_id] || {};\n            sections[data.promize_section_id] = {\n                ...sectionsData,\n                ...data\n            }\n        }\n        this.setState({sections,activeSectionId:data.promize_section_id},()=>{\n            sectionData.method && sectionData.method == \"POST\" && this.createTab({},data.promize_section_id)\n        });\n    }\n    /**\n     * save Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n        saveTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.promize_tab_id] || {};\n            tabs[data.promize_tab_id] = {...tabData,...data}\n        }\n        this.setState({tabs});\n    }\n    /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSubTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.parent_tab_id] || {};\n            if(tabData.promize_sub_tabs == undefined){\n                tabData.promize_sub_tabs = []\n            }\n            tabData.promize_sub_tabs.push(data);\n            tabs[data.parent_tab_id] = {...tabData}\n        }\n        this.setState({tabs});\n    }\n\n     /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    deleteAttributeFromTab = (e, promize_attribute_id, tab_id)=>{\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Attribute\";\n        popup.content = 'Do you want to remove this attribute?';\n        popup.submit = () => {\n            this.deleteAttributeFromTabFn(e, promize_attribute_id, tab_id)\n        }\n        this.setState({popup})\n    }\n    deleteAttributeFromTabFn = (e, promize_attribute_id, tab_id) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        let deleteIndex = 0\n        let selectedTab = {\n            ...tabs[parseInt(tab_id)]\n        }\n        let tab_attributes = tabs[parseInt(tab_id)].promize_tab_attributes || tabs[parseInt(tab_id)].tab_attribute;\n        if(tab_attributes){\n            tab_attributes.map((tab_attr, index)=>{\n                if(tab_attr.promize_attribute_id == promize_attribute_id){\n                    deleteIndex = tab_attr.promize_tab_attribute_id\n                    let obj = {\n                        ids : [tab_attr.promize_tab_attribute_id],\n                        modelName:\"promize_tab_attribute\",\n                        idKey:\"promize_tab_attribute_id\",\n                    }\n                    this.props.dispatch(deleteRecord(obj))\n                }\n            })\n        }\n       deleteIndex && delete selectedTab.tab_attribute[deleteIndex]\n        tabs[parseInt(tab_id)] = selectedTab\n        this.setState({tabs});\n    }\n    /**\n     * save tab attribute to state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveTabAttributeToState(data){\n        let {tabs} = this.state;\n        if(data && data.promize_tab_attribute_id && data.promize_tab_id){\n            let tab = tabs[data.promize_tab_id] || {};\n            tab.promize_tab_attributes = tab.promize_tab_attributes || [];\n            tab.tab_attribute = tab.tab_attribute || {};\n            let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n            tab.tab_attribute[data.promize_tab_attribute_id] = {\n                ...data,\n                ...attributeData\n            }\n           tab.promize_tab_attributes.push(tab.tab_attribute[data.promize_tab_attribute_id])\n            tabs[data.promize_tab_id] = tab\n            this.setState({tabs},()=>{\n                let tabAttributeValues = []\n                let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n                if(attributeData.promize_attribute_values.length > 0){\n                    attributeData.promize_attribute_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_values_id,\n                        })\n                    })\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeValues(tabAttributeValues))\n                }else if(attributeData.promize_attribute_clipart_values.length > 0){\n                    attributeData.promize_attribute_clipart_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_clipart_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_clipart_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_image_values.length > 0){\n                    attributeData.promize_attribute_image_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_image_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_image_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_text_values.length > 0){\n                    attributeData.promize_attribute_text_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_text_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_text_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }\n               \n            })\n        }\n    }\n    /**\n     * save section Tab Attribute value\n     * @param {*} data return data from linkTabAttributeValues Api\n     */\n    saveTabAttributeValuesList(data){\n        let {tabs} = this.state\n        if(data){\n            let promize_tab_attribute_id = data[0].promize_tab_attribute_id;\n            Object.keys(tabs).map((key,index)=>{\n                if(tabs[key].tab_attribute && tabs[key].tab_attribute[promize_tab_attribute_id]){\n                    let tab_attribute = tabs[key].tab_attribute[promize_tab_attribute_id] || {};\n                    data.map((value,index)=>{\n                        tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                        if(value.promize_tab_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_clipart_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_clipart_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_image_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_image_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_text_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_text_attribute_values_id] = {...value}\n                        }\n                    })\n                    tabs[key].tab_attribute[promize_tab_attribute_id] = tab_attribute;\n                    this.setState({tabs})\n                }\n            })\n        }\n    }\n    saveTabAttributeValues(data){\n        let {tabs} = this.state\n        Object.keys(tabs).map((key,index)=>{\n            if(tabs[key].tab_attribute[data.promize_tab_attribute_id]){\n                let tab_attribute = tabs[key].tab_attribute[data.promize_tab_attribute_id] || {};\n                tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                tab_attribute.tab_attribute_values[data.promize_tab_attribute_values_id] = {...data}\n                tabs[key].tab_attribute[data.promize_tab_attribute_id] = tab_attribute\n                this.setState({tabs})\n            }\n        })\n    }\n    saveTabImage(data){\n        let {currnetTabId,tabs} = this.state\n        if(currnetTabId && tabs[currnetTabId]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[currnetTabId].promize_tab_id,tab_icon:data.path}))\n        }\n        this.setState({currnetTabId: ''})\n    }\n    /**\n     * Create Tab\n     * @param {HtmEvent | Object} e \n     */\n    createTab(e,sectIndex){\n        let {tab} = this.state\n        this.props.dispatch(saveTab({...tab,promize_section_id:sectIndex}))\n    }\n    /**\n     * add section\n     */\n    addSection() {\n        this.setState({editSection:{show:false}})\n        this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: \"Section Name\",\n            sort_id:1\n        }))\n    }\n    /**\n     * Update the tab attribute values\n     * @param {object} data \n     */\n    updateTabAttributeValues(data,type){\n        if(type == \"text\"){\n\n        }else{\n            this.props.dispatch(saveTabAttributeValues({\n                ...data\n            }))\n        }\n        \n    }\n    /**\n     * Update Tab Images\n     * @param {HtmlEvent | Object} e Html Element\n     * @param {string} fieldName Field Name\n     */\n    updateTabImages(data){\n        let {tabs} = this.state\n        if(data && tabs){\n            tabs[data.promize_tab_id] = {\n                ...tabs[data.promize_tab_id],\n                ...data\n            }\n            this.setState({tabs})\n            this.props.dispatch(saveTab({...data}))\n        }\n    }\n    onChangeHandler = (e)=>{\n        let {tabs} = this.state;\n        let promize_tab_id = e.target ? parseInt(e.target.getAttribute('promize_tab_id')) : ''\n        if(promize_tab_id && tabs){\n            let selectedTab = tabs[promize_tab_id] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style.display = e.target.value ? parseInt(e.target.value) : 1;\n            selectedTab = {\n                ...tabs[promize_tab_id] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[promize_tab_id] = selectedTab\n            this.setState({tabs})\n            this.props.dispatch(saveTab(tabs[promize_tab_id]))\n        }\n    }\n    /**\n     * On Drag Start\n     * @param {Event | Object} ev event object from the Drag\n     * @param {Object} item The drag Item\n     * @param {number} reorder Reorder number\n     */\n    onDragStart = (ev, item, reorder) => {\n        ev.dataTransfer.setData(\"id\", item[\"promize_attribute_id\"]);\n        ev.dataTransfer.setData(\"reorder\", reorder);\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    /**\n     * On Drop\n     * @param {Event | Object} ev event object from the Drag\n     * @param {number} sectIndex Index of the section\n     * @param {number} dropIndex Index of the drop positon \n     */\n    onDrop = (ev, sectIndex, dropIndex) => {\n        let id = ev.dataTransfer.getData(\"id\");\n        if(dropIndex != null && sectIndex != null){\n            this.props.attributes.response.data.map((data, index) => {\n                if(data.promize_attribute_id == id) this.addAttributeToTab(ev, data, sectIndex, dropIndex);\n            });\n        }\n        this.setState({ highlight: false });\n    };\n    /**\n     * add Tab to section\n     * \n     * @param {HtmlEvent | Object} e Html Event link click\n     * @param {number} tabdata Tab data\n     * @param {number} sectIndex section index\n     */\n    addTabToSection(e, tabdata, sectIndex) {\n        e.preventDefault();\n        let sections = this.state.sections;\n        if (sections[sectIndex].tabs == undefined) {\n            sections[sectIndex].tabs = [];\n        }\n        let selectedTabs = sections[sectIndex].tabs;\n        selectedTabs.push(tabdata);\n        sections[sectIndex].tabs = selectedTabs;\n        this.setState({ sections });\n    }\n    addAttributeToTab(e, tabdata, sectIndex, dropIndex){\n        e.preventDefault();\n        this.props.dispatch(saveTabAttribute({\n            promize_tab_id: dropIndex,\n            promize_attribute_id: tabdata.promize_attribute_id,\n            sort_id: 1\n        }))\n    }\n    /**\n     * Tab Drag Start\n     * @param {Event | Object} ev Event Obect\n     * @param {Object} item Tab promize attribute\n     * @param {Object} startIndex Start Index\n     */\n    onTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"id\", item[\"promize_attribute_id\"]);\n        ev.dataTransfer.setData(\"startIndex\", startIndex);\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    /**\n     * Add Suby Tab to the Tab\n     * @param {Html | Object} e Html Event link click \n     */\n    addSubTabToTab(e) {\n        e.preventDefault();\n        let sectIndex = this.state.subTabIndex.sectIndex;\n        let tabIndex = this.state.subTabIndex.tabIndex;\n        let sections = this.state.sections;\n        let subtabs = this.state.selectedSubTabs;\n        if (sections[sectIndex].tabs[tabIndex].sub_tabs == undefined) {\n            sections[sectIndex].tabs[tabIndex].sub_tabs = [];\n        }\n        let selectedsub_tabs = sections[sectIndex].tabs[tabIndex].sub_tabs;\n        this.props.attributes.response.data.map((data, index) => {\n            if (subtabs.includes(data.promize_attribute_id)) {\n                selectedsub_tabs.push(data);\n            }\n        });\n        sections[sectIndex].tabs[tabIndex].sub_tabs = selectedsub_tabs;\n        this.setState({ sections, selectedSubTabs: [] });\n        this.closeTabSelectionPopup(e);\n    }\n    /**\n     * Reorder Tab in section\n     * @param {Array} list Reorder List\n     * @param {number} startIndex Start Index\n     * @param {number} endIndex End Index\n     * @returns {Array} result of the reorder\n     */\n    reorderTabInSection(list, startIndex, endIndex) {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n        return result;\n    }\n    /**\n     * delete Tab from the section\n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    deleteTabFromsection(tabIndex, sectIndex, parentTabId) {\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Tab\";\n        popup.content = 'Do you want to remove this tab?';\n        popup.submit = e => {\n            this.deleteTabFromsectionFn(tabIndex, sectIndex, parentTabId, tabs)\n        }\n        this.setState({popup})\n    }\n    deleteTabFromsectionFn = (tabIndex, sectIndex, parentTabId, tabs) => {\n        let obj = {\n            ids : [tabIndex],\n            modelName:\"promize_tab\",\n            idKey:\"promize_tab_id\",\n        }\n        if(tabs[tabIndex].is_sub_tab && tabs[parentTabId.promize_tab_id].promize_sub_tabs){\n        tabs[parentTabId.promize_tab_id].promize_sub_tabs = tabs[parentTabId.promize_tab_id].promize_sub_tabs.filter((data)=>{\n            return data.child_tab_id != tabIndex\n        })\n        }\n        delete tabs[tabIndex]\n        this.props.dispatch(deleteRecord(obj))\n        this.setState({tabs});\n    }\n    /**\n     * Open Tab Index\n     * @param {HtmlEvent | Object } e \n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    openTab(e, tabIndex, sectIndex) {\n        e.preventDefault();\n        let tab = this.state.openTab;\n        if (tab.tabIndex !== tabIndex) {\n            tab.sectIndex = parseInt(sectIndex);\n            tab.tabIndex = parseInt(tabIndex);\n            this.setState({ openTab: tab });\n        } else {\n            tab.sectIndex = '';\n            tab.tabIndex = '';\n            this.setState({ openTab: tab });\n        }\n    }\n    /**\n     * Open Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of the section\n     * @param {number} tabIndex Index of the tab\n     */\n    openTabSelectionPopup(e, tabData, sectIndex, tabIndex) {\n        let {tab}  = this.state\n        console.log(\"tabIndex\", tabIndex, tabData.tabIndex)\n        e.preventDefault();\n        let obj ={\n            ...tab,\n            is_sub_tab : 1,\n            promize_section_id : parseInt(tabData.sectIndex)\n        }\n        this.setState({parentTabId : parseInt(tabData.tabIndex)},()=>{\n            this.props.dispatch(saveTab(obj));\n        })\n        // let subTabIndex = this.state.subTabIndex;\n        // subTabIndex.sectIndex = sectIndex;\n        // subTabIndex.tabIndex = tabIndex;\n        // this.setState(subTabIndex);\n        // $('.promize-modal-cover-tab-selection').show();\n    }\n    /**\n     * Close Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    closeTabSelectionPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover-tab-selection').hide();\n    }\n    /**\n     * Select Sub tab\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    selectedSubtab(e) {\n        e.preventDefault();\n        let subTabs = this.state.selectedSubTabs;\n        subTabs.push(parseInt(e.target.id));\n        this.setState({ selectedSubTabs: subTabs });\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetTabPositionPopup(e, data) {\n        e.preventDefault();\n        this.setState({setTabPosition:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n     /**\n     * Open Set Boundary Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} Data Option Data Object\n     */\n    openSetBoundaryPopup(e, data) {\n        e.preventDefault();\n        this.setState({setBoundary:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetOptionPositionPopup(e, data) {\n        e.preventDefault();\n        let setOptionPosition = this.state.setOptionPosition\n        this.setState({setOptionPosition:{\n            ...setOptionPosition,\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup(e) {\n        e && e.preventDefault();\n        this.setState({setOptionPosition:{\n            show:false,\n            data:{}\n        },setTabPosition:{\n            show:false,\n            data:{}\n        },setBoundary:{\n            show:false,\n            data:{}\n        },popup: false})\n    }\n    /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleFieldBlur(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:e.target.value}))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleFieldChange(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = e.target.value;\n            this.setState({tabs});\n        }\n    }\n        /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleStyleFieldBlur = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.props.dispatch(saveTab(tabs[tabIndex]))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleStyleFieldChange = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.setState({tabs})\n        }\n    }\n    /**\n     * Handler Switch Change\n     * @param {Html | Object} e \n     * @param {string} fieldName \n     * @param {number} tabIndex \n     */\n    handleSwitchChange(e, fieldName, tabIndex){\n       // e.preventDefault();\n        let {tabs} = this.state\n        let value = false;\n        if(e.target.checked){\n            value = true\n        }\n        let checkedVal = value ? 1 : 0\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = value;\n            this.setState({tabs},()=>{\n                this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:checkedVal}))\n            });\n        }\n    }\n\n    /**\n     * \n     * @param {Object} tabData Tab Data\n     * @param {number} sectIndex Index of the section\n     * @param {*} tabIndex Index of the section\n     */\n    actionButtons(tabData, sectIndex, tabIndex, parentTabData) {\n        return (<React.Fragment>\n            {!parentTabData && <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openTabSelectionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Add Subtab\">\n                    <i className=\"fa fa-folder-open clr-bl\"></i> Add Sub-Tab\n                </button>\n            </li>}\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openSetTabPositionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Set Tab Position\">\n                    <i className=\"fa fa-image clr-bl\"></i> Tab Image\n                </button>\n            </li>\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.deleteTabFromsection(parseInt(tabIndex), parseInt(sectIndex),parentTabData) }} title=\"Delete\">\n                    <i className=\"fa fa-trash-alt clr-org\"></i> Remove\n                </button>\n            </li>\n        </React.Fragment>\n        )\n    }\n    /**\n     * tab Selection Popup\n     */\n    tabSelectionPopup() {\n        return (<div className=\"promize-modal-cover-tab-selection\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Select Sub-Tabs\n                    </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-options\">\n                        <Search />\n                        <div className=\"promize-dragable-container\">\n                            {(this.props.attributes.response.data != undefined) &&\n                                <CheckBox {...this.props}\n                                    currentComponent={this}\n                                    dataList={this.props.attributes.response.data}\n                                    fieldName={'TabList'}\n                                    value={this.state.selectedSubTabs}\n                                    onChangeHandler={this.selectedSubtab}\n                                    labelName={\" \"}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.closeTabSelectionPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.addSubTabToTab(e) }}>Submit</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    setCurrentTab(currnetTabId){\n        this.setState({currnetTabId})\n    }\n    /**\n     * \n     * @param {Object} tabData Tab Data object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of Tab\n     */\n    addSelectedtab(tabData, sectIndex, tabIndex) {\n        return <Tabs key={tabIndex} {...this.props} onDrop={this.onDrop} tabData={tabData} sectIndex={sectIndex} tabIndex={tabIndex} state={this.state} actionButtons={this.actionButtons} openTab={this.openTab} deleteAttributeFromTab={this.deleteAttributeFromTab} onChangeHandler={this.onChangeHandler} handleFieldBlur={this.handleFieldBlur} handleFieldChange={this.handleFieldChange} handleStyleFieldChange={this.handleStyleFieldChange} handleStyleFieldBlur={this.handleStyleFieldBlur} handleSwitchChange={this.handleSwitchChange} setCurrentTab={this.setCurrentTab} displayNoData={this.displayNoData} openSetOptionPositionPopup={this.openSetOptionPositionPopup} openSetBoundaryPopup={this.openSetBoundaryPopup} selectedTabsList={this.selectedTabsList} tabThumbnailImages = {this.tabThumbnailImages} />\n    }\n    /**\n     * Select Tab \n     * @param {Object} tabData Tab data Object\n     * @param {number} sectIndex Index Section\n     * @param {*} tabIndex Index of tab\n     * @param {*} subTabIndex Index of subtab\n     */\n    selectedTabsList(tabData, sectIndex, tabIndex, subTabIndex) {\n        return <div key={subTabIndex} className=\"promize-dragable-tab-container mr-10\" >\n            <div className=\"promize-widget mb-10\">\n                <div className=\"promize-widget-header\">\n                    <h3 className=\"promize-widget-title\">\n                        {tabData.attribute_name}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    }\n    editSection = (id,keyData) =>{\n        let sectionX = this.sectionRefs[keyData].getBoundingClientRect().x || 0\n        let sectionWrapperX = this.refs[\"sectionWrapper\"].getBoundingClientRect().x || 0\n        let sectionEdit = this.state.sections[id]\n        let x = sectionX - sectionWrapperX \n        this.setState({editSection:{show:true,data:{section_id:id,section:sectionEdit,x}}})\n    }\n    sectionEdit = e => {\n        const editSection = this.state.editSection\n        const section = editSection.data.section\n        editSection.data.section = {...section,\n            section_name: e.target.value || \"\"\n        }\n        this.setState({editSection:{...editSection}})\n    }\n    saveSectionEdit = (e,editSection) => {\n        toastr.success(\"Section Name Updated\");\n        this.props.dispatch(saveSection({\n            promize_section_id:editSection.data.section.promize_section_id, \n            section_name:editSection.data.section.section_name\n        }))\n        this.setState({editSection:{show:false}})\n    }\n    sectionDelete = (e,editSection) => {\n        let popup = {};\n        popup.title = \"Remove Section\";\n        popup.content = 'Do you want to remove this section?';\n        popup.submit = () => {\n            this.sectionDeletefn(e,editSection)\n        }\n        this.setState({popup})\n    }\n    sectionDeletefn = (e,editSection) => {\n        const {sections} = this.state;\n        let sectionIndex = editSection.data.section.promize_section_id\n        let obj = {\n            ids : [sectionIndex],\n            modelName:\"promize_section\",\n            idKey:\"promize_section_id\",\n        }\n        delete sections[sectionIndex]\n        this.props.dispatch(deleteRecord(obj))\n        let activeSectionId = Object.keys(sections)[0]\n        this.setState({sections,activeSectionId,editSection:{show:false}});\n    }\n    /**\n     * Add section area\n     */\n    addSectionArea() {\n        const {sections,tabs,editSection} = this.state;\n        let {activeSectionId} = this.state;\n        \n        let tabsArray = []\n        if(tabs){\n            tabsArray = Object.entries(tabs).sort(function(a, b) {\n                return a[1].sort_id - b[1].sort_id;\n             })\n        }\n        let sectionRows,activeSection;\n        if(!activeSectionId && sections){\n            activeSectionId = Object.keys(sections)[0]\n        }\n        activeSection = sections[activeSectionId]\n        if (Object.keys(sections).length > 0) {\n            sectionRows = <React.Fragment>\n                <div className=\"promize-prdt-section-container mb-15\" ref=\"sectionContainer\">\n                    <ul className=\"promize-prdt-section-list\" style={{width:(this.state.sectionWrapperWidth?this.state.sectionWrapperWidth+\"px\":\"100%\")}} ref=\"sectionWrapper\">\n                        {Object.keys(sections).map((keyData, sectIndex) => {\n                            let data = sections[keyData];\n                            return <li className={keyData == activeSection.promize_section_id && \"active\"} ref={ref => this.setRef(ref,keyData)}>\n                                <div className=\"promize-section-name\" onClick={(e)=>{e.preventDefault();this.setState({activeSectionId:keyData})}}>\n                                    <span className=\"edit-icon\" onClick={e => this.editSection(keyData,keyData)}><i className=\"fa fa-pencil-alt\"></i></span>\n                                    <span>{data.section_name}</span>\n                                    <span className=\"promize-section-status active\"></span>\n                                </div>\n                            </li>                      \n                        })}\n                    </ul>\n                    <div className=\"pormize-abs-rght\" ref=\"sectionAddBtn\">\n                        <button className=\"btn btn-links\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                    </div>\n                    {editSection.show && <div className=\"promize-card promize-card-edit\" style={{left:editSection.data.x+\"px\"}}>\n                    <div className=\"promize-card-body\">\n                            <Input\n                                form={this.section}\n                                fieldName={'section_name'}\n                                value={editSection.data.section.section_name}\n                                labelName={\"Section Name\"}\n                                validation={false}\n                                onChange={this.sectionEdit}\n                            />\n                            <div className=\"df df-end\">\n                                {Object.keys(sections).length > 1 && <button className=\"btn btn-promize-secondary\" onClick={e => this.sectionDelete(e,editSection)}><i className=\"fa fa-trash\"></i> Remove</button>}\n                                <button className=\"btn btn-promize-primary\" onClick={e => this.saveSectionEdit(e,editSection)}>Save</button>\n                            </div>\n                            \n                    </div>\n                </div>}\n                </div>\n                {activeSection &&\n                    <div className=\"promize-dragable-container \">\n                        {tabsArray && tabsArray.length > 0 &&\n                            tabsArray.map((tabKey, tabIndex) => {\n                            if(tabKey[1].promize_section_id == activeSection.promize_section_id){\n                                return this.addSelectedtab(tabKey[1], activeSection.promize_section_id, tabKey[0])\n                            }\n                        })}\n                    \n                        <div className=\"text-right\">\n                            <button onClick={(e)=>this.createTab(e,activeSection.promize_section_id)} className=\"btn btn-promize-primary\">Add Tab</button>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        } else {\n            sectionRows = <React.Fragment>\n                <div>\n                    <button className=\"btn btn-rnd\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                </div>\n                {this.displayNoData(\"No Sections available\")}\n            </React.Fragment>\n        }\n        return sectionRows;\n    }\n    displayNoData(message) {\n        return <div className=\"promize-no-data\">\n            <img src={noData} />\n            <p className=\"mt-10\">{message}</p>\n        </div>\n    }\n    attributeIcon(type){\n        let icon = 'fa fa-grin-hearts'\n        if(type == 'text'){\n            icon = 'fa fa-font'\n        }else if(type == 'image'){\n            icon = 'fa fa-images'\n        }else if(type == 'option'){\n            icon = 'fa fa-cube'\n        }\n        return <i className={icon}></i>\n    }\n    displayAttributeList() {\n        const {sections,searchText} = this.state;\n        let attributeData = this.props.attributes.response.data\n        if(searchText){\n            attributeData = attributeData.filter((attribute)=>{\n                let name = attribute.attribute_name.toLowerCase()\n                return name.indexOf(searchText.toLowerCase()) !== -1\n            })\n        }\n        return (\n            <div className=\"promize-card\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Attributes List</span>\n                        </h3>\n                        <p class=\"promize-title-subtitle\">Drag and drop attributes to tabs</p>\n                    </div>\n                    <div className=\"promize-sm-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <Link to={\"/attributes/add/\"} className=\"btn btn-links\"><i className=\"fa fa-plus\"></i> Add New</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-card-body\">\n                    <div className=\"promize-options\">\n                        <Search value={searchText} onChange={(e)=>{e.preventDefault();this.setState({searchText:(e.target.value||'')})}}/>\n                        <div className=\"promize-dragable-container mt-15\">\n                            <ul className=\"promize-dragable-list\">\n                                {( attributeData != undefined) &&\n                                    attributeData.map((data, index) => {\n                                        return <li className=\"mb-10\" key={index} draggable onDragStart={e => this.onDragStart(e, data, false)}>\n                                            <div className={\"dragable-items df ind\" + index}>\n                                                <div className=\"option-action\">\n                                                    <button className=\"option-btn\">\n                                                        <i className=\"fa fa-bars\"></i>\n                                                    </button>\n                                                </div>\n                                                <div className=\"option-name df-al-center pl-10 wd-100\">\n                                                    {this.attributeIcon(data.attribute_type)}{data.attribute_name}<Link to={\"/attributes/edit/\" + data.promize_attribute_id} ><i className=\"fa fa-eye\"></i></Link>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    })}\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-footer-actions\">\n                </div>\n            </div>\n        )\n    }\n    saveData(){\n        toastr.success(\"Records saved successfully\");\n        this.props.history.push('/products');\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-page-title-wrapper df-sp-btwn\">\n                <h3 className=\"promize-page-title\">{this.props.state.fields.promize_customizer_name}</h3>\n                <button className=\"btn btn-promize-primary\" onClick={(e) => { this.saveData() }}>Save</button>\n            </div>\n            <div className=\"promize-row df\">\n                <div className=\"wd-70 mr-15\">\n                    <div>{this.tabSelectionPopup()}</div>\n                        {this.state.setOptionPosition.show && <SetOptionPosition {...this.state} {...this.props} closePopup={this.closePopup} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                        {this.state.setTabPosition.show && <SetTabPosition   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabImages={this.updateTabImages}/>}\n                        {this.state.setBoundary.show && <SetBoundary   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                    <div> {this.addSectionArea()}</div>\n                </div>\n                <div className=\"wd-30 promize-sticky-20\">\n                    {this.displayAttributeList()}\n                </div>\n            </div>\n            {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup}/>}\n        </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        attributes: state.attributes,\n        section: state.section,\n        tab: state.tab,\n        subTab: state.subTab,\n        tabAttribute: state.tabAttribute,\n        tabAttributevalues: state.tabAttributevalues,\n        tabAttributevalueslist: state.tabAttributevalueslist,\n        tabThumbnailImage: state.tabThumbnailImage\n    };\n}\n\n\nexport default connect(mapStateToProps)(SectionForms);","import React, { Component } from 'react';\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Form from '../../utility/Form';\nimport Forms,{initialState,validation} from './Forms';\nimport { save,get,uploadBaseImage,saveSection } from '../../actions/products';\nimport SectionForms, { sectionvalidation } from './sectionForm'\nimport {app} from '../../config/app';\nimport {generateUnqId} from './../../utility/Utility'\nimport Switchtoggle from '../../components/form/switchtoggle';\n\nclass Edit extends Component {\n    /*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID.\n    *With an arrow function, we have to pass it explicitly,\n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\n   \n    constructor(props){\n        super(props);\n        this.isEdit = true;\n\n        const formValidation = validation(props);\n\n        this.product = Form.getInstance(\n                this,formValidation,\n                (fields) => {\n                    this.props.dispatch(save(fields))\n                },\n                //file upload\n                (views) => {\n                    this.props.dispatch(uploadBaseImage(views, 'base_image', 'imageUpload'))\n                },\n                {}\n            );\n\n        this.state = initialState(this.isEdit);\n        this.state.view = {}\n        this.saveView = this.saveView.bind(this)\n        this.state.viewList = [];\n        this.initialState = initialState(this.isEdit);\n        this.state.openSection = false;\n        this.state.sections = {\n            promize_customizer_id: '',\n            section_name: '',\n            sort_id: '',\n            \"status\": true,\n        }\n        this.state.productDetails = ''\n        let sectValidation = sectionvalidation(props)\n        this.section = Form.getInstance(\n            this, sectValidation,\n            () => {\n                this.props.dispatch(saveSection(this.state.sections))\n            },\n            {},\n            {}\n        );  \n        this.saveView = this.saveView.bind(this)\n        this.updateView = this.updateView.bind(this)\n        this.deleteView = this.deleteView.bind(this)\n    }\n    /* componentDidMount() is invoked immediately after a component is mounted.\n    * Initialization that requires DOM nodes should go here.\n    * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n   */\n    componentDidMount(){\n        if(this.props.match.params.id){\n            this.props.dispatch(get(this.props.match.params.id));\n        }\n    }\n    \n    /* componentWillReceiveProps() is invoked before a mounted component receives new props.\n    *  If you need to update the state in response to prop changes (for example, to reset it),\n    *  you may compare this.props and nextProps and perform state transitions using this.setState() in this method.\n    */\n    componentWillReceiveProps(newProps) {\n        if(!newProps.product.isFetching && !newProps.product.isError){\n            if(newProps.product.response.record && newProps.product.receiveType === 'editData'){\n                if(this.state.isEdit && this.props.match.params.id){\n                    this.setState({isEdit:false});\n                    let productDetails = newProps.product.response.record\n                    if(productDetails.model_image){\n                        productDetails.model_image = JSON.parse(productDetails.model_image)\n                    }\n                    let fields = _.pick(productDetails,['domain_id','modelName','promize_customizer_id','promize_customizer_name','status','model_image'])\n                    this.initialState = {fields:fields};\n                    this.setState({fields,productDetails});\n                }\n            }else if(newProps.product.receiveType === 'postData'){\n               // toastr.success(newProps.product.response.message);\n                let fields = this.state.fields;\n                const newObj = Object.assign({}, fields, {\n                    promize_customizer_id: newProps.product.response.records.promize_customizer_id\n                });\n                this.setState({ fields: newObj,openSection:true })\n            }\n        }\n   }\n   /**\n    * save the view data\n    * @param {object} view \n    */\n   saveView(view) {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        model_image.push({...view,\n            id: generateUnqId()\n        })\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n     /**\n     * \n     * @param {number} id \n     * @param {object} view \n     */\n    updateView(id,view){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        var index = _.findIndex(model_image, {id: id});\n        model_image.splice(index, 1, view);\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n    /**\n     * Delete the Model Image\n     * @param {Number} id \n     */\n    deleteView(id){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        _.remove(model_image,function(n) {\n            return n.id == id;\n        })\n        const newObj = {\n            ...fields,\n            model_image: model_image\n        }\n        this.setState({ fields: newObj})\n    }\n    render() {\n        const { product,section } = this.props;\n        let formProps = {\n            ...this.props,\n            \n        }\n        return <React.Fragment>\n        {!this.state.openSection && <div className=\"promize-card\">\n            <div className=\"promize-card-header\">\n                <div className=\"promize-card-title mb-10\">\n                    <h3>\n                        <span>Edit Product</span>\n                    </h3>\n                </div>\n                <div className=\"promize-card-action df-end\">\n                    <Switchtoggle {...this.state}\n                        labelName={'Status'}\n                        fieldName={'status'}\n                        dataName={'status'}\n                        id={1}\n                        value={this.state.fields.status}\n                        spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                        checkValue={{ first: true, second: false }}\n                        validation={false} \n                        form={this.section}\n                        />\n                </div>\n            </div>\n            <Forms {...this.props} currentComponent={this} saveView={this.saveView} updateView={this.updateView} deleteView={this.deleteView} form={this.product} product={product} state={this.state} reset={this.initialState} isEdit={false} />\n        </div>}\n        {this.state.openSection && <SectionForms {...this.props} currentComponent={this} form={this.section} section={section} state={this.state} isEdit={false} new={false} productDetails={this.state.productDetails}/>}\n    </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { product } = state;\n    return {\n        product\n    };\n}\n\nexport default connect(mapStateToProps)(Edit);\n","module.exports = __webpack_public_path__ + \"static/media/no-data.12573e6e.png\";"],"sourceRoot":""}