{"version":3,"sources":["components/form/Search.jsx","actions/products/index.jsx","containers/Products/Forms.jsx","components/productimize/FabricFunction.jsx","components/form/SetOptionPosition.jsx","components/form/SetTabPosition.jsx","components/form/SetBoundary.jsx","containers/Products/Attribute/Options.jsx","containers/Products/Attribute/Cliparts.jsx","containers/Products/Attribute/Image.jsx","containers/Products/Attribute/Text.jsx","components/form/inputMultple.jsx","containers/Products/subTab.jsx","containers/Products/tab.jsx","containers/Products/sectionForm.jsx","containers/Products/edit.jsx","assets/images/no-data.png"],"names":["Search","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","value","this","props","onChange","placeholder","name","Component","get","id","types","concat","PRODUCT","PENDING","FULFILLED","REJECTED","method","url","data","payload","receiveType","save","Object","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","modelName","idKey","promize_customizer_id","saveSection","promize_section_id","SECTION","saveTab","promize_tab_id","created_date","updated_date","TAB","updateBulkRecord","saveSubTab","promize_sub_tab_id","SUB_TAB","deleteRecord","saveTabAttribute","promize_tab_attribute_id","TAB_ATTRIBUTE","saveTabAttributeValues","promize_tab_attribute_values_id","TAB_ATTRIBUTE_VALUES","linkTabAttributeValues","TAB_ATTRIBUTE_VALUES_LIST","linkTabAttributeClipartValues","uploadBaseImage","file","typeName","formData","FormData","append","IMAGE_UPLOAD","requestBodyType","uploadTabImage","uploadTabThumbnailImage","TAB_THUMBNAIL_IMAGE","initialState","fields","domain_id","app","DOMAIN_ID","promize_customizer_name","status","model_image","overlay_image","overlay_position","inputErrors","isEdit","validation","Forms","_this","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closePopup","e","preventDefault","setState","popup","delete","deleteView","state","views","view_name","image_url","file_name","handleClickOutside","bind","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","$","show","hide","newObj","assign","updateView","saveView","hideAddViewPopup","toastr","error","target","imageUpload","response","handleUploadedImage","document","addEventListener","removeEventListener","event","classList","contains","removeClass","addClass","path","index","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","style","display","_components_form_input__WEBPACK_IMPORTED_MODULE_12__","fieldName","labelName","handleViewNameChange","_components_files_ImageUpload__WEBPACK_IMPORTED_MODULE_15__","dataName","imageType","header","onClick","handleUploadView","src","noImages","_this3","Fragment","onSubmit","form","handleProductSubmit","showAddViewPopup","length","displayNoImage","map","key","openImageOptions","title","handleEdit","APP_IMAGE_BASE_URL","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","_components_form_SubmitButton__WEBPACK_IMPORTED_MODULE_13__","text","product","addView","_components_design_Popup__WEBPACK_IMPORTED_MODULE_17__","submitButton","cancel","connect","FabricFunction","canvas","classCallCheck","_objects","_","find","SetOptionPosition","_controlPoints","possibleConstructorReturn","getPrototypeOf","position","left","top","width","height","scaleX","scaleY","angle","controlPoints","cornerSize","hasControls","borderColor","cornerColor","cornerStyle","transparentCorners","defineProperty","currentView","fabricFunction","getInstance","optionView","optionViewPosition","modelImage","tabAttributeValueData","setOptionPosition","option_images","JSON","parse","option_position","handleInputChange","assertThisInitialized","addBaseImage","addOptionImage","positionChangeCallback","_this$state","baseImage","fabric","Canvas","selection","controlsAboveOverlay","centeredScaling","allowTouchScrolling","on","productimizeType","animate","renderAll","setCanvas","modelId","image","ele","promize_images_id","setOptionImage","callBack","clear","Image","fromURL","baseImageObject","set","selectable","setHeight","setWidth","originX","originY","add","findByName","warning","uploadedImage","_this$state2","currnetModelImage","_optionViewPosition$c","uploadedImageObject","objectSpread","lockUniScaling","opacity","_this$state3","obj","_this$state4","boundReact","getBoundingRect","x","y","getScaledWidth","getScaledHeight","lockScaling","_this3$state","complete","trigger","_this$state5","object","parseInt","changeCanvasData","xpos","ypos","_this$state6","actualWidth","ratio","actualHeight","_this$state7","onComplete","setCoords","_this4","_this4$state","promize_images","optionData","changeView","_this$state8","updateTabAttributeValues","stringify","success","_this$state9","optionImageObj","remove","_this5","optionViewImageId","values","react_default","active","indexOf","_this6","_this7","_this8","form_input","inputType","disabled","js_default","maxValue","minValue","handleInputRangeChange","onChangeComplete","_this9","thumbnail","canvasControls","prevView","nextView","deleteButton","imageCollection","submit","SetTabPosition","tabData","setTabPosition","tabImages","tabImagesPosition","tab_images","tab_images_position","addTabImage","isFetching","isError","handleTabImage","setTabImage","_tabImagesPosition$cu","updateTabImages","tabImageObj","ImageUpload","imageForm","SetBoundary","overlay","clipRect","Rect","fill","addBoundary","rect","addOverlayImage","rectRed","imageWidth","imageHeight","hasRotatingPoint","clipPath","console","log","setBoundary","Options","toggle","promize_attribute_values","tab_attribute_values","tab_attribute_data_values","attribute_name","deleteAttributeFromTab","promize_attribute_id","tab_id","class","keys","promize_attribute_values_id","img_data","image_type","push","option_name","option_code","alt","option_sku","option_price","openSetOptionPositionPopup","Cliparts","clipartList","getAssociatedClipart","promize_attribute_clipart_values","promize_domain_clipart_category_id","split","dispatch","clipart","isEmpty","openSetBoundaryPopup","promize_attribute_clipart_values_id","clipart_images","promize_clipart_category_images","clipartImg","promize_product_clipart_image","noData","clipart_name","promize_attribute_image_values","promize_attribute_image_values_id","image_name","image_price","image_sku","image_format","max_upload_size","min_upload_size","Text","fontSizes","fonts","fontColors","getAllFontSizes","getAllFonts","getAllFontColors","fontsList","font_id","fontsizes","font_size_id","fontcolors","promize_font_color_id","promize_attribute_text_values","tab_text_attribute_values","promize_attribute_text_values_id","font_ids","font_size_ids","font_color_ids","default_font_family","font_name","font","default_font_size","font_size","default_color","font_color_name","InputMultple","message","classValidation","classNameCheck","htmlFor","step","inputStep","data-type","dataType","data-name","onBlur","blurEventListner","handleFieldsChange","data-validation-name","maxLength","rows","input","React","Subtab","highlight","onDragOver","ev","dataTransfer","dropEffect","onDragLeave","onDrop","sectIndex","tabIndex","_this$props","subTabIndex","parentTabData","tab_style","draggable","onDragStart","onSubTabDragStart","onSubTabDragOver","onSubTabDrop","tab_name","actionButtons","handleFieldBlur","handleFieldChange","SimpleSelect","onChangeHandler","productDetails","optionText","enableEmptyOptionText","default_view","tab_layer_no","switchtoggle","tab_required","spanLabel","first","second","checkValue","handleSwitchChange","is_default_tab","inputMultple","tab_description","setDate","setCurrentTab","tabThumbnailImages","tab_icon","radioButton","label","handleStyleFieldBlur","handleStyleFieldChange","tab_attribute","tabAttributeData","tab_attribute_data_image_values","tab_attribute_data_text_values","tab_attribute_data_clipart_values","attribute_type","Attribute_Options","default_option","Attribute_Cliparts","Attribute_Text","Attribute_Image","Tabs","getTabContent","Products_subTab","hightlight","subTabHide","displayTab","openTab","tabs","indexVal","sorted_sub_tabs","promize_sub_tabs","sort","b","sort_id","is_sub_tab","onTabDragStart","onTabDragOver","onTabDragEnter","onTabDrop","promize_tab_attributes","onAttributeDragStart","onAttributeDragOver","onAttributeDrop","subTabData","subTab","child_tab_id","sectionvalidation","section_name","SectionForms","setRef","ref","sectionRefs","content","deleteAttributeFromTabFn","deleteIndex","selectedTab","tab_attributes","tab_attr","ids","getAttribute","item","reorder","setData","effectAllowed","dropIndex","getData","attributes","addAttributeToTab","startIndex","othertabs","tabsObject","tabState","list","orderedTabs","reorderTabInSection","Obj","orderedAttributes","reorderAttributeInTab","reorderSubTabInTab","deleteTabFromsectionFn","parentTabId","filter","editSection","keyData","sectionX","getBoundingClientRect","sectionWrapperX","refs","sectionEdit","sections","section_id","section","saveSectionEdit","sectionDelete","sectionDeletefn","sectionIndex","activeSectionId","tab","image_color_settings","tab_thumbnail","selectedTabs","selectedSubTabs","currnetTabId","searchText","Form","tabImage","promize_sections","promize_tabs","tab_index","attribute","attr_index","promize_attribute","attributeData","promize_tab_attribute_values","tab_attr_value","promize_tab_text_attribute_values","promize_tab_text_attribute_values_id","promize_tab_image_attribute_values","tab_image_attribute_values","promize_tab_image_attribute_values_id","createTab","saveSectionToState","saveTabToState","saveTabAttributeToState","saveTabAttributeValuesList","getAllAttributes","new","_this$refs","sectionContainer","sectionAddBtn","sectionContainerBoundBox","sectionAddBtnBoundBox","sectionWrapperWidth","newProps","records","parent_tab_id","saveSubTabToState","tabAttribute","tabAttributevalueslist","tabAttributevalues","tabThumbnailImage","saveTabImage","sectionData","sectionsData","undefined","o","tabAttributeValues","tempObj","promize_tab_clipart_attribute_values_id","tabdata","subtabs","sub_tabs","selectedsub_tabs","includes","closeTabSelectionPopup","endIndex","result","Array","from","counter","_result$splice","splice","removed","slicedToArray","_result$splice3","_result$splice5","subTabs","checked","checkedVal","_this10","openTabSelectionPopup","openSetTabPositionPopup","deleteTabFromsection","_this11","CheckBox","currentComponent","dataList","selectedSubtab","addSubTabToTab","Products_tab","displayNoData","selectedTabsList","activeSection","_this12","tabsArray","entries","addSection","tabKey","addSelectedtab","icon","_this13","toLowerCase","react_router_dom","attributeIcon","history","_this14","saveData","form_SetOptionPosition","form_SetTabPosition","form_SetBoundary","addSectionArea","displayAttributeList","Popup","Edit","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","formValidation","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","view","viewList","openSection","sectValidation","match","params","record","pick","generateUnqId","findIndex","n","react__WEBPACK_IMPORTED_MODULE_7___default","_components_form_switchtoggle__WEBPACK_IMPORTED_MODULE_15__","_Forms__WEBPACK_IMPORTED_MODULE_11__","reset","_sectionForm__WEBPACK_IMPORTED_MODULE_13__","module","exports","__webpack_require__","p"],"mappings":"qJASMA,mLAEE,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAClBH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,MAAOC,KAAKC,MAAMF,OAAS,GAAIG,SAAUF,KAAKC,MAAMC,SAAUL,UAAU,uBAAuBM,YAAY,YAAYC,KAAK,cAC/IV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAJJQ,aAUNZ,0fCXR,SAASa,EAAIC,GAEhB,MAAO,CACHC,MAAO,IAAAC,OAAIC,IAAJ,KAAAD,OAAeE,KAAf,GAAAF,OAA6BC,IAA7B,KAAAD,OAAwCG,KAAxC,GAAAH,OAAwDC,IAAxD,KAAAD,OAAmEI,MAC1EC,OAHW,OAIXC,IAAK,oBACLC,KAAM,CACFT,MAEJU,QAAS,CAACC,YAAY,aAOvB,SAASC,EAAKH,GACjB,IAAIF,EAAS,OAMTC,EAAM,eAKV,OAVAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,qBACVC,MAAM,2BAGLC,wBACDV,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIC,IAAJ,KAAAD,OAAeE,KAAf,GAAAF,OAA6BC,IAA7B,KAAAD,OAAwCG,KAAxC,GAAAH,OAAwDC,IAAxD,KAAAD,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASO,EAAYT,GAM3B,IAAIF,EAAS,OACNC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,kBACVC,MAAM,wBAILG,qBACDZ,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIkB,KAAJ,KAAAlB,OAAeE,KAAf,GAAAF,OAA6BkB,KAA7B,KAAAlB,OAAwCG,KAAxC,GAAAH,OAAwDkB,KAAxD,KAAAlB,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASU,EAAQZ,GAMpB,IAAIF,EAAS,OACTC,EAAM,eAOV,OAbAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,cACVC,MAAM,oBAILM,iBACDf,EAAS,MACTC,EAAM,sBACCC,EAAKc,oBACLd,EAAKe,cAET,CACHvB,MAAO,IAAAC,OAAIuB,KAAJ,KAAAvB,OAAWE,KAAX,GAAAF,OAAyBuB,KAAzB,KAAAvB,OAAgCG,KAAhC,GAAAH,OAAgDuB,KAAhD,KAAAvB,OAAuDI,MAC9DC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASe,EAAiBjB,GAG7B,MAAO,CACHR,MAAO,IAAAC,OAAIuB,KAAJ,KAAAvB,OAAWE,KAAX,GAAAF,OAAyBuB,KAAzB,KAAAvB,OAAgCG,KAAhC,GAAAH,OAAgDuB,KAAhD,KAAAvB,OAAuDI,MAC9DC,OAJS,OAKTC,IAJM,mBAKNC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASgB,EAAWlB,GAMvB,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,kBACVC,MAAM,wBAILY,qBACDrB,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAI2B,KAAJ,KAAA3B,OAAeE,KAAf,GAAAF,OAA6B2B,KAA7B,KAAA3B,OAAwCG,KAAxC,GAAAH,OAAwD2B,KAAxD,KAAA3B,OAAmEI,MAC1EC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASmB,EAAarB,GACzB,MAAO,CACHR,MAAO,IAAAC,OAAIuB,KAAJ,KAAAvB,OAAWE,KAAX,GAAAF,OAAyBuB,KAAzB,KAAAvB,OAAgCG,KAAhC,GAAAH,OAAgDuB,KAAhD,KAAAvB,OAAuDI,MAC9DC,OAAQ,SACRC,IAAK,eACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAASoB,EAAiBtB,GAM7B,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,wBACVC,MAAM,8BAILgB,2BACDzB,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAI+B,KAAJ,KAAA/B,OAAqBE,KAArB,GAAAF,OAAmC+B,KAAnC,KAAA/B,OAAoDG,KAApD,GAAAH,OAAoE+B,KAApE,KAAA/B,OAAqFI,MAC5FC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAASuB,EAAuBzB,GAMnC,IAAIF,EAAS,OACTC,EAAM,eAKV,OAXAC,EAAII,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EADH,CAEAM,UAAU,+BACVC,MAAM,qCAILmB,kCACD5B,EAAS,MACTC,EAAM,gBAEH,CACHP,MAAO,IAAAC,OAAIkC,KAAJ,KAAAlC,OAA4BE,KAA5B,GAAAF,OAA0CkC,KAA1C,KAAAlC,OAAkEG,KAAlE,GAAAH,OAAkFkC,KAAlF,KAAAlC,OAA0GI,MACjHC,OAAQA,EACRC,IAAKA,EACLC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAyBvB,SAAS0B,EAAuB5B,GAGnC,MAAO,CACHR,MAAO,IAAAC,OAAIoC,KAAJ,KAAApC,OAAiCE,KAAjC,GAAAF,OAA+CoC,KAA/C,KAAApC,OAA4EG,KAA5E,GAAAH,OAA4FoC,KAA5F,KAAApC,OAAyHI,MAChIC,OAJS,OAKTC,IAJM,yBAKNC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAGvB,SAAS4B,EAA8B9B,GAG1C,MAAO,CACHR,MAAO,IAAAC,OAAIoC,KAAJ,KAAApC,OAAiCE,KAAjC,GAAAF,OAA+CoC,KAA/C,KAAApC,OAA4EG,KAA5E,GAAAH,OAA4FoC,KAA5F,KAAApC,OAAyHI,MAChIC,OAJS,OAKTC,IAJM,mBAKNC,KAAMA,EACNC,QAAS,CAACC,YAAY,aAIvB,SAAS6B,EAAgBC,EAAKC,EAAS7C,GAO7C,IAAM8C,EAAW,IAAIC,SAGlB,OAFAD,EAASE,OAAO,OAAOJ,GACvBE,EAASE,OAAO,OAAQH,GACjB,CACHzC,MAAO,IAAAC,OAAI4C,IAAJ,KAAA5C,OAAoBE,KAApB,GAAAF,OAAkC4C,IAAlC,KAAA5C,OAAkDG,KAAlD,GAAAH,OAAkE4C,IAAlE,KAAA5C,OAAkFI,MACzFC,OAAQ,OACRwC,gBAAgB,WAChBvC,IAAK,kBACLC,KAAMkC,EACNjC,QAAS,CAACC,YAAY,aAKvB,SAASqC,EAAeP,EAAMC,GACjC,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQH,GACjB,CACHzC,MAAO,IAAAC,OAAI4C,IAAJ,KAAA5C,OAAoBE,KAApB,GAAAF,OAAkC4C,IAAlC,KAAA5C,OAAkDG,KAAlD,GAAAH,OAAkE4C,IAAlE,KAAA5C,OAAkFI,MACzFC,OAAQ,OACRwC,gBAAiB,WACjBvC,IAAK,iBACLC,KAAMkC,EACNjC,QAAS,CAAEC,YAAa,aAIzB,SAASsC,EAAwBR,EAAMC,GAC1C,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQJ,GACxBE,EAASE,OAAO,OAAQH,GACjB,CACHzC,MAAO,IAAAC,OAAIgD,KAAJ,KAAAhD,OAA2BE,KAA3B,GAAAF,OAAyCgD,KAAzC,KAAAhD,OAAgEG,KAAhE,GAAAH,OAAgFgD,KAAhF,KAAAhD,OAAuGI,MAC9GC,OAAQ,OACRwC,gBAAiB,WACjBvC,IAAK,iBACLC,KAAMkC,EACNjC,QAAS,CAAEC,YAAa,qSCtPzB,SAASwC,IAiBZ,MAhBqB,CACjBC,OACA,CACIC,UAAaC,IAAIC,UACjBxC,UAAc,qBACdE,sBAAyB,GACzBuC,wBAA2B,GAC3BC,QAAU,EACVC,YAAe,GACfC,cAAkB,GAClBC,iBAAqB,IAEzBC,YAAa,GACbC,QAAQ,GAMT,IAAMC,EAAa,SAACrE,GAIvB,MAHc,CACV8D,wBAA2B,aAY7BQ,cAEF,SAAAA,EAAYtE,GAAO,IAAAuE,EAAA,OAAApD,OAAAqD,EAAA,EAAArD,CAAApB,KAAAuE,IACfC,EAAApD,OAAAsD,EAAA,EAAAtD,CAAApB,KAAAoB,OAAAuD,EAAA,EAAAvD,CAAAmD,GAAAK,KAAA5E,KAAMC,KAgJV4E,WAAa,SAACC,GACVA,GAAKA,EAAEC,iBACPP,EAAKQ,SAAS,CAAEC,OAAO,KAnJRT,EAqJnBU,OAAS,SAACJ,EAAG9D,GACT,IAAIiE,EAAQ,CACZA,MAAc,cACdA,QAAgB,mCAChBA,OAAe,WACXT,EAAKvE,MAAMkF,WAAWnE,EAAKT,MAE/BiE,EAAKQ,SAAS,CAAEC,WA1JhBT,EAAKY,MAAQ,CACTC,MAAO,CACHC,UAAa,GACbC,UAAa,GACbC,UAAa,KAGrBhB,EAAKiB,mBAAqBjB,EAAKiB,mBAAmBC,KAAxBtE,OAAAuE,EAAA,EAAAvE,CAAAoD,IATXA,gFAWFM,GACbA,EAAEC,iBACF/E,KAAKgF,SAAS,CAACK,MAAM,CACjBC,UAAa,GACbC,UAAa,GACbC,UAAa,KACd,WACCI,IAAE,wBAAwBC,kDAGjBf,GACbA,EAAEC,iBACFa,IAAE,wBAAwBE,OAC1B,IAAMT,EAAQrF,KAAKoF,MAAMC,MACnBU,EAAS3E,OAAO4E,OAAO,GAAIX,EAAO,CACpCC,UAAW,GACXC,UAAW,GACXC,UAAW,KAEfxF,KAAKgF,SAAS,CAAEK,MAAOU,6CAEVjB,GACbA,EAAEC,iBACF,IAAMM,EAAQrF,KAAKoF,MAAMC,MACrBA,EAAMC,WAAaD,EAAME,WACrBF,EAAM9E,GAGNP,KAAKC,MAAMgG,WAAWZ,EAAM9E,GAAG8E,GAF/BrF,KAAKC,MAAMiG,SAASb,GAIxBrF,KAAKmG,iBAAiBrB,IAEtBsB,IAAOC,MAAM,6EAGAvB,GACjBA,EAAEC,iBACF,IAAIpB,EAAS3D,KAAKoF,MAAMC,MAIxB1B,EAHevC,OAAO4E,OAAO,GAAIrC,EAAQ,CACrC2B,UAAWR,EAAEwB,OAAOvG,QAGxBC,KAAKgF,SAAS,CAAEK,MAAO1B,uCAEhB0B,GACPrF,KAAKgF,SAAS,CAACK,SAAO,WAClBO,IAAE,wBAAwBC,2DAGR5F,GAClBA,EAAMsG,YAAYC,WAAaxG,KAAKC,MAAMsG,YAAYC,UACtDxG,KAAKyG,oBAAoBxG,+CAI7ByG,SAASC,iBAAiB,YAAa3G,KAAKyF,mEAI5CiB,SAASE,oBAAoB,YAAa5G,KAAKyF,+DAGhCoB,GACVA,EAAMP,OAAOQ,UAAUC,SAAS,eACjCnB,IAAE,0BAA0BoB,YAAY,QACxCpB,IAAE,0BAA0BqB,SAAS,qDAIzBhH,GAChB,IAAMuG,EAAWvG,EAAMsG,YAAYC,SACnC,GAAIA,EAASxC,QAA8B,MAApBwC,EAASxC,OAAgB,CAC5C,IAAML,EAAS3D,KAAKoF,MAAMC,MACtBU,EAAS3E,OAAO4E,OAAO,GAAIrC,EAAQ,CACnC4B,UAAWiB,EAASxD,KAAKkE,OAE7BlH,KAAKgF,SAAS,CAAEK,MAAOU,8CAGdjB,EAAGqC,GAChBrC,EAAEC,iBACFa,IAAE,UAAYuB,GAAOH,YAAY,QACjCpB,IAAE,UAAYuB,GAAOF,SAAS,0CAGxB,IAAAG,EAAApH,KACN,OAAQqH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,sBAAsByH,MAAO,CAAEC,QAAW,SAC7DF,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,0BACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,wBACXwH,EAAA1H,EAAAC,cAAA,MAAIC,UAAU,eACVwH,EAAA1H,EAAAC,cAAA,8BAKRyH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,sBACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,4BACXwH,EAAA1H,EAAAC,cAAC4H,EAAA,EAADpG,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,YACX1H,MAAOC,KAAKoF,MAAMC,MAAMC,UACxBoC,UAAW,YACXxH,SAAU,SAAC4E,GAAQsC,EAAKO,qBAAqB7C,IAC7CR,YAAY,MAGpB+C,EAAA1H,EAAAC,cAACgI,EAAA,EAADxG,OAAA4E,OAAA,GAAiBhG,KAAKC,MAAtB,CACIyH,UAAW,aACXD,UAAW,aACXI,SAAU,aACVvD,YAAY,EACZwD,UAAW,aACXvC,UAAWvF,KAAKoF,MAAMC,MAAME,UAC5BwC,OAAQ,aACRhI,MAAOC,KAAKoF,MAAMC,MAAMG,cAGhC6B,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,kCACXwH,EAAA1H,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAQsC,EAAKjB,iBAAiBrB,KAAtF,UACAuC,EAAA1H,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAQsC,EAAKa,iBAAiBnD,KAApF,sDAOZ,OAAOuC,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,mBAClBwH,EAAA1H,EAAAC,cAAA,OAAKsI,IAAKC,MACVd,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,SAAb,wDAoBC,IAAAuI,EAAApI,KACL,OAAOqH,EAAA1H,EAAAC,cAAAyH,EAAA1H,EAAA0I,SAAA,KACPhB,EAAA1H,EAAAC,cAAA,QAAM0I,SAAUtI,KAAKC,MAAMsI,KAAKC,oBAAqB1H,OAAO,QACxDuG,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,qBACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,MACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,SACXwH,EAAA1H,EAAAC,cAAC4H,EAAA,EAADpG,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,0BACX1H,MAAOC,KAAKC,MAAMmF,MAAMzB,OAAOI,wBAC/B2D,UAAW,eACXpD,YAAY,OAIxB+C,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,gDACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,sBACXwH,EAAA1H,EAAAC,cAAA,UACIyH,EAAA1H,EAAAC,cAAA,uBAGRyH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,8BACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,aACXwH,EAAA1H,EAAAC,cAAA,UAAQC,UAAU,gBAAgBmI,QAAS,SAAClD,GAAQsD,EAAKK,iBAAiB3D,KAAMuC,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,eAA7F,gBAIZwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,gCACVG,KAAKC,MAAMmF,MAAMzB,OAAOM,aAA6D,GAA9CjE,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYyE,QAAe1I,KAAK2I,iBAC/F3I,KAAKC,MAAMmF,MAAMzB,OAAOM,aAAejE,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYyE,OAAS,GACjFrB,EAAA1H,EAAAC,cAAA,MAAIC,UAAU,uBACTG,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAY2E,IAAI,SAAC5H,EAAMmG,GAC5C,OAAOE,EAAA1H,EAAAC,cAAA,MAAIiJ,IAAK1B,EAAOtH,UAAU,eAC7BwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,8BACXwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,6BACXwH,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmB,EAAKsE,WACtC+B,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,4BACXwH,EAAA1H,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmI,QAAS,SAAClD,GAAD,OAAOsD,EAAKU,iBAAiBhE,EAAGqC,KAAQE,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,sBACtGwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAW,+BAAiCsH,GAC7CE,EAAA1H,EAAAC,cAAA,MAAIC,UAAU,gBACVwH,EAAA1H,EAAAC,cAAA,UAAIyH,EAAA1H,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,wBAAwBkJ,MAAM,OAAOf,QAAS,SAAAlD,GAAC,OAAIsD,EAAKY,WAAWhI,KAAOqG,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,qBAAvH,UACJwH,EAAA1H,EAAAC,cAAA,UAAIyH,EAAA1H,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,wBAAwBkJ,MAAM,SAASf,QAAS,SAAAlD,GAAC,OAAIsD,EAAKlD,OAAOJ,EAAG9D,KAAOqG,EAAA1H,EAAAC,cAAA,KAAGC,UAAU,oBAAxH,gBAKpBwH,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,wBACXwH,EAAA1H,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqBjI,EAAKuE,oBASxE8B,EAAA1H,EAAAC,cAAA,OAAKC,UAAU,0BACXwH,EAAA1H,EAAAC,cAACsJ,EAAA,EAAD,CAASC,GAAG,YAAYtJ,UAAU,6BAA6B,UAC/DwH,EAAA1H,EAAAC,cAACwJ,EAAA,EAAD,CAAcvJ,UAAU,0BAA0BwJ,KAAM,OAAQ7C,SAAUxG,KAAKC,MAAMqJ,WAExFtJ,KAAKuJ,WAETvJ,KAAKoF,MAAMH,OAASoC,EAAA1H,EAAAC,cAAC4J,EAAA,EAADpI,OAAA4E,OAAA,GAAWhG,KAAKoF,MAAMH,MAAtB,CAA6BwE,aAAa,SAASC,OAAQ1J,KAAK6E,sBA7NzExE,aAwOLsJ,gBANf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAIZoD,CAAyBpF,oPCjPzBqF,aA5BX,SAAAA,EAAYC,GAAQzI,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA4J,GAChB5J,KAAK6J,OAASA,+DATCA,GACf,OAAO,IAAID,EAAeC,sDAUpBA,GACN7J,KAAK6J,OAASA,qCAMPzJ,GAAK,IACPyJ,EAAU7J,KAAV6J,OACL,GAAGA,GAAUA,EAAOE,SACjB,OAAOC,IAAEC,KAAKJ,EAAOE,SAAU,CAAC,OAAQ3J,qCAOtCG,GAAG,IACHsJ,EAAU7J,KAAV6J,OACL,GAAGA,GAAUA,EAAOE,SACjB,OAAOC,IAAEC,KAAKJ,EAAOE,SAAU,CAAC,KAAMxJ,uCC6hBlC2J,sBAziBX,SAAAA,EAAYjK,GAAO,IAAAkK,EAAA3F,EAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAAkK,IACf1F,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAA8I,GAAAtF,KAAA5E,KAAMC,KACDmF,MAAQ,CACTkF,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEXlH,OAAQ,GACRmH,eAAaX,EAAA,CACTY,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANXhK,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,eAOI,GAPJ/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,UAQA,KARA/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,cASG,GATH/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,oBAUS,GAVTA,GAYbmB,YAAa,EACbzB,OAAQ,GACR0B,eAAgB3B,EAAe4B,YAAY,KAE/C,IAAIC,EAAa,GACbC,EAAqB,GACrBC,EAAanH,EAAKvE,MAAMmF,MAAMzB,OAAOM,YACrC2H,EAAwBpH,EAAKvE,MAAM4L,kBAAkB7K,KAAK4K,sBAhC/C,OAiCfD,EAAW/C,IAAI,SAAC5H,EAAMmG,GAClBsE,EAAWzK,EAAKT,IAAM,GACtBmL,EAAmB1K,EAAKT,IAAM,KAE9BqL,EAAsBE,eAA+D,iBAAvCF,EAAsBE,gBACpEL,EAAaM,KAAKC,MAAMJ,EAAsBE,gBAE9CF,EAAsBK,iBAAmE,iBAAzCL,EAAsBK,kBACtEP,EAAqBK,KAAKC,MAAMJ,EAAsBK,kBAG1DzH,EAAKY,MAAMqG,WAAaA,EACxBjH,EAAKY,MAAMsG,mBAAqBA,EAChClH,EAAK0H,kBAAoB1H,EAAK0H,kBAAkBxG,KAAvBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACzBA,EAAK4H,aAAe5H,EAAK4H,aAAa1G,KAAlBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACpBA,EAAK6H,eAAiB7H,EAAK6H,eAAe3G,KAApBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACtBA,EAAK8H,uBAAyB9H,EAAK8H,uBAAuB5G,KAA5BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAjDfA,mFAmDC,IAAA4C,EAAApH,KACZ2L,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YADzBsI,EAEsDvM,KAAKoF,MAArEkG,EAFUiB,EAEVjB,YAAaG,EAFHc,EAEGd,WAAYC,EAFfa,EAEeb,mBAAoBH,EAFnCgB,EAEmChB,eAC/CiB,EAAY3I,IAAIoF,mBAAqB0C,EAAWL,GAAa/F,UAC7DsE,EAAS,IAAI4C,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,IAErBR,EAAyBtM,KAAKsM,uBAClCzC,EAAOkD,GAAG,kBAAmB,SAAUjI,GAC/BA,EAAEwB,OAAO0G,kBAAiD,eAA7BlI,EAAEwB,OAAO0G,kBACtCV,EAAuBxH,EAAEwB,UAGjCuD,EAAOkD,GAAG,eAAgB,SAAUjI,GAC5BA,EAAEwB,OAAO0G,kBAAiD,eAA7BlI,EAAEwB,OAAO0G,mBACtClI,EAAEwB,OAAO2G,QAAQ,UAAW,EAAG,CAC3B/M,SAAU2J,EAAOqD,UAAUxH,KAAKmE,KAEpCyC,EAAuBxH,EAAEwB,WAGjCiF,EAAe4B,UAAUtD,GACzB7J,KAAKgF,SAAS,CACV6E,OAAQA,EACR0B,eAAgBA,GACjB,WACCnE,EAAKgF,aAAaI,EAAW,WACzB,IAAIY,EAAUzB,EAAWL,GAAa/K,GACtC,GAAIkL,EAAW2B,GAAU,CACrB,IACIC,EADgBjG,EAAKnH,MAAM4L,kBAAkB7K,KAAKA,KAAK8K,cACjC7B,KAAK,SAACqD,GAAU,OAAO7B,EAAW2B,IAAYE,EAAIC,oBACxEjD,EAAWoB,EAAmB0B,IAAY,GAC9ChG,EAAKoG,eAAe3J,IAAIoF,mBAAqBoE,EAAM9H,UAAW+E,6CAUjEkC,EAAWiB,GACpB,IAAI5D,EAAS7J,KAAKoF,MAAMyE,OACxBA,EAAO6D,QACPjB,SAAOkB,MAAMC,QAAQpB,EAAW,SAAUqB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClClE,EAAOmE,UAAUH,EAAgBnD,QACjCb,EAAOoE,SAASJ,EAAgBpD,OAChCoD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT5D,KAAMsD,EAAgBpD,MAAQ,EAC9BD,IAAKqD,EAAgBnD,OAAS,IAElCb,EAAOuE,IAAIP,GACXhE,EAAOqD,YACiB,oBAAbO,GACPA,6CAIGzM,GAEX,GADyBhB,KAAKoF,MAAxBmG,eACa8C,WAAW,eAC1BjI,IAAOkI,QAAQ,+CACZ,CACH,IAAIC,EAAgB1K,IAAIoF,mBAAqBjI,EAAKuE,UAD/CiJ,EAEoFxO,KAAKoF,MAAtFqG,EAFH+C,EAEG/C,WAAYC,EAFf8C,EAEe9C,mBAAoBJ,EAFnCkD,EAEmClD,YAAahB,EAFhDkE,EAEgDlE,SAAUQ,EAF1D0D,EAE0D1D,cAAejB,EAFzE2E,EAEyE3E,OAExE4E,EADazO,KAAKC,MAAMmF,MAAMzB,OAAOM,YACNqH,GACnCG,EAAWgD,EAAkBlO,IAAMS,EAAKuM,kBACxC7B,EAAmB+C,EAAkBlO,IAAM+J,EANxC,IAAAoE,EAOsBhD,EAAmB+C,EAAkBlO,IAAxDoK,EAPH+D,EAOG/D,OAAQC,EAPX8D,EAOW9D,OACd6B,SAAOkB,MAAMC,QAAQW,EAAe,SAAUI,GAC1CA,EAAoBb,IAApB1M,OAAAwN,EAAA,EAAAxN,CAAA,GACO0J,EADP,CAEIP,KAAMV,EAAOY,MAAQ,EACrBD,IAAKX,EAAOa,OAAS,EACrBC,SACAC,SACAoC,iBAAkB,cAClB5M,KAAM,cACN8N,QAAS,SACTC,QAAS,SACTU,gBAAgB,EAChBC,QAAS,KAEbjF,EAAOuE,IAAIO,GACX9E,EAAOqD,sDASJG,EAAO/C,GAAU,IAAAyE,EACI/O,KAAKoF,MAA/ByE,EADsBkF,EACtBlF,OAAQiB,EADciE,EACdjE,cACd2B,SAAOkB,MAAMC,QAAQP,EAAO,SAAUsB,GAClCA,EAAoBb,IAApB1M,OAAAwN,EAAA,EAAAxN,CAAA,GACO0J,EACAR,EAFP,CAGI0C,iBAAkB,cAClB5M,KAAM,cACN8N,QAAS,SACTC,QAAS,YAEbtE,EAAOuE,IAAIO,GACX9E,EAAOqD,6DAOQ8B,GAAK,IAAAC,EAC0BjP,KAAKoF,MAAjDzB,EADkBsL,EAClBtL,OAAQ+H,EADUuD,EACVvD,mBAAoBJ,EADV2D,EACU3D,YAC9BnE,EAAQnH,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYqH,GAAa/K,GAC7DmL,EAAmBvE,GAAnB/F,OAAAwN,EAAA,EAAAxN,CAAA,GACOsK,EAAmBvE,GAD1B,CAEIoD,KAAMyE,EAAIzE,KACVC,IAAKwE,EAAIxE,IACTG,OAAQqE,EAAIrE,OACZC,OAAQoE,EAAIpE,OACZC,MAAOmE,EAAInE,MACXJ,MAAOuE,EAAIvE,MACXC,OAAQsE,EAAItE,OACZmE,eAAgBG,EAAIH,iBAExB,IAAIK,EAAaF,EAAIG,kBACrBnP,KAAKgF,SAAS,CACVrB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GACAuC,EADD,CAEFyL,EAAGJ,EAAIzE,KAAQ2E,EAAWzE,MAAQ,EAClC4E,EAAGL,EAAIxE,IAAO0E,EAAWxE,OAAS,EAClCD,MAAOuE,EAAIM,iBACX5E,OAAQsE,EAAIO,kBACZ1E,MAAOmE,EAAInE,MACXF,OAAQqE,EAAIrE,OACZC,OAAQoE,EAAIpE,SACbc,6DAMG,IAAAtD,EAAApI,KACJ2D,EAAW3D,KAAKoF,MAAhBzB,OACN3D,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,EAAP,CAAe6L,aAAc7L,EAAO6L,eAAiB,WAAM,IAAAC,EACpCrH,EAAKhD,MAAxCyE,EADuE4F,EACvE5F,OAAQ0B,EAD+DkE,EAC/DlE,eAAgB5H,EAD+C8L,EAC/C9L,OACpB4H,EAAe8C,WAAW,eAChCP,IAAI,CAAEe,eAAgBlL,EAAO6L,cACjC3F,EAAOqD,6DASQ9M,EAAML,EAAO2P,GAChC,IAAIC,GAAU,EACVD,IACAC,GAAU,GAH4B,IAOtC9E,EAPsC+E,EAKT5P,KAAKoF,MAAhCmG,EALoCqE,EAKpCrE,eAAgB5H,EALoBiM,EAKpBjM,OAClBkM,EAAStE,EAAe8C,WAAW,eAE3B,SAARjO,IACAyK,EAAmB,KAAV9K,EAAgB+P,SAAS/P,GAAS,EAC3C4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFkH,MAAOA,IAEX7K,KAAK+P,iBAAiB,CAAElF,SAASgF,EAAQF,GACzC3P,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,gDAOnBkD,GAAO,IAGjBmJ,EAAMC,EAAMtF,EAAQC,EAAQH,EAAOC,EAAQG,EAH1BqF,EACYlQ,KAAKoF,MAAhCmG,EADe2E,EACf3E,eAAgB5H,EADDuM,EACCvM,OAClBkM,EAAStE,EAAe8C,WAAW,eAEvC,GAAwB,eAApBxH,EAAMP,OAAO/F,GAAqB,CAClCyP,EAA+B,KAAvBnJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFyL,EAAGY,IAEP,IAAIzF,EAAOyF,EAAQH,EAAOV,kBAAkB1E,MAAQ,EACpDzK,KAAK+P,iBAAiB,CAAExF,QAAQsF,QAC7B,GAAyB,eAApBhJ,EAAMP,OAAO/F,GAAsB,CAC3C0P,EAA+B,KAAvBpJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF0L,EAAGY,IAEP,IAAIzF,EAAMyF,EAAQJ,EAAOV,kBAAkBzE,OAAS,EACpD1K,KAAK+P,iBAAiB,CAAEvF,OAAOqF,QAC5B,GAAyB,UAApBhJ,EAAMP,OAAO/F,GAAiB,CACtC,IAAI4P,EAAcN,EAAOpF,MAEzBE,GADAF,EAAgC,KAAvB5D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,GACpDoQ,EACjBzF,EAAS/G,EAAO+G,OAChBE,EAASjH,EAAOiH,OAChB,IAAIwF,EAAQzF,EAAShH,EAAOgH,OACxBhH,EAAO6L,cACP9E,EAAS/G,EAAO+G,OAAS0F,EACzBxF,EAASjH,EAAOiH,OAASwF,GAE7BzM,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF8G,QACAC,SACAC,SACAC,WAEJ5K,KAAK+P,iBAAiB,CAAEpF,SAAQC,UAAUiF,QACvC,GAAyB,WAApBhJ,EAAMP,OAAO/F,GAAkB,CACvC,IAAI8P,EAAeR,EAAOnF,OAE1BE,GADAF,EAAiC,KAAvB7D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,GACpDsQ,EAClB5F,EAAQ9G,EAAO8G,MACfE,EAAShH,EAAOgH,OAChB,IAAIyF,EAAQxF,EAASjH,EAAOiH,OACxBjH,EAAO6L,cACP/E,EAAQ9G,EAAO8G,MAAQ2F,EACvBzF,EAAShH,EAAOgH,OAASyF,GAE7BzM,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF8G,QACAC,SACAC,SACAC,WAEJ5K,KAAK+P,iBAAiB,CAAEpF,SAAQC,UAAUiF,OACd,UAApBhJ,EAAMP,OAAO/F,KACrBsK,EAAgC,KAAvBhE,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACrE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFkH,MAAOA,IAEX7K,KAAK+P,iBAAiB,CAAElF,SAASgF,IAErC7P,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,8CAQhB3C,EAAM6O,EAAQF,GAAS,IAAAW,EACctQ,KAAKoF,MAAjDkG,EAD8BgF,EAC9BhF,YAAaI,EADiB4E,EACjB5E,mBAAoB7B,EADHyG,EACGzG,OACnC1C,EAAQnH,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYqH,GAAa/K,GAC7DmL,EAAmBvE,GAAnB/F,OAAAwN,EAAA,EAAAxN,CAAA,GACOsK,EAAmBvE,GACnBnG,GAEP6O,EAAO5C,QAAQjM,EAAM,CACjBd,SAAU2J,EAAOqD,UAAUxH,KAAKmE,GAChC0G,WAAY,WACJZ,GACA9F,EAAO8F,QAAQ,kBAAmB,CAAErJ,OAAQuJ,OAIxDA,EAAOW,+CAMArJ,GAAO,IAAAsJ,EAAAzQ,KACdA,KAAKgF,SAAS,CAAEsG,YAAanE,EAAOxD,OAAQ,IAAM,WAAM,IAAA+M,EACXD,EAAKrL,MAAxCqG,EAD8CiF,EAC9CjF,WAAYC,EADkCgF,EAClChF,mBACdC,EAAa8E,EAAKxQ,MAAMmF,MAAMzB,OAAOM,YACrCuI,EAAY3I,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,UAC3DkL,EAAKrE,aAAaI,EAAW,WACzB,IAAIY,EAAUzB,EAAWxE,GAAO5G,GAC5BuL,EAAgB2E,EAAKxQ,MAAM4L,kBAAkB7K,KAAKA,KAAK2P,eAAgBF,EAAKxQ,MAAM4L,kBAAkB7K,KAAKA,KAAK2P,eAAkBF,EAAKxQ,MAAM4L,kBAAkB7K,KAAK4P,WAAW9E,cACjL,GAAIL,EAAW2B,GAAU,CACtB,IAAIC,EAAQvB,EAAgBA,EAAc7B,KAAK,SAACqD,GAAU,OAAO7B,EAAW2B,IAAYE,EAAIC,oBAAuB,GAC9GjD,EAAWoB,EAAmB0B,IAAY,GAC9CqD,EAAKjD,eAAe3J,IAAIoF,mBAAqBoE,EAAM9H,UAAW+E,2CASnE,IACDgB,EAAgBtL,KAAKoF,MAArBkG,YACNA,GAA4B,EAC5BtL,KAAK6Q,WAAWvF,sCAKT,IACDA,EAAgBtL,KAAKoF,MAArBkG,YACNA,GAA4B,EAC5BtL,KAAK6Q,WAAWvF,kCAMbxG,GAAG,IAAAgM,EACmC9Q,KAAKoF,MAAxCqG,EADAqF,EACArF,WAAYC,EADZoF,EACYpF,mBAClB1L,KAAKC,MAAM8Q,yBAAyB,CAChCrO,gCAAiC1C,KAAKC,MAAM4L,kBAAkB7K,KAAK4K,sBAAsBlJ,gCACzFH,yBAA2BvC,KAAKC,MAAM4L,kBAAkB7K,KAAK4K,sBAAsBrJ,yBACnFuJ,cAAeC,KAAKiF,UAAUvF,GAC9BQ,gBAAiBF,KAAKiF,UAAUtF,KAEpCtF,IAAO6K,QAAQ,kCACfjR,KAAKC,MAAM4E,WAAWC,kCAEnBA,GACHA,EAAEC,iBADI,IAAAmM,EAEgFlR,KAAKoF,MAArFmG,EAFA2F,EAEA3F,eAAgBE,EAFhByF,EAEgBzF,WAAYC,EAF5BwF,EAE4BxF,mBAAoBJ,EAFhD4F,EAEgD5F,YAAazB,EAF7DqH,EAE6DrH,OAC/D8B,GAHEuF,EAEqEvN,OAC1D3D,KAAKC,MAAMmF,MAAMzB,OAAOM,aACrCkN,EAAiB5F,EAAe8C,WAAW,eAC/C,GAAI8C,EAAgB,CAChB,IAAI1C,EAAoB9C,EAAWL,GACnCG,EAAWgD,EAAkBlO,IAAM,GACnCmL,EAAmB+C,EAAkBlO,IAAM,GAC3CP,KAAKgF,SAAS,CAAEyG,aAAYC,qBAAoB/H,OAAQ,KACxDyC,IAAO6K,QAAQ,+BACfpH,EAAOuH,OAAOD,8CAMJ,IAAAE,EAAArR,KACRyL,EAAezL,KAAKoF,MAApBqG,WACF6F,EAAoBlQ,OAAOmQ,OAAO9F,GACtC,OAAO+F,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BAClB2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gCAAf,oBACA2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,6BAAf,uKAEJ2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gDACVG,KAAKC,MAAM4L,kBAAkB7K,KAAKA,KAAK2P,gBAAkB3Q,KAAKC,MAAM4L,kBAAkB7K,KAAKA,KAAK8K,cAAclD,IAAI,SAAC5H,EAAMmG,GACtH,IAAIsK,GAAgE,GAAtDH,EAAkBI,QAAQ1Q,EAAKuM,mBAC7C,OAAOiE,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,8BAAgC4R,EAAS,WAAa,IAAK5I,IAAK1B,EAAOa,QAAS,SAAClD,GAAQ2M,EAAS3M,EAAEC,iBAAmBsM,EAAKhF,eAAerL,KAC9JwQ,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqBjI,EAAKuE,sDAUpD,IAAAoM,EAAA3R,KACFsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACjB8L,EAAWjD,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,WACtB4R,EAAA7R,EAAAC,cAAA,UACK+L,EAAW/C,IAAI,SAAC5H,EAAMmG,GACnB,OAAOqK,EAAA7R,EAAAC,cAAA,MAAIiJ,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAI6M,EAAKd,WAAW1J,IAAQtH,UAAW,cAAgBsH,GAASmE,EAAc,eAAiB,KAC5HkG,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,YACrDiM,EAAA7R,EAAAC,cAAA,SAAI+L,EAAWxE,GAAO7B,wDAQ/B,IAAAsM,EAAA5R,KAGX,OAFyBA,KAAKoF,MAAxBmG,eAC8B8C,WAAW,eAEpCmD,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAD,OAAO8M,EAAK1M,OAAOJ,KAA1E,UAEJ,4CAKM,IAAA+M,EAAA7R,KACP2D,EAAW3D,KAAKoF,MAAhBzB,OACN,OAAO6N,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAOyL,GAAK,EACnB1H,UAAW,aACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAO0L,GAAK,EACnB3H,UAAW,aACXpD,YAAY,EACZ0N,UAAUrO,EACVoO,UAAU,SACV7R,SAAUF,KAAKkM,sBAGvBsF,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAO4D,EAAOkH,OAAS,EACvBnD,UAAW,QACXpD,YAAY,EACZ0N,UAAUrO,EACVoO,UAAU,SACV7R,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACqS,EAAAtS,EAAD,CACIuS,SAAU,IACVC,UAAW,IACXH,UAAUrO,EACV5D,MAAO4D,EAAOkH,OAAS,EACvB3K,SAAU,SAAAH,GAAK,OAAI8R,EAAKO,uBAAuB,QAASrS,IACxDsS,iBAAkB,SAAAtS,GAAK,OAAI8R,EAAKO,uBAAuB,QAASrS,GAAO,OAE/EyR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAO4D,EAAO8G,OAAS,EACvB/C,UAAW,QACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,SACX1H,MAAO4D,EAAO+G,QAAU,EACxBhD,UAAW,SACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gBAAe2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,kBAAoB8D,EAAO6L,YAAc,SAAW,IAAKxH,QAAS,SAAAlD,GAAC,OAAI+M,EAAKrC,gBAAegC,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oDAI5J,IAAAyS,EAAAtS,KACCsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mCAClB2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,eACV2R,EAAA7R,EAAAC,cAAA,iCAGR4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKuS,YACNf,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,UAAQW,GAAG,WACXiR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKwS,iBACLxS,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYyE,OAAS,GAC1C8I,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACImJ,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,+CAAiDyL,GAAe,EAAI,WAAa,IAAKtD,QAAS,SAAAlD,GAAOwG,GAAe,EAAIxG,EAAEC,iBAAmBuN,EAAKG,aAAcjB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBACjM2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,+CAAiDyL,GAAeK,EAAWjD,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOwG,GAAeK,EAAWjD,OAAS5D,EAAEC,iBAAmBuN,EAAKI,aAAclB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,0BAKrP2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBACVG,KAAK2S,iBAGb3S,KAAKC,MAAM4L,kBAAkB7K,KAAKA,MAAQhB,KAAK4S,mBAEpDpB,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kCACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAQwN,EAAKrS,MAAM4E,WAAWC,KAAtF,UACA0M,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAD,OAAOwN,EAAKO,OAAO/N,KAAxE,oBApiBYzE,sBCG1ByS,cACF,SAAAA,EAAY7S,GAAO,IAAAkK,EAAA3F,EAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA8S,IACftO,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAA0R,GAAAlO,KAAA5E,KAAMC,KACDmF,MAAQ,CACTkF,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEXlH,OAAQ,GACRmH,eAAaX,EAAA,CACTY,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANXhK,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,eAOI,GAPJ/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,UAQA,KARA/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,cASG,GATH/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,oBAUS,GAVTA,GAYbmB,YAAa,EACbzB,OAAQ,GACR0B,eAAgB3B,EAAe4B,YAAY,KAE/C,IAAIG,EAAanH,EAAKvE,MAAMmF,MAAMzB,OAAOM,YACrC8O,EAAUvO,EAAKvE,MAAM+S,eAAehS,KAAK+R,QACzCE,EAAY,GACZC,EAAoB,GAhCT,OAiCfvH,EAAW/C,IAAI,SAAC5H,EAAMmG,GAClB8L,EAAUjS,EAAKT,IAAM,GACrB2S,EAAkBlS,EAAKT,IAAM,KAE7BwS,EAAQI,aACRF,EAAYlH,KAAKC,MAAM+G,EAAQI,aAE/BJ,EAAQK,sBACRF,EAAoBnH,KAAKC,MAAM+G,EAAQK,sBAG3C5O,EAAKY,MAAM6N,UAAYA,EACvBzO,EAAKY,MAAM8N,kBAAoBA,EAC/B1O,EAAK0H,kBAAoB1H,EAAK0H,kBAAkBxG,KAAvBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACzBA,EAAK4H,aAAe5H,EAAK4H,aAAa1G,KAAlBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACpBA,EAAK6O,YAAc7O,EAAK6O,YAAY3N,KAAjBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACnBA,EAAK8H,uBAAyB9H,EAAK8H,uBAAuB5G,KAA5BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAjDfA,yFAmDOvE,GACjBA,EAAMsG,YAAY+M,YAAerT,EAAMsG,YAAYgN,SAAWvT,KAAKC,MAAMsG,YAAY+M,aAAerT,EAAMsG,YAAY+M,YACvHtT,KAAKwT,eAAevT,+CAGR,IAAAmH,EAAApH,KACZ2L,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YADzBsI,EAEoDvM,KAAKoF,MAAnEkG,EAFUiB,EAEVjB,YAAa2H,EAFH1G,EAEG0G,UAAWC,EAFd3G,EAEc2G,kBAAmB3H,EAFjCgB,EAEiChB,eAC7CiB,EAAY3I,IAAIoF,mBAAqB0C,EAAWL,GAAa/F,UAC7DsE,EAAS,IAAI4C,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,IAErBR,EAAyBtM,KAAKsM,uBAClCzC,EAAOkD,GAAG,kBAAmB,SAAUjI,GAC/BA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,kBACtCV,EAAuBxH,EAAEwB,UAGjCuD,EAAOkD,GAAG,eAAgB,SAAUjI,GAC5BA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,mBACtClI,EAAEwB,OAAO2G,QAAQ,UAAW,EAAG,CAC3B/M,SAAU2J,EAAOqD,UAAUxH,KAAKmE,KAEpCyC,EAAuBxH,EAAEwB,WAGjCiF,EAAe4B,UAAUtD,GACzB7J,KAAKgF,SAAS,CACV6E,OAAQA,EACR0B,eAAgBA,GACjB,WACCnE,EAAKgF,aAAaI,EAAW,WACzB,IAAIY,EAAUzB,EAAWL,GAAa/K,GACtC,GAAI0S,EAAU7F,GAAU,CACpB,IAAIC,EAAQ4F,EAAU7F,GAClB9C,EAAW4I,EAAkB9F,IAAY,GAC7ChG,EAAKqM,YAAY5P,IAAIoF,mBAAqBoE,EAAO/C,+CAKlDrK,GACPA,EAAMsG,aAAetG,EAAMsG,YAAYC,UACvCxG,KAAKqT,YAAYpT,EAAMsG,YAAYC,SAASxD,KAAKkE,2CAQ5CsF,EAAWiB,GACpB,IAAI5D,EAAS7J,KAAKoF,MAAMyE,OACxBA,EAAO6D,QACPjB,SAAOkB,MAAMC,QAAQpB,EAAW,SAAUqB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClClE,EAAOmE,UAAUH,EAAgBnD,QACjCb,EAAOoE,SAASJ,EAAgBpD,OAChCoD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT5D,KAAMsD,EAAgBpD,MAAQ,EAC9BD,IAAKqD,EAAgBnD,OAAS,IAElCb,EAAOuE,IAAIP,GACXhE,EAAOqD,YACiB,oBAAbO,GACPA,0CAIAJ,GAER,GADyBrN,KAAKoF,MAAxBmG,eACa8C,WAAW,YAC1BjI,IAAOkI,QAAQ,4CACZ,CACH,IAAIC,EAAgB1K,IAAIoF,mBAAqBoE,EAD1CmB,EAEkFxO,KAAKoF,MAApF6N,EAFHzE,EAEGyE,UAAWC,EAFd1E,EAEc0E,kBAAmB5H,EAFjCkD,EAEiClD,YAAahB,EAF9CkE,EAE8ClE,SAAUQ,EAFxD0D,EAEwD1D,cAAejB,EAFvE2E,EAEuE3E,OAEtE4E,EADazO,KAAKC,MAAMmF,MAAMzB,OAAOM,YACNqH,GACnC2H,EAAUxE,EAAkBlO,IAAM8M,EAClC6F,EAAkBzE,EAAkBlO,IAAM+J,EANvC,IAAAoJ,EAOsBR,EAAkBzE,EAAkBlO,IAAvDoK,EAPH+I,EAOG/I,OAAQC,EAPX8I,EAOW9I,OACd6B,SAAOkB,MAAMC,QAAQW,EAAe,SAAUI,GAC1CA,EAAoBb,IAApB1M,OAAAwN,EAAA,EAAAxN,CAAA,GACO0J,EADP,CAEIP,KAAMV,EAAOY,MAAQ,EACrBD,IAAKX,EAAOa,OAAS,EACrBC,SACAC,SACAoC,iBAAkB,WAClB5M,KAAM,WACN8N,QAAS,SACTC,QAAS,SACTU,gBAAgB,EAChBC,QAAS,KAEbjF,EAAOuE,IAAIO,GACX9E,EAAOqD,mDASPG,EAAO/C,GAAU,IAAAyE,EACO/O,KAAKoF,MAA/ByE,EADmBkF,EACnBlF,OAAQiB,EADWiE,EACXjE,cACd2B,SAAOkB,MAAMC,QAAQP,EAAO,SAAUsB,GAClCA,EAAoBb,IAApB1M,OAAAwN,EAAA,EAAAxN,CAAA,GACO0J,EACAR,EAFP,CAGI0C,iBAAkB,WAClB5M,KAAM,WACN8N,QAAS,SACTC,QAAS,YAEbtE,EAAOuE,IAAIO,GACX9E,EAAOqD,6DAOQ8B,GAAK,IAAAC,EACyBjP,KAAKoF,MAAhDzB,EADkBsL,EAClBtL,OAAQuP,EADUjE,EACViE,kBAAmB5H,EADT2D,EACS3D,YAC7BnE,EAAQnH,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYqH,GAAa/K,GAC7D2S,EAAkB/L,GAAlB/F,OAAAwN,EAAA,EAAAxN,CAAA,GACO8R,EAAkB/L,GADzB,CAEIoD,KAAMyE,EAAIzE,KACVC,IAAKwE,EAAIxE,IACTG,OAAQqE,EAAIrE,OACZC,OAAQoE,EAAIpE,OACZC,MAAOmE,EAAInE,MACXJ,MAAOuE,EAAIvE,MACXC,OAAQsE,EAAItE,OACZmE,eAAgBG,EAAIH,iBAExB,IAAIK,EAAaF,EAAIG,kBACrBnP,KAAKgF,SAAS,CACVrB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GACAuC,EADD,CAEFyL,EAAGJ,EAAIzE,KAAQ2E,EAAWzE,MAAQ,EAClC4E,EAAGL,EAAIxE,IAAO0E,EAAWxE,OAAS,EAClCD,MAAOuE,EAAIM,iBACX5E,OAAQsE,EAAIO,kBACZ1E,MAAOmE,EAAInE,MACXF,OAAQqE,EAAIrE,OACZC,OAAQoE,EAAIpE,SACbsI,4DAMG,IAAA9K,EAAApI,KACJ2D,EAAW3D,KAAKoF,MAAhBzB,OACN3D,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,EAAP,CAAe6L,aAAc7L,EAAO6L,eAAiB,WAAM,IAAAC,EACpCrH,EAAKhD,MAAxCyE,EADuE4F,EACvE5F,OAAQ0B,EAD+DkE,EAC/DlE,eAAgB5H,EAD+C8L,EAC/C9L,OACpB4H,EAAe8C,WAAW,YAChCP,IAAI,CAAEe,eAAgBlL,EAAO6L,cACjC3F,EAAOqD,6DASQ9M,EAAML,EAAO2P,GAChC,IAAIC,GAAU,EACVD,IACAC,GAAU,GAH4B,IAOtC9E,EAPsC+E,EAKT5P,KAAKoF,MAAhCmG,EALoCqE,EAKpCrE,eAAgB5H,EALoBiM,EAKpBjM,OAClBkM,EAAStE,EAAe8C,WAAW,YAE3B,SAARjO,IACAyK,EAAmB,KAAV9K,EAAgB+P,SAAS/P,GAAS,EAC3C4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFkH,MAAOA,IAEX7K,KAAK+P,iBAAiB,CAAElF,SAASgF,EAAQF,GACzC3P,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,gDAOnBkD,GAAO,IAGjBmJ,EAAMC,EAAMtF,EAAQC,EAAQH,EAAOC,EAAQG,EAH1BqF,EACYlQ,KAAKoF,MAAhCmG,EADe2E,EACf3E,eAAgB5H,EADDuM,EACCvM,OAClBkM,EAAStE,EAAe8C,WAAW,YAEvC,GAAwB,eAApBxH,EAAMP,OAAO/F,GAAqB,CAClCyP,EAA+B,KAAvBnJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFyL,EAAGY,IAEP,IAAIzF,EAAOyF,EAAQH,EAAOV,kBAAkB1E,MAAQ,EACpDzK,KAAK+P,iBAAiB,CAAExF,QAAQsF,QAC7B,GAAyB,eAApBhJ,EAAMP,OAAO/F,GAAsB,CAC3C0P,EAA+B,KAAvBpJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF0L,EAAGY,IAEP,IAAIzF,EAAMyF,EAAQJ,EAAOV,kBAAkBzE,OAAS,EACpD1K,KAAK+P,iBAAiB,CAAEvF,OAAOqF,QAC5B,GAAyB,UAApBhJ,EAAMP,OAAO/F,GAAiB,CACtC,IAAI4P,EAAcN,EAAOpF,MAEzBE,GADAF,EAAgC,KAAvB5D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,GACpDoQ,EACjBzF,EAAS/G,EAAO+G,OAChBE,EAASjH,EAAOiH,OAChB,IAAIwF,EAAQzF,EAAShH,EAAOgH,OACxBhH,EAAO6L,cACP9E,EAAS/G,EAAO+G,OAAS0F,EACzBxF,EAASjH,EAAOiH,OAASwF,GAE7BzM,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF8G,QACAC,SACAC,SACAC,WAEJ5K,KAAK+P,iBAAiB,CAAEpF,SAAQC,UAAUiF,QACvC,GAAyB,WAApBhJ,EAAMP,OAAO/F,GAAkB,CACvC,IAAI8P,EAAeR,EAAOnF,OAE1BE,GADAF,EAAiC,KAAvB7D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,GACpDsQ,EAClB5F,EAAQ9G,EAAO8G,MACfE,EAAShH,EAAOgH,OAChB,IAAIyF,EAAQxF,EAASjH,EAAOiH,OACxBjH,EAAO6L,cACP/E,EAAQ9G,EAAO8G,MAAQ2F,EACvBzF,EAAShH,EAAOgH,OAASyF,GAE7BzM,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF8G,QACAC,SACAC,SACAC,WAEJ5K,KAAK+P,iBAAiB,CAAEpF,SAAQC,UAAUiF,OACd,UAApBhJ,EAAMP,OAAO/F,KACrBsK,EAAgC,KAAvBhE,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACrE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFkH,MAAOA,IAEX7K,KAAK+P,iBAAiB,CAAElF,SAASgF,IAErC7P,KAAKgF,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,8CAQhB3C,EAAM6O,EAAQF,GAAS,IAAAW,EACatQ,KAAKoF,MAAhDkG,EAD8BgF,EAC9BhF,YAAa4H,EADiB5C,EACjB4C,kBAAmBrJ,EADFyG,EACEzG,OAClC1C,EAAQnH,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYqH,GAAa/K,GAC7D2S,EAAkB/L,GAAlB/F,OAAAwN,EAAA,EAAAxN,CAAA,GACO8R,EAAkB/L,GAClBnG,GAEP6O,EAAO5C,QAAQjM,EAAM,CACjBd,SAAU2J,EAAOqD,UAAUxH,KAAKmE,GAChC0G,WAAY,WACJZ,GACA9F,EAAO8F,QAAQ,kBAAmB,CAAErJ,OAAQuJ,OAIxDA,EAAOW,+CAMArJ,GAAO,IAAAsJ,EAAAzQ,KACdA,KAAKgF,SAAS,CAAEsG,YAAanE,EAAOxD,OAAQ,IAAM,WAAM,IAAA+M,EACbD,EAAKrL,MAAtC6N,EAD8CvC,EAC9CuC,UAAWC,EADmCxC,EACnCwC,kBACbvH,EAAa8E,EAAKxQ,MAAMmF,MAAMzB,OAAOM,YACrCuI,EAAY3I,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,UAC3DkL,EAAKrE,aAAaI,EAAW,WACzB,IAAIY,EAAUzB,EAAWxE,GAAO5G,GAChC,GAAI0S,EAAU7F,GAAU,CACpB,IAAIC,EAAQ4F,EAAU7F,GAClB9C,EAAW4I,EAAkB9F,IAAY,GAC7CqD,EAAKgD,YAAY5P,IAAIoF,mBAAqBoE,EAAO/C,2CAStD,IACDgB,EAAgBtL,KAAKoF,MAArBkG,YACNA,GAA4B,EAC5BtL,KAAK6Q,WAAWvF,sCAKT,IACDA,EAAgBtL,KAAKoF,MAArBkG,YACNA,GAA4B,EAC5BtL,KAAK6Q,WAAWvF,kCAMbxG,GAAG,IAAAgM,EACiC9Q,KAAKoF,MAAtC6N,EADAnC,EACAmC,UAAWC,EADXpC,EACWoC,kBACjBlT,KAAKC,MAAM0T,gBAAgB,CACvB9R,eAAgB7B,KAAKC,MAAM+S,eAAehS,KAAK+R,QAAQlR,eACvDsR,WAAYpH,KAAKiF,UAAUiC,GAC3BG,oBAAqBrH,KAAKiF,UAAUkC,KAExC9M,IAAO6K,QAAQ,+BACfjR,KAAKC,MAAM4E,WAAWC,kCAEnBA,GACHA,EAAEC,iBADI,IAAAmM,EAE8ElR,KAAKoF,MAAnFmG,EAFA2F,EAEA3F,eAAgB0H,EAFhB/B,EAEgB+B,UAAWC,EAF3BhC,EAE2BgC,kBAAmB5H,EAF9C4F,EAE8C5F,YAAazB,EAF3DqH,EAE2DrH,OAC7D8B,GAHEuF,EAEmEvN,OACxD3D,KAAKC,MAAMmF,MAAMzB,OAAOM,aACrC2P,EAAcrI,EAAe8C,WAAW,YAC5C,GAAIuF,EAAa,CACb,IAAInF,EAAoB9C,EAAWL,GACnC2H,EAAUxE,EAAkBlO,IAAM,GAClC2S,EAAkBzE,EAAkBlO,IAAM,GAC1CP,KAAKgF,SAAS,CAAEiO,YAAWC,oBAAmBvP,OAAQ,KACtDyC,IAAO6K,QAAQ,4BACfpH,EAAOuH,OAAOwC,wCAMV,IAAAvC,EAAArR,KACFsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACjB8L,EAAWjD,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,WACtB4R,EAAA7R,EAAAC,cAAA,UACK+L,EAAW/C,IAAI,SAAC5H,EAAMmG,GACnB,OAAOqK,EAAA7R,EAAAC,cAAA,MAAIiJ,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAIuM,EAAKR,WAAW1J,IAAQtH,UAAW,cAAgBsH,GAASmE,EAAc,eAAiB,KAC5HkG,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,YACrDiM,EAAA7R,EAAAC,cAAA,SAAI+L,EAAWxE,GAAO7B,wDAQ/B,IAAAqM,EAAA3R,KAGX,GAFyBA,KAAKoF,MAAxBmG,eAC8B8C,WAAW,YAE3C,OAAOmD,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAD,OAAO6M,EAAKzM,OAAOJ,KAA1E,mDAME,IAAA8M,EAAA5R,KACP2D,EAAW3D,KAAKoF,MAAhBzB,OACN,OAAO6N,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAOyL,GAAK,EACnB1H,UAAW,aACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAO0L,GAAK,EACnB3H,UAAW,aACXpD,YAAY,EACZ0N,UAAUrO,EACVoO,UAAU,SACV7R,SAAUF,KAAKkM,sBAGvBsF,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAO4D,EAAOkH,OAAS,EACvBnD,UAAW,QACXpD,YAAY,EACZ0N,UAAUrO,EACVoO,UAAU,SACV7R,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACqS,EAAAtS,EAAD,CACIuS,SAAU,IACVC,UAAW,IACXH,UAAUrO,EACV5D,MAAO4D,EAAOkH,OAAS,EACvB3K,SAAU,SAAAH,GAAK,OAAI6R,EAAKQ,uBAAuB,QAASrS,IACxDsS,iBAAkB,SAAAtS,GAAK,OAAI6R,EAAKQ,uBAAuB,QAASrS,GAAO,OAE/EyR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAO4D,EAAO8G,OAAS,EACvB/C,UAAW,QACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,SACX1H,MAAO4D,EAAO+G,QAAU,EACxBhD,UAAW,SACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gBAAe2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,kBAAoB8D,EAAO6L,YAAc,SAAW,IAAKxH,QAAS,SAAAlD,GAAC,OAAI8M,EAAKpC,gBAAegC,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oDAI5J,IAAAgS,EAAA7R,KACCsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mCAClB2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,eACV2R,EAAA7R,EAAAC,cAAA,8BAGR4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKuS,YACNf,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,UAAQW,GAAG,WACXiR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKwS,iBACLxS,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYyE,OAAS,GAC1C8I,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACImJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,+CAAiDyL,GAAe,EAAI,WAAa,IAAKtD,QAAS,SAAAlD,GAAOwG,GAAe,EAAIxG,EAAEC,iBAAmB8M,EAAKY,aAAcjB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBAC9L2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,+CAAiDyL,GAAeK,EAAWjD,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOwG,GAAeK,EAAWjD,OAAS5D,EAAEC,iBAAmB8M,EAAKa,aAAclB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,0BAKlP2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBACVG,KAAK2S,iBAGdnB,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gBACX2R,EAAA7R,EAAAC,cAACiU,EAAA,EAADzS,OAAA4E,OAAA,GACQhG,KAAKC,MADb,CAEIsI,KAAMvI,KAAKC,MAAM6T,UACjBpM,UAAW,YACXD,UAAW,WACXI,SAAU,WACVvD,YAAY,EACZvE,MAAO,GACPwF,UAAW,UAM/BiM,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kCACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAQ+M,EAAK5R,MAAM4E,WAAWC,KAAtF,UACA0M,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAD,OAAO+M,EAAKgB,OAAO/N,KAAxE,oBAliBSzE,aA+iBdsJ,kBAPf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAKZoD,CAAyBmJ,GCpjBlCiB,cACF,SAAAA,EAAY9T,GAAO,IAAAkK,EAAA3F,EAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA+T,IACfvP,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAA2S,GAAAnP,KAAA5E,KAAMC,KA0EVqM,uBAAyB,SAAA0C,GAAO,IAAAzC,EAC0B/H,EAAKY,MAArDzB,EADsB4I,EACtB5I,OAAQ4H,EADcgB,EACdhB,eAAgBD,EADFiB,EACEjB,YAAazB,EADf0C,EACe1C,OAEvCmK,GADQxP,EAAKvE,MAAMmF,MAAMzB,OAAOM,YAAYqH,GAAa/K,GAC/CgL,EAAe8C,WAAW,YACxC,GAAI2F,EAAS,CACT,IAAIC,EAAW,IAAIxH,SAAOyH,KAAK,CAC3B3J,KAAMyE,EAAIzE,KAAQyJ,EAAQvJ,MAAQ,EAClCD,IAAKwE,EAAIxE,IAAOwJ,EAAQtJ,OAAS,EACjCD,MAAOuE,EAAIM,iBACX5E,OAAQsE,EAAIO,kBACZ4E,KAAM,KAEVH,EAAQlG,IAAI,WAAYmG,GACxBpK,EAAOqD,YACP1I,EAAKQ,SAAS,CACVrB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GACAuC,EADD,CAEFyL,EAAGJ,EAAIzE,KACP8E,EAAGL,EAAIxE,IACPC,MAAOuE,EAAIM,iBACX5E,OAAQsE,EAAIO,wBA/FT/K,EAkNnBqM,WAAa,SAAA1J,GACT3C,EAAKQ,SAAS,CAAEsG,YAAanE,EAAOxD,OAAQ,IAAM,WAAM,IAAA6K,EACXhK,EAAKY,MAC1CuG,GAFgD6C,EAC9C/C,WAD8C+C,EAClC9C,mBACDlH,EAAKvE,MAAMmF,MAAMzB,OAAOM,aACrCuI,EAAY3I,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,UAC3Df,EAAK4H,aAAaI,EAAW,WAAQhI,EAAK4P,YAAY5H,QAvN3ChI,EA0OnB0H,kBAAoB,SAAArF,GAAS,IAGrBmJ,EAAMC,EAAsBxF,EAAOC,EAHdqE,EACQvK,EAAKY,MAAhCmG,EADmBwD,EACnBxD,eAAgB5H,EADGoL,EACHpL,OAClBkM,EAAStE,EAAe8C,WAAW,gBAEvC,GAAwB,eAApBxH,EAAMP,OAAO/F,GAAqB,CAClCyP,EAA+B,KAAvBnJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEFyL,EAAGY,IAEP,IAAIzF,EAAOyF,EACXxL,EAAKuL,iBAAiB,CAAExF,QAAQsF,GAAO,QACpC,GAAyB,eAApBhJ,EAAMP,OAAO/F,GAAsB,CAC3C0P,EAA+B,KAAvBpJ,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACpE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF0L,EAAGY,IAEP,IAAIzF,EAAMyF,EACVzL,EAAKuL,iBAAiB,CAAEvF,OAAOqF,GAAO,OACV,UAApBhJ,EAAMP,OAAO/F,IACrBkK,EAAgC,KAAvB5D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACrE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF8G,MAAOA,IAEXjG,EAAKuL,iBAAiB,CAAEtF,SAASoF,GAAO,IACZ,WAApBhJ,EAAMP,OAAO/F,KACrBmK,EAAiC,KAAvB7D,EAAMP,OAAOvG,MAAgB+P,SAASjJ,EAAMP,OAAOvG,OAAS,EACtE4D,EAAMvC,OAAAwN,EAAA,EAAAxN,CAAA,GACCuC,EADD,CAEF+G,OAAQA,IAEZlG,EAAKuL,iBAAiB,CAAErF,UAAUmF,GAAO,IAE7CrL,EAAKQ,SAAS,CAAErB,OAAOvC,OAAAwN,EAAA,EAAAxN,CAAA,GAAMuC,MA3Q7Ba,EAAKY,MAAQ,CACTkF,SAAU,CACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,GAEXlH,OAAQ,GACRmH,eAAaX,EAAA,CACTY,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,GANXhK,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,eAOI,GAPJ/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,UAQA,KARA/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,cASG,GATH/I,OAAAiK,EAAA,EAAAjK,CAAA+I,EAAA,oBAUS,GAVTA,GAYbmB,YAAa,EACbzB,OAAQ,GACR0B,eAAgB3B,EAAe4B,YAAY,KAE9BhH,EAAKvE,MAAMmF,MAAMzB,OAAOM,YA7B1B,OAAAO,mFA+BC,IAAA4C,EAAApH,KACZ2L,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YADzBgL,EAEsBjP,KAAKoF,MAArCkG,EAFU2D,EAEV3D,YAAaC,EAFH0D,EAEG1D,eAEf1B,GADYhG,IAAIoF,mBAAqB0C,EAAWL,GAAa/F,UACpD,IAAIkH,SAAOC,OAAO,SAAU,CACrCC,WAAW,EACXC,sBAAsB,EACtBC,iBAAiB,EACjBC,qBAAqB,KAErBR,EAAyBtM,KAAKsM,uBAClCzC,EAAOkD,GAAG,gBAAiB,SAAUjI,GAC7BA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,kBACtCV,EAAuBxH,EAAEwB,UAE9ByG,GAAG,kBAAmB,SAAUjI,GAC3BA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,kBACtCV,EAAuBxH,EAAEwB,UAE9ByG,GAAG,iBAAkB,SAAUjI,GAC1BA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,kBACtCV,EAAuBxH,EAAEwB,UAE9ByG,GAAG,eAAgB,SAAUjI,GACxBA,EAAEwB,OAAO0G,kBAAiD,YAA7BlI,EAAEwB,OAAO0G,mBACtClI,EAAEwB,OAAO2G,QAAQ,UAAW,EAAG,CAC3B/M,SAAU2J,EAAOqD,UAAUxH,KAAKmE,KAEpCyC,EAAuBxH,EAAEwB,WAGjCiF,EAAe4B,UAAUtD,GACzB7J,KAAKgF,SAAS,CACV6E,OAAQA,EACR0B,eAAgBA,GACjB,WACC,IAAIiB,EAAY3I,IAAIoF,mBAAqB0C,EAAWL,GAAa/F,UACjE6B,EAAKgF,aAAaI,EAAW,WAAQpF,EAAKgN,YAAY5H,2CAgClDA,GACR,IAAM3C,EAAS7J,KAAKoF,MAAMyE,OACtBwK,EAAO,IAAI5H,SAAOyH,KAAK,CACvB3J,KAAM,EACNC,IAAK,EACLC,MAAOZ,EAAOY,MACdC,OAAQb,EAAOa,OACfyJ,KAAM,OACNpG,YAAY,EACZe,QAAS,KAEbjF,EAAOuE,IAAIiG,GACXrU,KAAKsU,gBAAgB9H,EAAW,WAC5B,IAAI+H,EAAU,IAAI9H,SAAOyH,KAAK,CAC1B3J,MAAOV,EAAOY,MAAQ,KAAO,EAC7BD,KAAMX,EAAOa,OAAS,KAAO,EAC7BD,MAAO,IACPC,OAAQ,IACRyJ,KAAM,GACNK,WAAY3K,EAAOY,MACnBgK,YAAa5K,EAAOa,OACpBK,WAAY,GACZC,aAAa,EACbC,YAAa,UACbC,YAAa,OACbC,YAAa,SACbC,oBAAoB,EACpBsJ,kBAAkB,EAClB1H,iBAAkB,WAClB5M,KAAM,iBAEVyJ,EAAOuE,IAAImG,GACX1K,EAAOqD,sDAGCV,EAAWiB,GACvB,IAAI5D,EAAS7J,KAAKoF,MAAMyE,OACxB4C,SAAOkB,MAAMC,QAAQpB,EAAW,SAAUqB,GACtC,IAAIoG,EAAW,IAAIxH,SAAOyH,KAAK,CAC3B3J,MAAO,GACPC,KAAM,GACNC,MAAO,IACPC,OAAQ,IACRyJ,KAAM,KAEVtG,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT5D,KAAMsD,EAAgBpD,MAAQ,EAC9BD,IAAKqD,EAAgBnD,OAAS,EAC9BiK,SAAUV,EACVlG,YAAY,EACZ3N,KAAM,YAEVyJ,EAAOuE,IAAIP,GACXhE,EAAOqD,YACiB,oBAAbO,GACPA,2CASCjB,EAAWiB,GACpB,IAAI5D,EAAS7J,KAAKoF,MAAMyE,OACxBA,EAAO6D,QACPjB,SAAOkB,MAAMC,QAAQpB,EAAW,SAAUqB,GACtCA,EAAgBC,IAAI,CAAEC,YAAY,IAClClE,EAAOmE,UAAUH,EAAgBnD,QACjCb,EAAOoE,SAASJ,EAAgBpD,OAChCoD,EAAgBC,IAAI,CAChBI,QAAS,SACTC,QAAS,SACT5D,KAAMsD,EAAgBpD,MAAQ,EAC9BD,IAAKqD,EAAgBnD,OAAS,IAElCb,EAAOuE,IAAIP,GACXhE,EAAOqD,YACiB,oBAAbO,GACPA,0CAOA,IAAArF,EAAApI,KACFsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACjB8L,EAAWjD,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,WACtB4R,EAAA7R,EAAAC,cAAA,UACK+L,EAAW/C,IAAI,SAAC5H,EAAMmG,GACnB,OAAOqK,EAAA7R,EAAAC,cAAA,MAAIiJ,IAAK1B,EAAOa,QAAS,SAAAlD,GAAC,OAAIsD,EAAKyI,WAAW1J,IAAQtH,UAAW,cAAgBsH,GAASmE,EAAc,eAAiB,KAC5HkG,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqB0C,EAAWxE,GAAO5B,YACrDiM,EAAA7R,EAAAC,cAAA,SAAI+L,EAAWxE,GAAO7B,0DA0B7BtE,EAAM6O,EAAQF,GAAS,IAC/B9F,EAAW7J,KAAKoF,MAAhByE,OACLgG,EAAO/B,IAAI9M,GACX6I,EAAO8F,QAAQ,kBAAmB,CAAErJ,OAAQuJ,IAC5CA,EAAOW,qDA8CM,IACP7M,EAAW3D,KAAKoF,MAAhBzB,OACN,OAAO6N,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAOyL,GAAK,EACnB1H,UAAW,aACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,aACX1H,MAAO4D,EAAO0L,GAAK,EACnB3H,UAAW,aACXpD,YAAY,EACZ0N,UAAUrO,EACVoO,UAAU,SACV7R,SAAUF,KAAKkM,sBAGvBsF,EAAA7R,EAAAC,cAAA,YAGA4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAO4D,EAAO8G,OAAS,EACvB/C,UAAW,QACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,qBAEnBsF,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,SACX1H,MAAO4D,EAAO+G,QAAU,EACxBhD,UAAW,SACXpD,YAAY,EACZyN,UAAU,SACVC,UAAUrO,EACVzD,SAAUF,KAAKkM,8DAMhB,IAAAuE,EAAAzQ,KAGX,OAFyBA,KAAKoF,MAAxBmG,eAC8B8C,WAAW,eAEpCmD,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAD,OAAO2L,EAAKvL,OAAOJ,KAAxE,UAEJ,kCAMJA,GAEH8P,QAAQC,IAAI7U,KAAKC,MAAM6U,aAMvB1O,IAAO6K,QAAQ,gDACfjR,KAAKC,MAAM4E,WAAWC,oCAEjB,IAAAuM,EAAArR,KACCsL,EAAgBtL,KAAKoF,MAArBkG,YACFK,EAAa3L,KAAKC,MAAMmF,MAAMzB,OAAOM,YACzC,OAAOuN,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mCAClB2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,eACV2R,EAAA7R,EAAAC,cAAA,yCAGR4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACVG,KAAKuS,YACNf,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,UAAQW,GAAG,WACXiR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,8CACVG,KAAKwS,iBACLxS,KAAKC,MAAMmF,MAAMzB,OAAOM,YAAYyE,OAAS,GAC1C8I,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACImJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,+CAAiDyL,GAAe,EAAI,WAAa,IAAKtD,QAAS,SAAAlD,GAAOwG,GAAe,EAAIxG,EAAEC,iBAAmBsM,EAAKoB,aAAcjB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBAC9L2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,+CAAiDyL,GAAeK,EAAWjD,OAAS,EAAI,WAAa,IAAKV,QAAS,SAAAlD,GAAOwG,GAAeK,EAAWjD,OAAS5D,EAAEC,iBAAmBsM,EAAKqB,aAAclB,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,0BAKlP2R,EAAA7R,EAAAC,cAAA,WACKI,KAAK2S,kBAIlBnB,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kCACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAQuM,EAAKpR,MAAM4E,WAAWC,KAAtF,UACA0M,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAD,OAAOuM,EAAKwB,OAAO/N,KAAxE,oBA3XMzE,aAwYXsJ,kBAPf,SAAyBvE,GACrB,MAAO,CACHmB,YAAanB,EAAMmB,cAKZoD,CAAyBoK,mCCtTzBgB,cA9FX,SAAAA,EAAY9U,GAAO,IAAAuE,EAAA,OAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA+U,IACfvQ,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAA2T,GAAAnQ,KAAA5E,KAAMC,KACDmF,MAAQ,CACT4P,QAAQ,GAHGxQ,wEAMV,IAAA4C,EAAApH,KACDiV,EAA2BjV,KAAKC,MAAMgV,yBACtCC,EAAuBlV,KAAKC,MAAMiV,qBAAuBlV,KAAKC,MAAMiV,qBAAuBlV,KAAKC,MAAMkV,0BAC1G,OAAO3D,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACV2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,eAAiB2R,EAAA7R,EAAAC,cAAA,YAAM4R,EAAA7R,EAAAC,cAAA,SAAII,KAAKC,MAAMmV,mBAG3D5D,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACV2R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAckJ,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKnH,MAAMoV,uBAAuBvQ,EAAGsC,EAAKnH,MAAMqV,qBAAsBlO,EAAKnH,MAAMsV,UAAW/D,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oBAA1K,IAAiM2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,cAO7MhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKoF,MAAM4P,OAAS,GAAK,UAAWhN,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAEgQ,QAAS5N,EAAKhC,MAAM4P,WAAcxD,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGzJG,KAAKoF,MAAM4P,QAAUxD,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+BAAf,IAA8C2R,EAAA7R,EAAAC,cAAA,SAAOC,UAAU,4CAC7D2R,EAAA7R,EAAAC,cAAA,aACI4R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,kBACA4R,EAAA7R,EAAAC,cAAA,kBACA4R,EAAA7R,EAAAC,cAAA,mBACA4R,EAAA7R,EAAAC,cAAA,uBACA4R,EAAA7R,EAAAC,cAAA,iBACA4R,EAAA7R,EAAAC,cAAA,uBACA4R,EAAA7R,EAAAC,cAAA,uBAGR4R,EAAA7R,EAAAC,cAAA,aACIsV,GAAwB9T,OAAOqU,KAAKP,GAAsBxM,OAAS,GAAKtH,OAAOqU,KAAKP,GAAsBtM,IAAI,SAACC,EAAK1B,GAChH,IAAIyE,EAAwBsJ,EAAqBrM,GAC7C7H,EAAOiU,EAAyBhL,KAAK,SAAC+E,GAAU,OAAOA,EAAI0G,6BAA+B9J,EAAsB8J,8BASpH,OARA1U,EAAK8K,cAAgB,GACrB9K,EAAK2P,eAAe/H,IAAI,SAAC+M,EAAUxO,GACJ,yBAAvBwO,EAASC,YAET5U,EAAK8K,cAAc+J,KAAKF,KAIzBnE,EAAA7R,EAAAC,cAAA,MAAIiJ,IAAK1B,GACZqK,EAAA7R,EAAAC,cAAA,UAAKoB,EAAK8U,YAAc9U,EAAK8U,YAAc,KAC3CtE,EAAA7R,EAAAC,cAAA,UAAKoB,EAAK+U,YAAc/U,EAAK+U,YAAc,KAC3CvE,EAAA7R,EAAAC,cAAA,UAAI4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBAAqB2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,kBAChDmB,EAAK2P,eAAejI,OAAS,GAAM1H,EAAK2P,eAAe/H,IAAI,SAAC+M,EAAUxO,GACpE,MAA2B,yBAAvBwO,EAASC,WACF,GAEJpE,EAAA7R,EAAAC,cAAA,MAAIiJ,IAAK1B,GACXwO,EAASpQ,WAAaiM,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqB0M,EAASpQ,UAAW1F,UAAU,kBAAkBmW,IAAK,WAGpHhV,EAAK2P,eAAejI,OAAS,IAAM8I,EAAA7R,EAAAC,cAAA,UAAK,QAE/C4R,EAAA7R,EAAAC,cAAA,UAAI4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBAClBmB,EAAK2P,eAAe/H,IAAI,SAAC+M,EAAUxO,GAChC,GAA2B,yBAAvBwO,EAASC,WACT,OAAGD,EAASpQ,UAAoBiM,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqB0M,EAASpQ,UAAW1F,UAAU,qBAAqBmW,IAAK,MAEhHxE,EAAA7R,EAAAC,cAAA,WAAM,SAMzB4R,EAAA7R,EAAAC,cAAA,UAAKoB,EAAKiV,WAAajV,EAAKiV,WAAa,KACzCzE,EAAA7R,EAAAC,cAAA,UAAKoB,EAAKkV,aAAelV,EAAKkV,aAAe,KAC7C1E,EAAA7R,EAAAC,cAAA,UAEA4R,EAAA7R,EAAAC,cAAA,UAAQ4V,MAAM,cAAcxN,QAAS,SAAClD,GAAQsC,EAAKnH,MAAMkW,2BAA2BrR,EAAG,CAAE8G,wBAAuB5K,WAAWwQ,EAAA7R,EAAAC,cAAA,KAAG4V,MAAM,wBAA0BhE,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,mCApFxLnV,qBCChB+V,cACF,SAAAA,EAAYnW,GAAO,IAAAuE,EAAA,OAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAAoW,IACf5R,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAAgV,GAAAxR,KAAA5E,KAAMC,KACDmF,MAAQ,CACTiR,YAAa,GACbrB,QAAQ,GAEZxQ,EAAK8R,qBAAuB9R,EAAK8R,qBAAqB5Q,KAA1BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IANbA,oFASfxE,KAAKsW,oEAEY/V,GAAI,IAAA6G,EAAApH,KACrBA,KAAKC,MAAMsW,iCAAiC7N,OAAS,GAAK1I,KAAKC,MAAMsW,iCAAiC3N,IAAI,SAAC5H,EAAMmG,GACpGnG,EAAKwV,mCAAmCC,MAAM,KACpD7N,IAAI,SAACrI,EAAI4G,GACRC,EAAKnH,MAAMyW,SAASpW,YAAIC,0DAKVN,GACtB,IAAKA,EAAM0W,QAAQrD,aAAerT,EAAM0W,QAAQpD,QAAS,CACrD,IAAIoD,EAAU1W,EAAM0W,QAAQnQ,SAASxF,KAAMqV,EAAcrW,KAAKoF,MAAMiR,YACpEA,EAAYM,EAAQH,oCAAsCG,EAC1D3W,KAAKgF,SAAS,CAAEqR,YAAaA,sCAG5B,IAAAjO,EAAApI,KACDuW,EAAmCvW,KAAKC,MAAMsW,iCAC9CrB,EAAwBlV,KAAKC,MAAMiV,uBAA0BlL,IAAE4M,QAAQ5W,KAAKC,MAAMiV,sBAA0BlV,KAAKC,MAAMiV,qBAAuBlV,KAAKC,MAAMkV,0BACzJkB,EAAcrW,KAAKoF,MAAMiR,YAC7B,OAAO7E,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACV2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBAAwB2R,EAAA7R,EAAAC,cAAA,YAAM4R,EAAA7R,EAAAC,cAAA,SAAII,KAAKC,MAAMmV,mBAGlE5D,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACV2R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQsD,EAAKnI,MAAM4W,qBAAqB/R,EAAG,CAAEoQ,0BAA2BnM,MAAM,gBACpHyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,qBAAuB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,8BAG5ChE,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAckJ,MAAM,SAASf,QAAS,SAAClD,GAAQsD,EAAKnI,MAAMoV,uBAAuBvQ,EAAGsD,EAAKnI,MAAMqV,qBAAsBlN,EAAKnI,MAAMsV,UAAW/D,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oBAAsB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,cAO5MhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKoF,MAAM4P,OAAS,GAAK,UAAWhN,QAAS,SAAClD,GAAQsD,EAAKpD,SAAS,CAAEgQ,QAAS5M,EAAKhD,MAAM4P,WAAcxD,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGzJG,KAAKoF,MAAM4P,QAAUxD,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+BACjC2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gCACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,2BAENqV,GAAwB9T,OAAOqU,KAAKP,GAAsBxM,OAAS,GAAKtH,OAAOqU,KAAKP,GAAsBtM,IAAI,SAACC,EAAK1B,GAChH,IAAIyE,EAAwBsJ,EAAqBrM,GAGjD,OAFiB+C,EAAsBkL,oCAAsClL,EAAwB2K,EAAiCtM,KAAK,SAAC+E,GAAU,OAAOA,EAAI8H,qCAAuClL,EAAsB8J,+BACpMc,mCAAmCC,MAAM,KACnD7N,IAAI,SAACrI,EAAI4G,GACrB,IAAI4P,EAAiBV,EAAY9V,GACjC,OAAOwW,GAAkBA,EAAeC,gCAAgCpO,IAAI,SAAC5H,EAAMmG,GAC/E,IAAI8P,EAAajW,EAAKkW,8BACtB,OAAO1F,EAAA7R,EAAAC,cAAA,UACH4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACVoX,EAAazF,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKrE,IAAIoF,mBAAqBgO,IAAiBzF,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKiP,MAC5E3F,EAAA7R,EAAAC,cAAA,SAAIoB,EAAKoW,iCAzElC/W,aA6FRsJ,kBANf,SAAyBvE,GACrB,MAAO,CACHuR,QAASvR,EAAMuR,UAIRhN,CAAyByM,GCvCzBzI,cAxDX,SAAAA,EAAY1N,GAAO,IAAAuE,EAAA,OAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA2N,IACfnJ,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAAuM,GAAA/I,KAAA5E,KAAMC,KACDmF,MAAQ,CACT4P,QAAQ,GAHGxQ,wEAOV,IAAA4C,EAAApH,KACDqX,EAAiCrX,KAAKC,MAAMoX,+BAC5CnC,EAAwBlV,KAAKC,MAAMiV,uBAA0BlL,IAAE4M,QAAQ5W,KAAKC,MAAMiV,sBAA0BlV,KAAKC,MAAMiV,qBAAuBlV,KAAKC,MAAMkV,0BAC7J,OAAO3D,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACV2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,iBAAmB2R,EAAA7R,EAAAC,cAAA,YAAM4R,EAAA7R,EAAAC,cAAA,SAAII,KAAKC,MAAMmV,mBAG7D5D,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACV2R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQsC,EAAKnH,MAAM4W,qBAAqB/R,EAAG,KAAOiE,MAAM,gBAC9FyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,qBAAuB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,8BAG5ChE,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAckJ,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKnH,MAAMoV,uBAAuBvQ,EAAGsC,EAAKnH,MAAMqV,qBAAsBlO,EAAKnH,MAAMsV,UAAW/D,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oBAAsB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,cAO5MhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKoF,MAAM4P,OAAS,GAAK,UAAWhN,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAEgQ,QAAS5N,EAAKhC,MAAM4P,WAAcxD,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGzJG,KAAKoF,MAAM4P,QAAUxD,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+BAE7BqV,GAAwB9T,OAAOqU,KAAKP,GAAsBxM,OAAS,GAAKtH,OAAOqU,KAAKP,GAAsBtM,IAAI,SAACC,EAAK1B,GAChH,IAAIyE,EAAwBsJ,EAAqBrM,GAC7C+H,EAAahF,EAAsB0L,kCAAoC1L,EAAwByL,EAA+BpN,KAAK,SAAC+E,GAAU,OAAOA,EAAIsI,mCAAqC1L,EAAsB8J,8BACxN,OAAOlE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,6BAClB2R,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,cAAoB4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,YAAOgR,EAAW2G,aACpE/F,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,eAAqB4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,+BAA+B+Q,EAAW4G,YAAY5G,EAAW4G,YAAa,MACjJhG,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,aAAmB4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,+BAA+B+Q,EAAW6G,UAAY7G,EAAW6G,UAAY,MAC9IjG,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,gBAAsB4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,YAAOgR,EAAW8G,eACtElG,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,yBAA+B4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,YAAOgR,EAAW+G,kBAC/EnG,EAAA7R,EAAAC,cAAA,WAAK4R,EAAA7R,EAAAC,cAAA,YAAO,yBAA+B4R,EAAA7R,EAAAC,cAAA,YAAO,KAAW4R,EAAA7R,EAAAC,cAAA,YAAOgR,EAAWgH,8BAhDvFvX,wCCGdwX,cACF,SAAAA,EAAY5X,GAAO,IAAAuE,EAAA,OAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAA6X,IACfrT,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAAyW,GAAAjT,KAAA5E,KAAMC,KACDmF,MAAQ,CACT0S,UAAW,GACXC,MAAO,GACPC,WAAY,GACZhD,QAAQ,GANGxQ,oFAWfxE,KAAKC,MAAMyW,SAASuB,eACpBjY,KAAKC,MAAMyW,SAASwB,eACpBlY,KAAKC,MAAMyW,SAASyB,iEAGElY,GACtB,IAAKA,EAAM8X,MAAMzE,aAAerT,EAAM8X,MAAMxE,QAAS,CACjD,IAAIwE,EAAQ9X,EAAM8X,MAAMvR,SAASxF,KAAMoX,EAAY,GACnDL,EAAMnP,IAAI,SAAC5H,EAAMmG,GACbiR,EAAUpX,EAAKqX,SAAWrX,IAE9BhB,KAAKgF,SAAS,CAAE+S,MAAOK,IAE3B,IAAKnY,EAAMqY,UAAUhF,aAAerT,EAAMqY,UAAU/E,QAAS,CACzD,IAAI+E,EAAYrY,EAAMqY,UAAU9R,SAASxF,KAAMoX,EAAY,GAC3DE,EAAU1P,IAAI,SAAC5H,EAAMmG,GACjBiR,EAAUpX,EAAKuX,cAAgBvX,IAEnChB,KAAKgF,SAAS,CAAE8S,UAAWM,IAE/B,IAAKnY,EAAMuY,WAAWlF,aAAerT,EAAMuY,WAAWjF,QAAS,CAC3D,IAAIiF,EAAavY,EAAMuY,WAAWhS,SAASxF,KAAMoX,EAAY,GAC7DI,EAAW5P,IAAI,SAAC5H,EAAMmG,GAClBiR,EAAUpX,EAAKyX,uBAAyBzX,IAE5ChB,KAAKgF,SAAS,CAAEgT,WAAYI,sCAI3B,IAAAhR,EAAApH,KAAAuM,EACkCvM,KAAKoF,MAAtC2S,EADDxL,EACCwL,MAAOD,EADRvL,EACQuL,UAAWE,EADnBzL,EACmByL,WACpBU,EAAgC1Y,KAAKC,MAAMyY,8BAC3CxD,EAAwBlV,KAAKC,MAAMiV,uBAA0BlL,IAAE4M,QAAQ5W,KAAKC,MAAMiV,sBAA0BlV,KAAKC,MAAMiV,qBAAuBlV,KAAKC,MAAMkV,0BAC7J,OAAO3D,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACV2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,eAAiB2R,EAAA7R,EAAAC,cAAA,YAAM4R,EAAA7R,EAAAC,cAAA,SAAII,KAAKC,MAAMmV,mBAG3D5D,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACV2R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQsC,EAAKnH,MAAM4W,qBAAqB/R,EAAG,CAAEhF,KAAM,OAAQ6Y,0BAA2BvR,EAAKnH,MAAMyY,iCAAoC3P,MAAM,gBACjLyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,qBAAuB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,8BAG5ChE,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAckJ,MAAM,SAASf,QAAS,SAAClD,GAAQsC,EAAKnH,MAAMoV,uBAAuBvQ,EAAGsC,EAAKnH,MAAMqV,qBAAsBlO,EAAKnH,MAAMsV,UAAW/D,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oBAAsB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,cAO5MhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKoF,MAAM4P,OAAS,GAAK,UAAWhN,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAEgQ,QAAS5N,EAAKhC,MAAM4P,WAAcxD,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGzJG,KAAKoF,MAAM4P,QAAUxD,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+BACjC2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gCAEPqV,GAAwB9T,OAAOqU,KAAKP,GAAsBxM,OAAS,GAAKtH,OAAOqU,KAAKP,GAAsBtM,IAAI,SAACC,EAAK1B,GAChH,IAAIyE,EAAwBsJ,EAAqBrM,GAC7C+H,EAAahF,EAAsBgN,iCAAmChN,EAAwB8M,EAA8BzO,KAAK,SAAC+E,GAAU,OAAOA,EAAI4J,kCAAoChN,EAAsB8J,8BACjN2C,EAAUzH,EAAWiI,SAASpC,MAAM,KACpCqC,EAAgBlI,EAAWkI,cAAcrC,MAAM,KAC/CsC,EAAiBnI,EAAWmI,eAAetC,MAAM,KACrD,OAAQjF,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACJmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,MACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAOqU,KAAKsC,GAAOrP,OAAS,GAAKkI,GAAcY,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SAAQ2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,SAAS,gBAAmB2R,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,6BAA6BkY,EAAMnH,EAAWoI,qBAAqBC,YACnMzH,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,+BAA+B,SAC5C2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBAENkY,GAASM,EAAQzP,IAAI,SAACrI,EAAI4G,GACtB,IAAI+R,EAAOnB,EAAMxX,GACjB,OAAO2Y,GAAQ1H,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,6BAA6BqZ,EAAKD,eAK/EzH,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAOqU,KAAKqC,GAAWpP,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SAAQ2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,SAAS,qBAAwB2R,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,6BAA6BiY,EAAUlH,EAAWuI,mBAAmBC,YAChM5H,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,kCAAkC,cAC/C2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBAENiY,GAAagB,EAAclQ,IAAI,SAACrI,EAAI4G,GAChC,IAAI+R,EAAOpB,EAAUvX,GACrB,OAAO2Y,GAAQ1H,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,6BAA6BqZ,EAAKE,eAK/E5H,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACVuB,OAAOqU,KAAKuC,GAAYtP,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SAAQ2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,SAAS,sBAAyB2R,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,6BAA6BmY,EAAWpH,EAAWyI,eAAeC,kBAC/L9H,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,kCAAkC,eAC/C2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBAENmY,GAAce,EAAenQ,IAAI,SAACrI,EAAI4G,GAClC,IAAI+R,EAAOlB,EAAWzX,GACtB,OAAO2Y,GAAQ1H,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,6BAA6BqZ,EAAKI,mCAjHhGjZ,aAyIJsJ,kBARf,SAAyBvE,GACrB,MAAO,CACH2S,MAAO3S,EAAM2S,MACbO,UAAWlT,EAAMkT,UACjBE,WAAYpT,EAAMoT,aAIX7O,CAAyBkO,GCnGzB0B,2LAvCb,IAAMjV,EAAatE,KAAKC,MAAMsI,KAAKjE,WAAWtE,KAAKC,MAAMwH,WACnD+R,EAAUlV,EAAatE,KAAKC,MAAMmF,MAAMhB,YAAYpE,KAAKC,MAAMwH,WAAW+R,QAAU,GACpFC,EAAe,cAAAhZ,OAAiB6D,EAAa,cAAgB,GAA9C,KAAA7D,OAAoDT,KAAKC,MAAMF,QAAUuE,EAAa,eAAiB,IAE5H,MAAO,CAAEzE,UADSG,KAAKC,MAAMqE,WAAamV,EAAkB,aAC3BD,QAAWA,EAASlV,WAAcA,mCAInE,IAAMA,EAAatE,KAAK0Z,iBACxB,OAAQlI,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KAAgBmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACtC2R,EAAA7R,EAAAC,cAAA,SAAO+Z,QAAS3Z,KAAKC,MAAMwH,UAAW5H,UAAU,8BAA8BG,KAAKC,MAAMyH,UAAW1H,KAAKC,MAAMqE,YAAckN,EAAA7R,EAAAC,cAAA,iBAC7H4R,EAAA7R,EAAAC,cAAA,YAAUC,UAAU,uBACnBC,KAAME,KAAKC,MAAM8R,UAAY/R,KAAKC,MAAM8R,UAAY,OACpDxR,GAAIP,KAAKC,MAAMwH,UACfmS,KAAM5Z,KAAKC,MAAM4Z,UAAY7Z,KAAKC,MAAM4Z,UAAY,GACpDC,YAAW9Z,KAAKC,MAAM8Z,UAAY,OAClCC,YAAWha,KAAKC,MAAM4H,SACtB1H,YAAa,IACbC,KAAMJ,KAAKC,MAAMwH,UACjBwS,OAAQja,KAAKC,MAAMga,QAAUja,KAAKC,MAAMsI,KAAK2R,iBAC7ClI,SAAUhS,KAAKC,MAAM+R,SACrB9R,SAAUF,KAAKC,MAAMC,UAAYF,KAAKC,MAAMsI,KAAK4R,mBACjDpa,MAAOC,KAAKC,MAAMF,MAClBqa,uBAAsBpa,KAAKC,MAAMyH,UACjC2S,UAAWra,KAAKC,MAAMoa,UACtBC,KAAK,MAELhW,EAAU,YAAkBkN,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,sBAAsB,GAAAY,OAAGT,KAAKC,MAAMyH,UAAd,KAA6BpD,EAAU,4CAM3G,OAAQkN,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACNrI,KAAKua,gBArCkBC,IAAMna,oBCsPlBoa,8MA3OXrV,MAAQ,CACJ4P,QAAQ,EACR0F,WAAW,KAMfC,WAAa,SAAAC,GACTA,EAAG7V,iBACH6V,EAAGC,aAAaC,WAAa,OAC7BtW,EAAKQ,SAAS,CAAE0V,WAAW,OAE/BK,YAAc,SAAAH,GACVpW,EAAKQ,SAAS,CAAE0V,WAAW,OAE/BM,OAAS,SAAClW,EAAGmW,EAAWC,GACpB1W,EAAKQ,SAAS,CAAE0V,WAAW,IAC3BlW,EAAKvE,MAAM+a,OAAOlW,EAAGmW,EAAWC,4EAG3B,IAAA9T,EAAApH,KAAAmb,EAC4Dnb,KAAKC,MAAjE8S,EADAoI,EACApI,QAASkI,EADTE,EACSF,UAAWC,EADpBC,EACoBD,SAAUE,EAD9BD,EAC8BC,YAAaC,EAD3CF,EAC2CE,cAC3CX,EAAa1a,KAAKoF,MAAlBsV,UACDpT,EAAQyL,EAAQuI,UAAYvP,KAAKC,MAAM+G,EAAQuI,WAAY,CAAC/T,QAAQ,EAAGmD,OAAO,GAAID,MAAM,IAE5F,OAAO+G,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,wCAAyC0b,WAAS,EAACC,YAAa,SAAA1W,GAAC,OAAIsC,EAAKnH,MAAMwb,kBAAkB3W,EAAGiO,EAASqI,IAAcT,WAAY,SAAA7V,GAAC,OAAIsC,EAAKnH,MAAMyb,iBAAiB5W,IAAIkW,OAAQ,SAAAlW,GAAMsC,EAAKnH,MAAM0b,aAAa7W,EAAGsW,EAAaH,EAAWI,EAAcxZ,kBACxQ2P,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACTkT,EAAQ6I,UAEbpK,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,4BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACTG,KAAKC,MAAM4b,cAAc9I,EAASkI,EAAWC,EAAUlb,KAAKC,MAAMob,iBAM3E7J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACf2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAW,QAAUG,KAAKoF,MAAM4P,OAAS,GAAK,UAAWhN,QAAS,SAAClD,GAAQsC,EAAKpC,SAAS,CAAEgQ,QAAS5N,EAAKhC,MAAM4P,WAAcxD,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGrJG,KAAKoF,MAAM4P,QAAUxD,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,uBACtC2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,cACP2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,MACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,WACX1H,MAAOgT,EAAQ6I,SACflU,UAAW,WACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,WAAYoW,IACvDhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,WAAYoW,SAIvE1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACPhE,EAAA7R,EAAAC,cAACoc,EAAA,EAAD,CACIC,gBAAiB,SAAAnX,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,eAAgBoW,IACpEla,KAAMhB,KAAKC,MAAMic,eAAejY,YAAcjE,KAAKC,MAAMic,eAAejY,YAAc,GACtFkY,WAAW,YACXC,uBAAyB,EACzBrc,MAAO+P,SAASiD,EAAQsJ,cACxBjc,KAAK,eACLsH,UAAU,0BAItB8J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,eACX1H,MAAOgT,EAAQuJ,aACf5U,UAAW,eACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,eAAgBoW,IAC3Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,eAAgBoW,WAMnF1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,MACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAC2c,EAAA,EAADnb,OAAA4E,OAAA,GAAkBhG,KAAKoF,MAAvB,CACIvF,UAAU,YACV6H,UAAW,eACXD,UAAW,eACXI,SAAU,eACVtH,GAAI,eAAiB2a,EACrBnb,MAAOgT,EAAQyJ,aACfC,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnCrY,YAAY,EACZpE,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM4c,mBAAmB/X,EAAG,eAAgBoW,QAGxE1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAC2c,EAAA,EAADnb,OAAA4E,OAAA,GAAkBhG,KAAKoF,MAAvB,CACIvF,UAAU,YACV6H,UAAW,cACXD,UAAW,iBACXI,SAAU,iBACVtH,GAAI,iBAAmB2a,EACvBnb,MAAOgT,EAAQ+J,eACfL,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnCrY,YAAY,EACZpE,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM4c,mBAAmB/X,EAAG,iBAAkBoW,UAKlF1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,UACXhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,MACXhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACmd,EAAD3b,OAAA4E,OAAA,GAAkBhG,KAAKC,MAAvB,CACIwH,UAAW,kBACX1H,MAAOgT,EAAQiK,gBACftV,UAAW,kBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,kBAAmBoW,IAC9Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,kBAAmBoW,SAI9E1J,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACf2R,EAAA7R,EAAAC,cAACiU,EAAA,EAAD,CACIpG,UAAU,EACVwP,QAAS,SAACjc,GACNoG,EAAKnH,MAAMid,cAAclc,IAE7BA,KAAM+R,EAAQlR,eACd6F,UAAW,gBACXD,UAAW,gBACXI,SAAU,gBACVU,KAAMvI,KAAKC,MAAMkd,mBACjB7Y,YAAY,EACZwD,UAAW,gBACXvC,UAAWwN,EAAQqK,SACnBrd,MAAOgT,EAAQqK,SACftd,KAAM,cAOlB0R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,UACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,oBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,IACX2R,EAAA7R,EAAAC,cAAA,MAAI4V,MAAM,wBAAV,uBACAhE,EAAA7R,EAAAC,cAAA,KAAG4V,MAAM,kCAAT,mDACAhE,EAAA7R,EAAAC,cAACyd,EAAA,EAADjc,OAAA4E,OAAA,GAAiBhG,KAAKC,MAAtB,CACQyH,UAAW,IACXD,UAAW,YACXI,SAAU,YACV9H,MAAOuH,EAAMC,QACbqV,WAAY,CACR,CAAEU,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAO,QAASvd,MAAO,GACzB,CAAEud,MAAO,WAAYvd,MAAO,GAC5B,CAAEud,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAM,QAASvd,MAAM,IAE3BuE,YAAY,EACZpE,SAAUF,KAAKC,MAAMgc,gBACrBpa,eAAkBqZ,MAI9B1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,uBACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,MACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,eACPhE,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,SACX1H,MAAOuH,EAAMoD,OACbhD,UAAW,iBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAMsd,qBAAqBzY,EAAG,SAAUoW,IAC1Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAMud,uBAAuB1Y,EAAG,SAAUoW,QAGtE1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACPhE,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAOuH,EAAMmD,MACb/C,UAAW,gBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAMsd,qBAAqBzY,EAAG,QAASoW,IACzDhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAMud,uBAAuB1Y,EAAG,QAASoW,YAOpF1J,EAAA7R,EAAAC,cAAA,WACG4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,8BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,sBAAd,eAEHkT,EAAQ0K,eAAiBrc,OAAOqU,KAAK1C,EAAQ0K,eAAe/U,OAAS,GAAKtH,OAAOqU,KAAK1C,EAAQ0K,eAAe7U,IAAI,SAACC,EAAK1B,GACpH,IAAIuW,EAAmB3K,EAAQ0K,cAAc5U,GACzC8U,EAAkCD,EAAiBrG,+BAAiCqG,EAAiBrG,+BAAiC,GACtIuG,EAAiCF,EAAiBhF,8BAAgCgF,EAAiBhF,8BAAgC,GACnImF,EAAoCH,EAAiBnH,iCAAmCmH,EAAiBnH,iCAAmC,GAC5IpB,EAA4BuI,EAAiBzI,yBAA2ByI,EAAiBzI,yBAA2B,GACxH,OAAOzD,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBAAuBgJ,IAAK1B,GACV,UAAnCuW,EAAiBI,gBAA8BtM,EAAA7R,EAAAC,cAACme,EAAD3c,OAAA4E,OAAA,CAASgY,eAAgB,GAAI7I,0BAA2BA,GAA+BuI,EAAuBtW,EAAKnH,MAAnH,CAA0HsV,OAAQ2F,KAC9I,WAAnCwC,EAAiBI,gBAA+BtM,EAAA7R,EAAAC,cAACqe,EAAD7c,OAAA4E,OAAA,CAAUgY,eAAgB,GAAI7I,0BAA2B0I,GAAuCH,EAAsBtW,EAAKnH,MAA3H,CAAkIsV,OAAQ2F,KACvJ,QAAnCwC,EAAiBI,gBAA4BtM,EAAA7R,EAAAC,cAACse,EAAD9c,OAAA4E,OAAA,CAAMgY,eAAgB,GAAI7I,0BAA2ByI,GAAoCF,EAAsBtW,EAAKnH,MAApH,CAA2HsV,OAAQ2F,KAC7I,SAAnCwC,EAAiBI,gBAA6BtM,EAAA7R,EAAAC,cAACue,EAAD/c,OAAA4E,OAAA,CAAOgY,eAAgB,GAAI7I,0BAA2BwI,GAAqCD,EAAsBtW,EAAKnH,MAAtH,CAA6HsV,OAAQ2F,SAIhM1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,sBAAwB6a,EAAY,oBAAsB,IAAKM,OAAQ,SAAAlW,GAAOsC,EAAK4T,OAAOlW,EAAGmW,EAAWC,IAAaP,WAAY3a,KAAK2a,WAAYI,YAAa/a,KAAK+a,aAChLvJ,EAAA7R,EAAAC,cAAA,iDAAwC4R,EAAA7R,EAAAC,cAAA,yCAnO/C4a,IAAMna,WCqRZ+d,eAlRX,SAAAA,EAAYne,GAAO,IAAAuE,EAAA,OAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAAoe,IACf5Z,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAAgd,GAAAxZ,KAAA5E,KAAMC,KAYV0a,WAAa,SAAAC,GAETA,EAAGC,aAAaC,WAAa,OAC7BtW,EAAKQ,SAAS,CAAE0V,WAAW,KAhBZlW,EAkBnBuW,YAAc,SAAAH,GACVpW,EAAKQ,SAAS,CAAE0V,WAAW,KAnBZlW,EA0BnB6Z,cAAgB,SAACtL,EAASkI,EAAWC,EAAUG,EAAeD,GAC1D,IAAMpa,EAAO,CACT+R,UACAkI,YACAC,WACAG,gBACAD,eAEJ,OAAO5J,EAAA7R,EAAAC,cAAC0e,GAADld,OAAA4E,OAAA,GAAYxB,EAAKvE,MAAWe,KAhCnCwD,EAAKY,MAAQ,CACTmZ,YAAY,EACZvJ,QAAQ,EACRwJ,WAAY,IAEhBha,EAAKwW,OAASxW,EAAKwW,OAAOtV,KAAZtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAPCA,sEAqBZM,EAAGmW,EAAWC,GACjBlb,KAAKgF,SAAS,CAAE0V,WAAW,IAC3B1a,KAAKC,MAAM+a,OAAOlW,EAAGmW,EAAWC,oCAc3B,IAAA9T,EAAApH,KACG0a,EAAc1a,KAAKoF,MAAnBsV,UACF+D,EAAaze,KAAKC,MAAMmF,MAAMsZ,QAC9BC,EAAO3e,KAAKC,MAAMmF,MAAMuZ,KAHzBxD,EAI4Cnb,KAAKC,MAAhD8S,EAJDoI,EAICpI,QAASkI,EAJVE,EAIUF,UAAWC,EAJrBC,EAIqBD,SAAU0D,EAJ/BzD,EAI+ByD,SAChCC,GAAmB9L,EAAQ+L,kBAAoB/L,EAAQ+L,iBAAiBpW,QAAU,EAAKqK,EAAQ+L,iBAAiBC,KAAK,SAACpf,EAAGqf,GACzH,OAAOrf,EAAEsf,QAAUD,EAAEC,UACnB,GACF3X,EAAQyL,EAAQuI,UAAYvP,KAAKC,MAAM+G,EAAQuI,WAAY,CAAC/T,QAAQ,EAAGmD,OAAO,GAAID,MAAM,IAC5F,OAA0B,GAAtBsI,EAAQmM,WACD,GAEJ1N,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,uCAAwC0b,WAAS,EAACC,YAAa,SAAA1W,GAAC,OAAIsC,EAAKnH,MAAMkf,eAAera,EAAGiO,EAAS6L,IAAWjE,WAAY,SAAA7V,GAAC,OAAIsC,EAAKnH,MAAMmf,cAActa,EAAG8Z,EAAU3D,IAAYF,YAAc,SAAAjW,GAAC,OAAGsC,EAAKnH,MAAMof,eAAeva,EAAG8Z,EAAU3D,IAAYD,OAAQ,SAAAlW,GAAMsC,EAAKnH,MAAMqf,UAAUxa,EAAG8Z,EAAU3D,KACzTzJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACTkT,EAAQ6I,UAEbpK,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,MACTG,KAAKC,MAAM4b,cAAc9I,EAASkI,EAAWC,KAMtD1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAaiQ,SAAS2O,EAAWvD,WAAapL,SAASoL,IAAepL,SAAS2O,EAAWxD,YAAcnL,SAASmL,GAAgB,MAAQ,aAAcjT,QAAS,SAAClD,GAAQsC,EAAKnH,MAAMye,QAAQ5Z,EAAGoW,EAAUD,KAAezJ,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAGpP2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAaiQ,SAAS2O,EAAWvD,WAAapL,SAASoL,IAAepL,SAAS2O,EAAWxD,YAAcnL,SAASmL,GAAgB,yBAA2B,0BAC9JzJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,cACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,MACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,WACX1H,MAAOgT,EAAQ6I,SACflU,UAAW,WACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,WAAYoW,IACvDhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,WAAYoW,SAIvE1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACXhE,EAAA7R,EAAAC,cAACoc,EAAA,EAAD,CACIC,gBAAiB,SAAAnX,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,eAAgBoW,IACpEla,KAAMhB,KAAKC,MAAMic,eAAejY,YAAcjE,KAAKC,MAAMic,eAAejY,YAAc,GACtFkY,WAAW,YACXC,uBAAyB,EACzBrc,MAAO+P,SAASiD,EAAQsJ,cACxBjc,KAAK,eACLsH,UAAU,0BAKlB8J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,eACX1H,MAAOgT,EAAQuJ,aACf5U,UAAW,eACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,eAAgBoW,IAC3Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,eAAgBoW,WAMnF1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,MACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAC2c,EAAA,EAADnb,OAAA4E,OAAA,GAAkBhG,KAAKoF,MAAvB,CACIvF,UAAU,YACV6H,UAAW,eACXD,UAAW,eACXI,SAAU,eACVtH,GAAI,eAAiB2a,EACrBnb,MAAOgT,EAAQyJ,aACfC,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnCrY,YAAY,EACZpE,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM4c,mBAAmB/X,EAAG,eAAgBoW,QAGxE1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAC2c,EAAA,EAADnb,OAAA4E,OAAA,GAAkBhG,KAAKoF,MAAvB,CACIvF,UAAU,YACV6H,UAAW,cACXD,UAAW,iBACXI,SAAU,iBACVtH,GAAI,iBAAmB2a,EACvBnb,MAAOgT,EAAQ+J,eACfL,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnCrY,YAAY,EACZpE,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM4c,mBAAmB/X,EAAG,iBAAkBoW,UAKlF1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,UACXhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,MACXhE,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAACmd,EAAD3b,OAAA4E,OAAA,GAAkBhG,KAAKC,MAAvB,CACIwH,UAAW,kBACX1H,MAAOgT,EAAQiK,gBACftV,UAAW,kBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAM6b,gBAAgBhX,EAAG,kBAAmBoW,IAC9Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAM8b,kBAAkBjX,EAAG,kBAAmBoW,SAI9E1J,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACf2R,EAAA7R,EAAAC,cAACiU,EAAA,EAAD,CACIpG,UAAU,EACVwP,QAAS,SAACjc,GACNoG,EAAKnH,MAAMid,cAAclc,IAE7BA,KAAM+R,EAAQlR,eACd6F,UAAW,gBACXD,UAAW,gBACXI,SAAU,gBACVU,KAAMvI,KAAKC,MAAMkd,mBACjB7Y,YAAY,EACZwD,UAAW,gBACXvC,UAAWwN,EAAQqK,SACnBrd,MAAOgT,EAAQqK,SACftd,KAAM,cAOlB0R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,UACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gCACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,IACX2R,EAAA7R,EAAAC,cAAA,MAAI4V,MAAM,wBAAV,uBACAhE,EAAA7R,EAAAC,cAAA,KAAG4V,MAAM,kCAAT,mDACAhE,EAAA7R,EAAAC,cAACyd,EAAA,EAADjc,OAAA4E,OAAA,GAAiBhG,KAAKC,MAAtB,CACQyH,UAAW,IACXD,UAAW,YACXI,SAAU,YACV9H,MAAOuH,EAAMC,QACbqV,WAAY,CACR,CAAEU,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAO,QAASvd,MAAO,GACzB,CAAEud,MAAO,WAAYvd,MAAO,GAC5B,CAAEud,MAAO,SAAUvd,MAAO,GAC1B,CAAEud,MAAM,QAASvd,MAAM,IAE3BuE,YAAY,EACZpE,SAAUF,KAAKC,MAAMgc,gBACrBpa,eAAkBqZ,MAI9B1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,uBACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,MACPhE,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,eACPhE,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,SACX1H,MAAOuH,EAAMoD,OACbhD,UAAW,iBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAMsd,qBAAqBzY,EAAG,SAAUoW,IAC1Dhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAMud,uBAAuB1Y,EAAG,SAAUoW,QAGtE1J,EAAA7R,EAAAC,cAAA,OAAK4V,MAAM,SACPhE,EAAA7R,EAAAC,cAACkS,EAAA,EAAD1Q,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CACIwH,UAAW,QACX1H,MAAOuH,EAAMmD,MACb/C,UAAW,gBACXpD,YAAY,EACZ2V,OAAQ,SAAAnV,GAAC,OAAIsC,EAAKnH,MAAMsd,qBAAqBzY,EAAG,QAASoW,IACzDhb,SAAU,SAAA4E,GAAC,OAAIsC,EAAKnH,MAAMud,uBAAuB1Y,EAAG,QAASoW,YAOrF1J,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,8BACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,sBAAd,eAEHkT,EAAQwM,wBAA0Bne,OAAOqU,KAAK1C,EAAQwM,wBAAwB7W,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA4R,EAAA7R,EAAA0I,SAAA,SAC3F0K,EAAQwM,uBAAwB3W,IAAI,SAAC5H,EAAMmG,GACzC,IAAIuW,EAAmB3K,EAAQ0K,cAAczc,EAAKuB,0BAClD,IAAKmb,EACD,OAAO,EAEX,IAAIC,EAAkCD,EAAiBrG,+BAAiCqG,EAAiBrG,+BAAiC,GACtIuG,EAAiCF,EAAiBhF,8BAAgCgF,EAAiBhF,8BAAgC,GACnImF,EAAoCH,EAAiBnH,iCAAmCmH,EAAiBnH,iCAAmC,GAC5IpB,EAA4BuI,EAAiBzI,yBAA2ByI,EAAiBzI,yBAA2B,GACxH,OAASzD,EAAA7R,EAAAC,cAAA,OAAKiJ,IAAK1B,EAAOtH,UAAW,uCAAwC0b,WAAS,EAACC,YAAa,SAAA1W,GAAC,OAAIsC,EAAKnH,MAAMuf,qBAAqB1a,EAAGiO,EAAU5L,EAAM,IAAKwT,WAAY,SAAA7V,GAAC,OAAIsC,EAAKnH,MAAMwf,oBAAoB3a,IAAIkW,OAAQ,SAAAlW,GAAMsC,EAAKnH,MAAMyf,gBAAgB5a,EAAIqC,EAAM,EAAI8T,EAAWC,KAAY1J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBAC1Q,UAAnC6d,EAAiBI,gBAA8BtM,EAAA7R,EAAAC,cAACme,EAAD3c,OAAA4E,OAAA,CAASgY,eAAgB,GAAIzI,OAAQ2F,EAAU/F,0BAA2BA,EAA2BE,uBAAwBjO,EAAKnH,MAAMoV,wBAA4BqI,EAAuBtW,EAAKnH,QAC5M,WAAnCyd,EAAiBI,gBAA+BtM,EAAA7R,EAAAC,cAACqe,EAAD7c,OAAA4E,OAAA,CAAUgY,eAAgB,GAAI3I,uBAAwBjO,EAAKnH,MAAMoV,uBAAwBE,OAAQ2F,EAAU/F,0BAA2B0I,GAAuCH,EAAsBtW,EAAKnH,QACrN,QAAnCyd,EAAiBI,gBAA4BtM,EAAA7R,EAAAC,cAACse,EAAD9c,OAAA4E,OAAA,CAAMgY,eAAgB,GAAI3I,uBAAwBjO,EAAKnH,MAAMoV,uBAAwBE,OAAQ2F,EAAU/F,0BAA2ByI,GAAoCF,EAAsBtW,EAAKnH,QAC3M,SAAnCyd,EAAiBI,gBAA6BtM,EAAA7R,EAAAC,cAACue,EAAD/c,OAAA4E,OAAA,CAAOgY,eAAgB,GAAI3I,uBAAwBjO,EAAKnH,MAAMoV,uBAAwBE,OAAQ2F,EAAU/F,0BAA2BwI,GAAqCD,EAAsBtW,EAAKnH,cAI9PuR,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,sBAAwB6a,EAAY,oBAAsB,IAAKM,OAAS,SAAAlW,GAAOsC,EAAK4T,OAAOlW,EAAGmW,EAAWC,IAAaP,WAAY3a,KAAK2a,WAAYI,YAAa/a,KAAK+a,aACjLvJ,EAAA7R,EAAAC,cAAA,6CAAoC4R,EAAA7R,EAAAC,cAAA,8BAEvCmT,EAAQ+L,kBAAoB/L,EAAQ+L,iBAAiBpW,OAAS,GAC3D8I,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,SACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,sBAAd,aAEHgf,EAAgBjW,IAAI,SAAC+W,EAAYvE,GAC9B,IAAIwE,EAASjB,EAAKgB,EAAWE,cAC7B,OAAOD,GAAUpO,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kBAAkBgJ,IAAKuS,GAAchU,EAAKiX,cAAcuB,EAAQ3E,EAAW0E,EAAWE,aAAa9M,EAAUqI,EAAY,kBAxQ1K/a,iECEZ,IAAMyf,GAAoB,SAAC7f,GAI9B,MAHc,CACV8f,aAAgB,aAKlBC,eAEF,SAAAA,EAAY/f,GAAO,IAAAuE,EAAApD,OAAA0I,EAAA,EAAA1I,CAAApB,KAAAggB,IACfxb,EAAApD,OAAAgJ,EAAA,EAAAhJ,CAAApB,KAAAoB,OAAAiJ,EAAA,EAAAjJ,CAAA4e,GAAApb,KAAA5E,KAAMC,KA6IVggB,OAAS,SAACC,EAAIrX,GACVrE,EAAK2b,YAAYtX,GAAOqX,GA/IT1b,EAwPnB6Q,uBAAyB,SAACvQ,EAAGwQ,EAAsBC,GAC/C,IAAItQ,EAAQ,GACGT,EAAKY,MAAbuZ,KACP1Z,EAAM8D,MAAQ,mBACd9D,EAAMmb,QAAU,wCAChBnb,EAAM4N,OAAS,WACXrO,EAAK6b,yBAAyBvb,EAAGwQ,EAAsBC,IAE3D/Q,EAAKQ,SAAS,CAACC,WAhQAT,EAkQnB6b,yBAA2B,SAACvb,EAAGwQ,EAAsBC,GACjDzQ,EAAEC,iBAD0D,IAEvD4Z,EAAQna,EAAKY,MAAbuZ,KACD2B,EAAc,EACdC,EAAWnf,OAAAwN,EAAA,EAAAxN,CAAA,GACRud,EAAK7O,SAASyF,KAEjBiL,EAAiB7B,EAAK7O,SAASyF,IAASgK,wBAA0BZ,EAAK7O,SAASyF,IAASkI,cAC1F+C,GACCA,EAAe5X,IAAI,SAAC6X,EAAUtZ,GAC1B,GAAGsZ,EAASnL,sBAAwBA,EAAqB,CACrDgL,EAAcG,EAASle,yBACvB,IAAIyM,EAAM,CACN0R,IAAM,CAACD,EAASle,0BAChBjB,UAAU,wBACVC,MAAM,4BAEViD,EAAKvE,MAAMyW,SAASrU,aAAa2M,OAI9CsR,UAAsBC,EAAY9C,cAAc6C,GAC/C3B,EAAK7O,SAASyF,IAAWgL,EACzB/b,EAAKQ,SAAS,CAAC2Z,UAzRAna,EAicnByX,gBAAkB,SAACnX,GACfA,EAAEC,iBADiB,IAEd4Z,EAAQna,EAAKY,MAAbuZ,KACD9c,EAAiBiD,EAAEwB,OAASwJ,SAAShL,EAAEwB,OAAOqa,aAAa,mBAAqB,GACpF,GAAG9e,GAAkB8c,EAAK,CACtB,IAAI4B,EAAc5B,EAAK9c,GACnByF,EAAQiZ,EAAYjF,UAAYvP,KAAKC,MAAMuU,EAAYjF,WAAa,CAAC/T,QAAQ,EAAGmD,OAAO,GAAID,MAAM,IACrGnD,EAAMC,QAAUzC,EAAEwB,OAAOvG,MAAQ+P,SAAShL,EAAEwB,OAAOvG,OAAS,EAC5DwgB,EAAWnf,OAAAwN,EAAA,EAAAxN,CAAA,GACJud,EAAK9c,GADD,CAEPyZ,UAAYvP,KAAKiF,UAAU1J,KAE/BqX,EAAK9c,GAAkB0e,EACvB/b,EAAKQ,SAAS,CAAC2Z,SACfna,EAAKvE,MAAMyW,SAAS9U,aAAQ+c,EAAK9c,OA/ctB2C,EAwdnBgX,YAAc,SAACZ,EAAIgG,EAAMC,GACrBjG,EAAGC,aAAaiG,QAAQ,KAAMF,EAAI,sBAClChG,EAAGC,aAAaiG,QAAQ,UAAWD,GACnCjG,EAAGC,aAAakG,cAAgB,QA3djBvc,EAmenBwW,OAAS,SAACJ,EAAIK,EAAW+F,GACrB,IAAIzgB,EAAKqa,EAAGC,aAAaoG,QAAQ,MACjB,MAAbD,GAAkC,MAAb/F,GACpBzW,EAAKvE,MAAMihB,WAAW1a,SAASxF,KAAK4H,IAAI,SAAC5H,EAAMmG,GACxCnG,EAAKsU,sBAAwB/U,GAAIiE,EAAK2c,kBAAkBvG,EAAI5Z,EAAMia,EAAW+F,KAGxFxc,EAAKQ,SAAS,CAAE0V,WAAW,KA1eZlW,EA4gBnB2a,eAAiB,SAACvE,EAAIgG,EAAMQ,GACxBxG,EAAGC,aAAaiG,QAAQ,aAAcM,GACtCxG,EAAGC,aAAaiG,QAAQ,MAAO,OAC/BlG,EAAGC,aAAakG,cAAgB,QA/gBjBvc,EAkhBnB6a,eAAiB,SAACzE,EAAIoG,EAAW/F,GAE7BL,EAAGtU,OAAOgB,MAAV,WAAgC,IAphBjB9C,EAuhBnB4a,cAAiB,SAACxE,EAAIoG,EAAW/F,GAES,yBAAnCL,EAAGtU,OAAOqa,aAAa,WACtB/F,EAAGtU,OAAOgB,MAAV,WAAgC,aAGrCsT,EAAGC,aAAakG,cAAgB,QA7hBhBvc,EAgiBnB8a,UAAY,SAAC1E,EAAIoG,EAAW/F,GACxBL,EAAGtU,OAAOgB,MAAV,WAAgC,GAEhC,IAAI8Z,EAAaxG,EAAGC,aAAaoG,QAAQ,cACrCpY,EAAM+R,EAAGC,aAAaoG,QAAQ,OAClC,GAAGpY,GAAc,OAAPA,EAAa,CACnB,IAAI8V,EAAO,GAAI0C,EAAY,GAAIC,EAAa,GACxCC,EAAW/c,EAAKY,MAAMuZ,KAC1Bvd,OAAOqU,KAAK8L,GAAU3Y,IAAI,SAACC,EAAK1B,GACzB2I,SAASyR,EAAS1Y,GAAKnH,qBAAuBoO,SAASmL,IAA0C,GAA5BsG,EAAS1Y,GAAKqW,WAClFP,EAAK9I,KAAK0L,EAAS1Y,IAEnBwY,EAAUxL,KAAK0L,EAAS1Y,MAGhC,IAAI2Y,EAAO7C,EAAKI,KAAK,SAACpf,EAAGqf,GACrB,OAAOrf,EAAEsf,QAAUD,EAAEC,UAErBwC,EAAcjd,EAAKkd,oBAAoBF,EAAM1R,SAASsR,GAAatR,SAASkR,IAC5EW,EAAM,CAAC3gB,KAASygB,EAChBzS,IAAQ,CAAC1N,UAAU,cAAeC,MAAM,mBAC5CiD,EAAKvE,MAAMyW,SAASzU,aAAiB0f,IACrCF,EAAY/Y,OAAS,GAAK+Y,EAAY7Y,IAAI,SAAC5H,EAAMmG,GAC7Cma,EAAWtgB,EAAKa,gBAAkBb,IAEtCqgB,EAAU3Y,OAAS,GAAK2Y,EAAUzY,IAAI,SAAC5H,EAAMmG,GACzCma,EAAWtgB,EAAKa,gBAAkBb,IAEtCwD,EAAKQ,SAAS,CAAC2Z,KAAO2C,MA5jBX9c,EAgkBnBiX,kBAAoB,SAACb,EAAIgG,EAAMQ,GAC3BxG,EAAGC,aAAaiG,QAAQ,mBAAoBM,GAC5CxG,EAAGC,aAAaiG,QAAQ,YAAa,UACrClG,EAAGC,aAAakG,cAAgB,QAnkBjBvc,EAqkBnBkX,iBAAmB,SAAAd,GAEfA,EAAGC,aAAaC,WAAa,QAvkBdtW,EAykBnBmX,aAAe,SAACf,EAAIoG,EAAW/F,EAAWC,GACtC,IAAIkG,EAAaxG,EAAGC,aAAaoG,QAAQ,oBACrCpY,EAAM+R,EAAGC,aAAaoG,QAAQ,aAC9BO,EAAO,GACX,GAAG3Y,GAAc,UAAPA,EAAgB,CACtB,IACI0Y,EAAW/c,EAAKY,MAAMuZ,KAC1B6C,EAAOD,EAASrG,GAAU4D,iBAC1B,IAAI8C,EAAoBpd,EAAKqd,sBAAsBL,EAAM1R,SAASsR,GAAatR,SAASkR,IACxFO,EAASrG,GAAU4D,iBAAmB8C,EACtC,IAAID,EAAM,CAAC3gB,KAAS4gB,EAChB5S,IAAQ,CAAC1N,UAAU,kBAAmBC,MAAM,uBAChDiD,EAAKvE,MAAMyW,SAASzU,aAAiB0f,IACrCnd,EAAKQ,SAAS,CAAC2Z,KARJ,OA9kBAna,EA0lBnBgb,qBAAuB,SAAC5E,EAAIgG,EAAMQ,GAC7BxG,EAAGC,aAAaiG,QAAQ,SAAU,aAClClG,EAAGC,aAAaiG,QAAQ,iBAAkBM,GAC1CxG,EAAGC,aAAakG,cAAgB,QA7lBlBvc,EA+lBlBib,oBAAsB,SAAA7E,GAElBA,EAAGC,aAAaC,WAAa,QAjmBftW,EAmmBlBkb,gBAAkB,SAAC9E,EAAIoG,EAAW/F,EAAWC,GAC1C,IAAIkG,EAAaxG,EAAGC,aAAaoG,QAAQ,kBACrCpY,EAAM+R,EAAGC,aAAaoG,QAAQ,UAC9BO,EAAO,GACX,GAAG3Y,GAAc,aAAPA,EAAmB,CACzB,IACI0Y,EAAW/c,EAAKY,MAAMuZ,KAC1B6C,EAAOD,EAASrG,GAAUqE,uBAC1B,IAAIqC,EAAoBpd,EAAKsd,mBAAmBN,EAAM1R,SAASsR,GAAatR,SAASkR,IACrFO,EAASrG,GAAUqE,uBAAyBqC,EAC5C,IAAID,EAAM,CAAC3gB,KAAS4gB,EAChB5S,IAAQ,CAAC1N,UAAU,wBAAyBC,MAAM,6BACtDiD,EAAKvE,MAAMyW,SAASzU,aAAiB0f,IACrCnd,EAAKQ,SAAS,CAAC2Z,KARJ,OAxmBAna,EA8sBnBud,uBAAyB,SAAC7G,EAAUD,EAAW+G,EAAarD,GACxD,IAAI3P,EAAM,CACN0R,IAAM,CAACxF,GACP5Z,UAAU,cACVC,MAAM,kBAEPod,EAAKzD,GAAUgE,YAAcP,EAAKqD,EAAYngB,gBAAgBid,mBACjEH,EAAKqD,EAAYngB,gBAAgBid,iBAAmBH,EAAKqD,EAAYngB,gBAAgBid,iBAAiBmD,OAAO,SAACjhB,GAC1G,OAAOA,EAAK6e,cAAgB3E,YAGzByD,EAAKzD,GACZ1W,EAAKvE,MAAMyW,SAASrU,aAAa2M,IACjCxK,EAAKQ,SAAS,CAAC2Z,UA3tBAna,EA43BnB+Y,qBAAuB,SAACzY,EAAG2C,EAAWyT,GAClCpW,EAAEC,iBAD6C,IAE1C4Z,EAAQna,EAAKY,MAAbuZ,KACL,GAAGA,EAAKzD,GAAU,CACd,IAAIqF,EAAc5B,EAAKzD,GACnB5T,EAAQiZ,EAAYjF,UAAYvP,KAAKC,MAAMuU,EAAYjF,WAAa,CAAC/T,QAAQ,EAAGmD,OAAO,GAAID,MAAM,IACrGnD,EAAMG,GAAc3C,EAAEwB,OAAOvG,MAAQ+P,SAAShL,EAAEwB,OAAOvG,OAAS,KAChEwgB,EAAWnf,OAAAwN,EAAA,EAAAxN,CAAA,GACJud,EAAKzD,GADD,CAEPI,UAAYvP,KAAKiF,UAAU1J,KAE/BqX,EAAKzD,GAAYqF,EACjB/b,EAAKvE,MAAMyW,SAAS9U,aAAQ+c,EAAKzD,OAx4BtB1W,EAi5BnBgZ,uBAAyB,SAAC1Y,EAAG2C,EAAWyT,GACpCpW,EAAEC,iBAD+C,IAE5C4Z,EAAQna,EAAKY,MAAbuZ,KACL,GAAGA,EAAKzD,GAAU,CACd,IAAIqF,EAAc5B,EAAKzD,GACnB5T,EAAQiZ,EAAYjF,UAAYvP,KAAKC,MAAMuU,EAAYjF,WAAa,CAAC/T,QAAQ,EAAGmD,OAAO,GAAID,MAAM,IACrGnD,EAAMG,GAAc3C,EAAEwB,OAAOvG,MAAQ+P,SAAShL,EAAEwB,OAAOvG,OAAS,KAChEwgB,EAAWnf,OAAAwN,EAAA,EAAAxN,CAAA,GACJud,EAAKzD,GADD,CAEPI,UAAYvP,KAAKiF,UAAU1J,KAE/BqX,EAAKzD,GAAYqF,EACjB/b,EAAKQ,SAAS,CAAC2Z,WA75BJna,EAuhCnB0d,YAAc,SAAC3hB,EAAG4hB,GACd,IAAIC,EAAW5d,EAAK2b,YAAYgC,GAASE,wBAAwBjT,GAAK,EAClEkT,EAAkB9d,EAAK+d,KAAL,eAA4BF,wBAAwBjT,GAAK,EAC3EoT,EAAche,EAAKY,MAAMqd,SAASliB,GAClC6O,EAAIgT,EAAWE,EACnB9d,EAAKQ,SAAS,CAACkd,YAAY,CAACrc,MAAK,EAAK7E,KAAK,CAAC0hB,WAAWniB,EAAGoiB,QAAQH,EAAYpT,SA5hC/D5K,EA8hCnBge,YAAc,SAAA1d,GACV,IAAMod,EAAc1d,EAAKY,MAAM8c,YACzBS,EAAUT,EAAYlhB,KAAK2hB,QACjCT,EAAYlhB,KAAK2hB,QAAjBvhB,OAAAwN,EAAA,EAAAxN,CAAA,GAA+BuhB,EAA/B,CACI5C,aAAcjb,EAAEwB,OAAOvG,OAAS,KAEpCyE,EAAKQ,SAAS,CAACkd,YAAY9gB,OAAAwN,EAAA,EAAAxN,CAAA,GAAI8gB,MApiChB1d,EAsiCnBoe,gBAAkB,SAAC9d,EAAEod,GACjB9b,IAAO6K,QAAQ,wBACfzM,EAAKvE,MAAMyW,SAASjV,aAAY,CAC5BC,mBAAmBwgB,EAAYlhB,KAAK2hB,QAAQjhB,mBAC5Cqe,aAAamC,EAAYlhB,KAAK2hB,QAAQ5C,gBAE1Cvb,EAAKQ,SAAS,CAACkd,YAAY,CAACrc,MAAK,MA5iClBrB,EA8iCnBqe,cAAgB,SAAC/d,EAAEod,GACf,IAAIjd,EAAQ,CACZA,MAAc,iBACdA,QAAgB,sCAChBA,OAAe,WACXT,EAAKse,gBAAgBhe,EAAEod,KAE3B1d,EAAKQ,SAAS,CAACC,WArjCAT,EAujCnBse,gBAAkB,SAAChe,EAAEod,GAAgB,IAC1BO,EAAYje,EAAKY,MAAjBqd,SACHM,EAAeb,EAAYlhB,KAAK2hB,QAAQjhB,mBACxCsN,EAAM,CACN0R,IAAM,CAACqC,GACPzhB,UAAU,kBACVC,MAAM,6BAEHkhB,EAASM,GAChBve,EAAKvE,MAAMyW,SAASrU,aAAa2M,IACjC,IAAIgU,EAAkB5hB,OAAOqU,KAAKgN,GAAU,GAC5Cje,EAAKQ,SAAS,CAACyd,WAASO,kBAAgBd,YAAY,CAACrc,MAAK,MAhkC1DrB,EAAKY,MAAQ,CACTH,OAAO,EACPid,YAAY,CACRrc,MAAM,EACN7E,KAAM,IAEVyc,cAAc,GACdvI,qBAAqB,GACrB+N,IAAI,CACArH,SAAS,UACToB,gBAAgB,GAChB7J,WAAW,GACXC,oBAAoB,GACpBkJ,aAAc,EACdE,aAAc,EACdtY,cAAc,GACdC,iBAAiB,GACjB+e,qBAAqB,GACrBC,cAAc,GACd7H,UAAUvP,KAAKiF,UAAU,CAACzJ,QAAQ,EAAGmD,OAAO,GAAID,MAAM,KACtDwU,QAAS,EACT5C,aAAc,EACdS,eAAgB,EAChB7H,yBAAyB,GACzBuL,eAAe,GACfxC,eAAgB,GAChBkB,WAAa,EACblb,OAAS,GAEbof,aAAc,GACdC,gBAAiB,GACjB3E,QAAS,CACLzD,UAAW,GACXC,SAAU,IAEdE,YAAa,CACTH,UAAW,GACXC,SAAU,IAEdrP,kBAAkB,CACdhG,MAAK,EACL7E,KAAK,IAETgS,eAAgB,CACZnN,MAAK,EACL7E,KAAK,IAET8T,YAAa,CACTjP,MAAM,EACN7E,KAAK,IAETsiB,aAAc,GACdC,WAAY,GACZP,gBAAiB,GACjBtI,WAAU,EACVsH,YAAc,IAElBxd,EAAKyO,UAAYuQ,IAAKhY,YAALpK,OAAA+K,EAAA,EAAA/K,CAAAoD,GACP,GACL,GACD,SAACif,GACGjf,EAAKvE,MAAMyW,SAASnT,aAAekgB,EAAU,YAAa,iBAE9D,IAEJjf,EAAK2Y,mBAAqBqG,IAAKhY,YAALpK,OAAA+K,EAAA,EAAA/K,CAAAoD,GAChB,GACN,GACA,SAACif,GACGjf,EAAKvE,MAAMyW,SAASlT,aAAwBigB,EAAU,YAAa,iBAEvE,IAEJjf,EAAKme,QAAUa,IAAKhY,YAALpK,OAAA+K,EAAA,EAAA/K,CAAAoD,GACL,GACN,SAACb,GACGiR,QAAQC,IAAI,UAEhB,GACA,IAEJrQ,EAAK2b,YAAc,GACnB,IAAIsC,EAAW,GACX9D,EAAO,GArFI,OAsFfna,EAAKvE,MAAMic,gBAAkB1X,EAAKvE,MAAMic,eAAewH,kBAAoBlf,EAAKvE,MAAMic,eAAewH,iBAAiB9a,IAAI,SAAC+Z,EAAQxb,GAC/Hsb,EAASE,EAAQjhB,oBAAjBN,OAAAwN,EAAA,EAAAxN,CAAA,GACOuhB,GAEPA,EAAQgB,aAAa/a,IAAI,SAACqa,EAAIW,GAC1BjF,EAAKsE,EAAIphB,gBAAkBohB,EAC3BtE,EAAKsE,EAAIphB,gBAAgB4b,cAAgB,GACzCwF,EAAI1D,uBAAuB3W,IAAI,SAACib,EAAWC,GAEvC,GADAnF,EAAKsE,EAAIphB,gBAAgB4b,cAAcoG,EAAUthB,0BAA4BshB,EAAUE,kBACpFF,EAAUE,kBAAkB,CAC3B,IAAIC,EAAgBH,EAAUE,kBAC3BF,EAAUI,8BACTD,EAAc9O,qBAAuB,GACrC2O,EAAUI,6BAA6Brb,IAAI,SAACsb,GACxCF,EAAc9O,qBAAqBgP,EAAexhB,iCAAmCwhB,KAEpFL,EAAUM,mCACfH,EAAcrL,0BAA4B,GAC1CkL,EAAUM,kCAAkCvb,IAAI,SAACsb,GAC7CF,EAAcrL,0BAA0BuL,EAAeE,sCAAwCF,KAE9FL,EAAUQ,qCACfL,EAAcM,2BAA6B,GAC3CT,EAAUQ,mCAAmCzb,IAAI,SAACsb,GAC9CF,EAAcM,2BAA2BJ,EAAeK,uCAAyCL,KAGzGvF,EAAKsE,EAAIphB,gBAAgB4b,cAAcoG,EAAUthB,0BAA4ByhB,SAM7Fxf,EAAKY,MAAMqd,SAAWA,EACtBje,EAAKY,MAAMuZ,KAAOA,EAClBna,EAAKwW,OAASxW,EAAKwW,OAAOtV,KAAZtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACdA,EAAKgX,YAAchX,EAAKgX,YAAY9V,KAAjBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACnBA,EAAK2R,2BAA6B3R,EAAK2R,2BAA2BzQ,KAAhCtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAClCA,EAAKqS,qBAAuBrS,EAAKqS,qBAAqBnR,KAA1BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAC5BA,EAAKK,WAAaL,EAAKK,WAAWa,KAAhBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAClBA,EAAKggB,UAAYhgB,EAAKggB,UAAU9e,KAAftE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACjBA,EAAK2c,kBAAoB3c,EAAK2c,kBAAkBzb,KAAvBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACzBA,EAAKigB,mBAAqBjgB,EAAKigB,mBAAmB/e,KAAxBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAC1BA,EAAKkgB,eAAiBlgB,EAAKkgB,eAAehf,KAApBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACtBA,EAAKmgB,wBAA0BngB,EAAKmgB,wBAAwBjf,KAA7BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAC/BA,EAAKuX,kBAAoBvX,EAAKuX,kBAAkBrW,KAAvBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACzBA,EAAKqY,mBAAqBrY,EAAKqY,mBAAmBnX,KAAxBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAC1BA,EAAKsX,gBAAkBtX,EAAKsX,gBAAgBpW,KAArBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACvBA,EAAKogB,2BAA6BpgB,EAAKogB,2BAA2Blf,KAAhCtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAClCA,EAAKuM,yBAA2BvM,EAAKuM,yBAAyBrL,KAA9BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAChCA,EAAKmP,gBAAkBnP,EAAKmP,gBAAgBjO,KAArBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACvBA,EAAK0Y,cAAgB1Y,EAAK0Y,cAAcxX,KAAnBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACrBA,EAAKqX,cAAgBrX,EAAKqX,cAAcnW,KAAnBtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IACrBA,EAAK/B,uBAAyB+B,EAAK/B,uBAAuBiD,KAA5BtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IAC9BA,EAAKka,QAAUla,EAAKka,QAAQhZ,KAAbtE,OAAA+K,EAAA,EAAA/K,CAAAoD,IA5IAA,oFAmJfxE,KAAKC,MAAMyW,SAASmO,eACpB7kB,KAAKC,MAAM6kB,KAAO9kB,KAAKC,MAAMyW,SAASjV,aAAY,CAC9CD,sBAAuBxB,KAAKC,MAAMmF,MAAMzB,OAAOnC,sBAC/Cue,aAAc/f,KAAKC,MAAMmF,MAAMzB,OAAOI,wBACtCkb,QAAQ,iDAGG,IAAA8F,EACwB/kB,KAAKuiB,KAAvCyC,EADUD,EACVC,iBAAiBC,EADPF,EACOE,cACtB,GAAGD,GAAoBC,EAAc,CACjC,IAAIC,EAA2BF,EAAiB3C,wBAC5C8C,EAAwBF,EAAc5C,wBACtC+C,EAAsBF,EAAyBza,MAAQ0a,EAAsB1a,MACjFzK,KAAKgF,SAAS,CAACogB,2EAGGC,GAAS,IAAAje,EAAApH,KAC3BgiB,EAAchiB,KAAKoF,MAAM4c,YAI7B,GAHIqD,EAAS1C,QAAQrP,YAAe+R,EAAS1C,QAAQpP,SAAWvT,KAAKC,MAAM0iB,QAAQrP,YAAc+R,EAAS1C,QAAQrP,YAC9GtT,KAAKykB,mBAAmBY,EAAS1C,QAAQnc,SAAS8e,QAAQD,EAAS1C,SAEpE0C,EAASpC,KAAOoC,EAASpC,IAAIzc,WAAaxG,KAAKC,MAAMgjB,IAAIzc,UAAmC,QAAvB6e,EAASpC,IAAIniB,SAAqBukB,EAASpC,IAAI3P,aAAe+R,EAASpC,IAAI1P,SAAWvT,KAAKC,MAAMgjB,IAAI3P,YAAc+R,EAASpC,IAAI3P,WAAW,CAC/M,GAAG0O,EAAY,CACX,IAAIhT,EAAM,CACNuW,cAAgBvD,EAChBnC,aAAewF,EAASpC,IAAIzc,SAAS8e,QAAQzjB,gBAEjD7B,KAAKgF,SAAS,CAACgd,YAAc,IAAI,WAC7B5a,EAAKnH,MAAMyW,SAASxU,aAAW8M,MAGvChP,KAAK0kB,eAAeW,EAASpC,IAAIzc,SAAS8e,UAE3CD,EAASpC,KAAQoC,EAASpC,IAAI3P,YAAe+R,EAASpC,IAAI1P,SAAWvT,KAAKC,MAAMgjB,IAAI3P,YAAc+R,EAASpC,IAAI3P,YAC9GtT,KAAK0kB,eAAeW,EAASpC,IAAIzc,SAAS8e,UAE3CD,EAASzF,QAAWyF,EAASzF,OAAOtM,YAAe+R,EAASzF,OAAOrM,SAAWvT,KAAKC,MAAM2f,OAAOtM,YAAc+R,EAASzF,OAAOtM,YAC7HtT,KAAKwlB,kBAAkBH,EAASzF,OAAOpZ,SAAS8e,UAEjDD,EAASI,cAAiBJ,EAASI,aAAanS,YAAe+R,EAASI,aAAalS,SAAWvT,KAAKC,MAAMwlB,aAAanS,YAAc+R,EAASI,aAAanS,YAC3JtT,KAAK2kB,wBAAwBU,EAASI,aAAajf,SAAS8e,UAE7DD,EAASK,wBAA2BL,EAASK,uBAAuBpS,YAAe+R,EAASK,uBAAuBnS,SAAWvT,KAAKC,MAAMylB,uBAAuBpS,YAAc+R,EAASK,uBAAuBpS,YAC7MtT,KAAK4kB,2BAA2BS,EAASK,uBAAuBlf,SAAS8e,UAE1ED,EAASM,oBAAuBN,EAASM,mBAAmBrS,YAAe+R,EAASM,mBAAmBpS,SAAWvT,KAAKC,MAAM0lB,mBAAmBrS,YAAc+R,EAASM,mBAAmBrS,YACzLtT,KAAKyC,uBAAuB4iB,EAASM,mBAAmBnf,SAAS8e,UACjED,EAASO,mBAAsBP,EAASO,kBAAkBtS,YAAe+R,EAASO,kBAAkBrS,SAAWvT,KAAKC,MAAM2lB,kBAAkBtS,YAAc+R,EAASO,kBAAkBtS,YACrLtT,KAAK6lB,aAAaR,EAASO,kBAAkBpf,SAASxD,iDAO3ChC,EAAK8kB,GAAY,IAAA1d,EAAApI,KAC3ByiB,EAAYziB,KAAKoF,MAAjBqd,SACL,GAAGzhB,EAAK,CACJ,IAAI+kB,EAAetD,EAASzhB,EAAKU,qBAAuB,GACxD+gB,EAASzhB,EAAKU,oBAAdN,OAAAwN,EAAA,EAAAxN,CAAA,GACO2kB,EACA/kB,GAGXhB,KAAKgF,SAAS,CAACyd,WAASO,gBAAgBhiB,EAAKU,oBAAoB,WAC7DokB,EAAYhlB,QAAgC,QAAtBglB,EAAYhlB,QAAoBsH,EAAKoc,UAAU,GAAGxjB,EAAKU,6DAOlEV,GAAK,IACf2d,EAAQ3e,KAAKoF,MAAbuZ,KACL,GAAG3d,EAAK,CACJ,IAAI+R,EAAU4L,EAAK3d,EAAKa,iBAAmB,GAC3C8c,EAAK3d,EAAKa,gBAAVT,OAAAwN,EAAA,EAAAxN,CAAA,GAAgC2R,EAAW/R,GAE/ChB,KAAKgF,SAAS,CAAC2Z,mDAMD3d,GAAK,IACd2d,EAAQ3e,KAAKoF,MAAbuZ,KACL,GAAG3d,EAAK,CACJ,IAAI+R,EAAU4L,EAAK3d,EAAKukB,gBAAkB,QACXS,GAA5BjT,EAAQ+L,mBACP/L,EAAQ+L,iBAAmB,IAE/B/L,EAAQ+L,iBAAiBjJ,KAAK7U,GAC9B2d,EAAK3d,EAAKukB,eAAVnkB,OAAAwN,EAAA,EAAAxN,CAAA,GAA+B2R,GAEnC/S,KAAKgF,SAAS,CAAC2Z,yDA8CK3d,GAAK,IAAAyP,EAAAzQ,KACpB2e,EAAQ3e,KAAKoF,MAAbuZ,KACL,GAAG3d,GAAQA,EAAKuB,0BAA4BvB,EAAKa,eAAe,CAC5D,IAAIohB,EAAMtE,EAAK3d,EAAKa,iBAAmB,GACvCohB,EAAI1D,uBAAyB0D,EAAI1D,wBAA0B,GAC3D0D,EAAIxF,cAAgBwF,EAAIxF,eAAiB,GACzC,IAAIuG,EAAgBhkB,KAAKC,MAAMihB,WAAW1a,SAASxF,KAAKiJ,KAAK,SAAAgc,GAAC,OAAIA,EAAE3Q,uBAAyBtU,EAAKsU,uBAClG2N,EAAIxF,cAAczc,EAAKuB,0BAAvBnB,OAAAwN,EAAA,EAAAxN,CAAA,GACOJ,EACAgjB,GAERf,EAAI1D,uBAAuB1J,KAAKoN,EAAIxF,cAAczc,EAAKuB,2BACtDoc,EAAK3d,EAAKa,gBAAkBohB,EAC5BjjB,KAAKgF,SAAS,CAAC2Z,QAAM,WACjB,IAAIuH,EAAqB,GACrBlC,EAAgBvT,EAAKxQ,MAAMihB,WAAW1a,SAASxF,KAAKiJ,KAAK,SAAAgc,GAAC,OAAIA,EAAE3Q,uBAAyBtU,EAAKsU,uBAClG,GAAG0O,EAAc/O,yBAAyBvM,OAAS,EAC/Csb,EAAc/O,yBAAyBrM,IAAI,SAACob,EAAc7c,GACtD+e,EAAmBrQ,KAAK,CACpBtT,yBAA2BuN,SAAS9O,EAAKuB,0BACzCmT,4BAA8BsO,EAActO,gCAGpDwQ,EAAmBxd,OAAS,GAAK+H,EAAKxQ,MAAMyW,SAAS9T,aAAuBsjB,SAC1E,GAAGlC,EAAczN,iCAAiC7N,OAAS,EAAE,CAC/Dsb,EAAczN,iCAAiC3N,IAAI,SAACob,EAAc7c,GAC9D+e,EAAmBrQ,KAAK,CACpBtT,yBAA2BuN,SAAS9O,EAAKuB,0BACzCmT,4BAA8BsO,EAAclN,wCAGpD,IAAIqP,EAAU,CACVnlB,KAAOklB,EACPlX,IAAM,CAAC1N,UAAY,yCAEvB4kB,EAAmBxd,OAAS,GAAK+H,EAAKxQ,MAAMyW,SAAS5T,aAA8BqjB,SACjF,GAAGnC,EAAc3M,+BAA+B3O,OAAS,EAAE,CAC7Dsb,EAAc3M,+BAA+BzO,IAAI,SAACob,EAAc7c,GAC5D+e,EAAmBrQ,KAAK,CACpBtT,yBAA2BuN,SAAS9O,EAAKuB,0BACzCmT,4BAA8BsO,EAAc1M,sCAGpD,IAAI6O,EAAU,CACVnlB,KAAOklB,EACPlX,IAAM,CAAC1N,UAAY,uCAEvB4kB,EAAmBxd,OAAS,GAAK+H,EAAKxQ,MAAMyW,SAAS5T,aAA8BqjB,SACjF,GAAGnC,EAActL,8BAA8BhQ,OAAS,EAAE,CAC5Dsb,EAActL,8BAA8B9P,IAAI,SAACob,EAAc7c,GAC3D+e,EAAmBrQ,KAAK,CACpBtT,yBAA2BuN,SAAS9O,EAAKuB,0BACzCmT,4BAA8BsO,EAAcpL,qCAGpD,IAAIuN,EAAU,CACVnlB,KAAOklB,EACPlX,IAAM,CAAC1N,UAAY,sCAEvB4kB,EAAmBxd,OAAS,GAAK+H,EAAKxQ,MAAMyW,SAAS5T,aAA8BqjB,2DAUxEnlB,GAAK,IAAAqQ,EAAArR,KACvB2e,EAAQ3e,KAAKoF,MAAbuZ,KACL,GAAG3d,EAAK,CACJ,IAAIuB,EAA2BvB,EAAK,GAAGuB,yBACvCnB,OAAOqU,KAAKkJ,GAAM/V,IAAI,SAACC,EAAI1B,GACvB,GAAGwX,EAAK9V,GAAK4U,eAAiBkB,EAAK9V,GAAK4U,cAAclb,GAA0B,CAC5E,IAAIkb,EAAgBkB,EAAK9V,GAAK4U,cAAclb,IAA6B,GACzEvB,EAAK4H,IAAI,SAAC7I,EAAMoH,GACZsW,EAAcvI,qBAAuBuI,EAAcvI,sBAAwB,GACxEnV,EAAM2C,gCACL+a,EAAcvI,qBAAqBnV,EAAM2C,iCAAzCtB,OAAAwN,EAAA,EAAAxN,CAAA,GAAgFrB,GAC3EA,EAAMqmB,wCACX3I,EAAcvI,qBAAqBnV,EAAMqmB,yCAAzChlB,OAAAwN,EAAA,EAAAxN,CAAA,GAAwFrB,GACnFA,EAAMwkB,sCACX9G,EAAcvI,qBAAqBnV,EAAMwkB,uCAAzCnjB,OAAAwN,EAAA,EAAAxN,CAAA,GAAsFrB,GACjFA,EAAMqkB,uCACX3G,EAAcvI,qBAAqBnV,EAAMqkB,sCAAzChjB,OAAAwN,EAAA,EAAAxN,CAAA,GAAqFrB,MAG7F4e,EAAK9V,GAAK4U,cAAclb,GAA4Bkb,EACpDpM,EAAKrM,SAAS,CAAC2Z,4DAKR3d,GAAK,IAAA2Q,EAAA3R,KACnB2e,EAAQ3e,KAAKoF,MAAbuZ,KACLvd,OAAOqU,KAAKkJ,GAAM/V,IAAI,SAACC,EAAI1B,GACvB,GAAGwX,EAAK9V,GAAK4U,cAAczc,EAAKuB,0BAA0B,CACtD,IAAIkb,EAAgBkB,EAAK9V,GAAK4U,cAAczc,EAAKuB,2BAA6B,GAC9Ekb,EAAcvI,qBAAuBuI,EAAcvI,sBAAwB,GAC3EuI,EAAcvI,qBAAqBlU,EAAK0B,iCAAxCtB,OAAAwN,EAAA,EAAAxN,CAAA,GAA+EJ,GAC/E2d,EAAK9V,GAAK4U,cAAczc,EAAKuB,0BAA4Bkb,EACzD9L,EAAK3M,SAAS,CAAC2Z,iDAId3d,GAAK,IAAAuL,EACYvM,KAAKoF,MAA1Bke,EADS/W,EACT+W,aAAa3E,EADJpS,EACIoS,KACf2E,GAAgB3E,EAAK2E,IACpBtjB,KAAKC,MAAMyW,SAAS9U,aAAQ,CAACC,eAAe8c,EAAK2E,GAAczhB,eAAeub,SAASpc,EAAKkG,QAEhGlH,KAAKgF,SAAS,CAACse,aAAc,uCAMvBxe,EAAEmW,GAAU,IACbgI,EAAOjjB,KAAKoF,MAAZ6d,IACLjjB,KAAKC,MAAMyW,SAAS9U,aAAQR,OAAAwN,EAAA,EAAAxN,CAAA,GAAI6hB,EAAL,CAASvhB,mBAAmBuZ,2CAMvDjb,KAAKgF,SAAS,CAACkd,YAAY,CAACrc,MAAK,KACjC7F,KAAKC,MAAMyW,SAASjV,aAAY,CAC5BD,sBAAuBxB,KAAKC,MAAMmF,MAAMzB,OAAOnC,sBAC/Cue,aAAc,eACdd,QAAQ,sDAOSje,EAAKlB,GACf,QAARA,GAGCE,KAAKC,MAAMyW,SAASjU,aAAuBrB,OAAAwN,EAAA,EAAAxN,CAAA,GACpCJ,6CAUCA,GAAK,IACZ2d,EAAQ3e,KAAKoF,MAAbuZ,KACF3d,GAAQ2d,IACPA,EAAK3d,EAAKa,gBAAVT,OAAAwN,EAAA,EAAAxN,CAAA,GACOud,EAAK3d,EAAKa,gBACVb,GAEPhB,KAAKgF,SAAS,CAAC2Z,SACf3e,KAAKC,MAAMyW,SAAS9U,aAAQR,OAAAwN,EAAA,EAAAxN,CAAA,GAAIJ,8CAqDxB8D,EAAGuhB,EAASpL,GACxBnW,EAAEC,iBACF,IAAI0d,EAAWziB,KAAKoF,MAAMqd,cACMuD,GAA5BvD,EAASxH,GAAW0D,OACpB8D,EAASxH,GAAW0D,KAAO,IAE/B,IAAIyE,EAAeX,EAASxH,GAAW0D,KACvCyE,EAAavN,KAAKwQ,GAClB5D,EAASxH,GAAW0D,KAAOyE,EAC3BpjB,KAAKgF,SAAS,CAAEyd,uDAEF3d,EAAGuhB,EAASpL,EAAW+F,GACrClc,EAAEC,iBACF/E,KAAKC,MAAMyW,SAASpU,aAAiB,CACjCT,eAAgBmf,EAChB1L,qBAAsB+Q,EAAQ/Q,qBAC9B2J,QAAS,4CAoHFna,GACXA,EAAEC,iBACF,IAAIkW,EAAYjb,KAAKoF,MAAMgW,YAAYH,UACnCC,EAAWlb,KAAKoF,MAAMgW,YAAYF,SAClCuH,EAAWziB,KAAKoF,MAAMqd,SACtB6D,EAAUtmB,KAAKoF,MAAMie,qBAC0B2C,GAA/CvD,EAASxH,GAAW0D,KAAKzD,GAAUqL,WACnC9D,EAASxH,GAAW0D,KAAKzD,GAAUqL,SAAW,IAElD,IAAIC,EAAmB/D,EAASxH,GAAW0D,KAAKzD,GAAUqL,SAC1DvmB,KAAKC,MAAMihB,WAAW1a,SAASxF,KAAK4H,IAAI,SAAC5H,EAAMmG,GACvCmf,EAAQG,SAASzlB,EAAKsU,uBACtBkR,EAAiB3Q,KAAK7U,KAG9ByhB,EAASxH,GAAW0D,KAAKzD,GAAUqL,SAAWC,EAC9CxmB,KAAKgF,SAAS,CAAEyd,WAAUY,gBAAiB,KAC3CrjB,KAAK0mB,uBAAuB5hB,+CASZ0c,EAAMJ,EAAYuF,GAClC,IAAIC,EAASC,MAAMC,KAAKtF,GACxBoF,EAASA,EAAO3E,OAAO,SAAUjT,GAC7B,OAA0B,IAAnBA,EAAIkQ,aAEf,IAAI6H,EAAU,EAL8BC,EAM1BJ,EAAOK,OAAQ7F,EAAW,EAAI,GAAzC8F,EANqC9lB,OAAA+lB,EAAA,EAAA/lB,CAAA4lB,EAAA,MAgB5C,OATAJ,EAAOK,OAAQN,EAAS,EAAI,EAAGO,GAC/BN,EAAOhe,IAAI,SAAC5H,EAAMmG,UACPnG,EAAKc,oBACLd,EAAKe,aACU,GAAnBf,EAAKke,aACJ6H,GAAmB,EACnB/lB,EAAKie,QAAU8H,KAGhBH,6CAEQpF,EAAMJ,EAAYuF,GACjC,IAAIC,EAASC,MAAMC,KAAKtF,GACpBuF,EAAU,EAF6BK,EAGzBR,EAAOK,OAAQ7F,EAAW,EAAI,GAAzC8F,EAHoC9lB,OAAA+lB,EAAA,EAAA/lB,CAAAgmB,EAAA,MAW3C,OAPAR,EAAOK,OAAQN,EAAS,EAAI,EAAGO,GAC/BN,EAAOhe,IAAI,SAAC5H,EAAMmG,UACPnG,EAAKc,oBACLd,EAAKe,aACZglB,GAAmB,EACnB/lB,EAAKie,QAAU8H,IAEZH,gDAGWpF,EAAMJ,EAAYuF,GACpC,IAAIC,EAASC,MAAMC,KAAKtF,GACpBuF,EAAU,EAFgCM,EAG5BT,EAAOK,OAAQ7F,EAAW,EAAI,GAAzC8F,EAHuC9lB,OAAA+lB,EAAA,EAAA/lB,CAAAimB,EAAA,MAW9C,OAPAT,EAAOK,OAAQN,EAAS,EAAI,EAAGO,GAC/BN,EAAOhe,IAAI,SAAC5H,EAAMmG,UACPnG,EAAKc,oBACLd,EAAKe,aACZf,EAAKie,QAAU8H,EACfA,GAAmB,IAEhBH,+CAQU1L,EAAUD,EAAW+G,GAAa,IAAApQ,EAAA5R,KAC/CiF,EAAQ,GACL0Z,EAAQ3e,KAAKoF,MAAbuZ,KACP1Z,EAAM8D,MAAQ,aACd9D,EAAMmb,QAAU,kCAChBnb,EAAM4N,OAAS,SAAA/N,GACX8M,EAAKmQ,uBAAuB7G,EAAUD,EAAW+G,EAAarD,IAElE3e,KAAKgF,SAAS,CAACC,0CAuBXH,EAAGoW,EAAUD,GAEjB,IAAIgI,EAAMjjB,KAAKoF,MAAMsZ,QACjB5O,SAASmT,EAAI/H,YAAcpL,SAASoL,IACpC+H,EAAIhI,UAAYnL,SAASmL,GACzBgI,EAAI/H,SAAWpL,SAASoL,KAExB+H,EAAIhI,UAAY,GAChBgI,EAAI/H,SAAW,IAEnBlb,KAAKgF,SAAS,CAAE0Z,QAASuE,kDAUPne,EAAGiO,EAASkI,EAAWC,GAAU,IAAArJ,EAAA7R,KAC9CijB,EAAQjjB,KAAKoF,MAAb6d,IACLne,EAAEC,iBACF,IAAIiK,EAAG5N,OAAAwN,EAAA,EAAAxN,CAAA,GACA6hB,EADA,CAEH/D,WAAa,EACbxd,mBAAqBoO,SAASiD,EAAQkI,aAE1Cjb,KAAKgF,SAAS,CAACgd,YAAclS,SAASiD,EAAQmI,WAAW,WACrDrJ,EAAK5R,MAAMyW,SAAS9U,aAAQoN,qDAYblK,GACnBA,EAAEC,iBACFa,IAAE,sCAAsCE,8CAM7BhB,GACXA,EAAEC,iBACF,IAAIuiB,EAAUtnB,KAAKoF,MAAMie,gBACzBiE,EAAQzR,KAAK/F,SAAShL,EAAEwB,OAAO/F,KAC/BP,KAAKgF,SAAS,CAAEqe,gBAAiBiE,oDAUbxiB,EAAG9D,GACvB8D,EAAEC,iBACF/E,KAAKgF,SAAS,CAACgO,eAAe,CAC1BnN,MAAK,EACL7E,KAAKI,OAAAwN,EAAA,EAAAxN,CAAA,GACEJ,mDASM8D,EAAG9D,GACpB8D,EAAEC,iBACF/E,KAAKgF,SAAS,CAAC8P,YAAY,CACvBjP,MAAK,EACL7E,KAAKI,OAAAwN,EAAA,EAAAxN,CAAA,GACEJ,yDAYY8D,EAAG9D,GAC1B8D,EAAEC,iBACF,IAAI8G,EAAoB7L,KAAKoF,MAAMyG,kBACnC7L,KAAKgF,SAAS,CAAC6G,kBAAkBzK,OAAAwN,EAAA,EAAAxN,CAAA,GAC1ByK,EADyB,CAE5BhG,MAAK,EACL7E,KAAKI,OAAAwN,EAAA,EAAAxN,CAAA,GACEJ,0CAQJ8D,GACPA,GAAKA,EAAEC,iBACP/E,KAAKgF,SAAS,CAAC6G,kBAAkB,CAC7BhG,MAAK,EACL7E,KAAK,IACPgS,eAAe,CACbnN,MAAK,EACL7E,KAAK,IACP8T,YAAY,CACVjP,MAAK,EACL7E,KAAK,IACPiE,OAAO,4CAOGH,EAAG2C,EAAWyT,GAC1BpW,EAAEC,iBADiC,IAE9B4Z,EAAQ3e,KAAKoF,MAAbuZ,KACFA,EAAKzD,IACJlb,KAAKC,MAAMyW,SAAS9U,aAAQR,OAAAiK,EAAA,EAAAjK,CAAA,CAACS,eAAe8c,EAAKzD,GAAUrZ,gBAAgB4F,EAAW3C,EAAEwB,OAAOvG,mDASrF+E,EAAG2C,EAAWyT,GAC5BpW,EAAEC,iBADmC,IAEhC4Z,EAAQ3e,KAAKoF,MAAbuZ,KACFA,EAAKzD,KACJyD,EAAKzD,GAAUzT,GAAa3C,EAAEwB,OAAOvG,MACrCC,KAAKgF,SAAS,CAAC2Z,qDAkDJ7Z,EAAG2C,EAAWyT,GAAS,IAAA5I,EAAAtS,KAEjC2e,EAAQ3e,KAAKoF,MAAbuZ,KACD5e,GAAQ,EACT+E,EAAEwB,OAAOihB,UACRxnB,GAAQ,GAEZ,IAAIynB,EAAaznB,EAAQ,EAAI,EAC1B4e,EAAKzD,KACJyD,EAAKzD,GAAUzT,GAAa1H,EAC5BC,KAAKgF,SAAS,CAAC2Z,QAAM,WACjBrM,EAAKrS,MAAMyW,SAAS9U,aAAQR,OAAAiK,EAAA,EAAAjK,CAAA,CAACS,eAAe8c,EAAKzD,GAAUrZ,gBAAgB4F,EAAW+f,8CAWpFzU,EAASkI,EAAWC,EAAUG,GAAe,IAAAoM,EAAAznB,KACvD,OAAQwR,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,MACFgT,GAAiB7J,EAAA7R,EAAAC,cAAA,UACf4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQ2iB,EAAKC,sBAAsB5iB,EAAG,CAACiO,UAASkI,YAAWC,cAAcnS,MAAM,cACrHyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBAAwB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,iBAG7ChE,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQ2iB,EAAKE,wBAAwB7iB,EAAG,CAACiO,UAASkI,YAAWC,cAAcnS,MAAM,oBACvHyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,gBAAkB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,eAGvChE,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAQ2iB,EAAKG,qBAAqB9X,SAASoL,GAAWpL,SAASmL,GAAWI,IAAkBtS,MAAM,UACxIyI,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,oBAAsB2R,EAAA7R,EAAAC,cAAA,QAAM4V,MAAM,2BAAZ,yDAS/B,IAAAqS,EAAA7nB,KAChB,OAAQwR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,oCAAoCyH,MAAO,CAAEC,QAAW,SAC3EiK,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,0BACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,eACV2R,EAAA7R,EAAAC,cAAA,iCAKR4R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mBACX2R,EAAA7R,EAAAC,cAACH,EAAA,EAAD,MACA+R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mCAC8BmmB,GAAvChmB,KAAKC,MAAMihB,WAAW1a,SAASxF,MAC7BwQ,EAAA7R,EAAAC,cAACkoB,EAAA,EAAD1mB,OAAA4E,OAAA,GAAchG,KAAKC,MAAnB,CACI8nB,iBAAkB/nB,KAClBgoB,SAAUhoB,KAAKC,MAAMihB,WAAW1a,SAASxF,KACzCyG,UAAW,UACX1H,MAAOC,KAAKoF,MAAMie,gBAClBpH,gBAAiBjc,KAAKioB,eACtBvgB,UAAW,UAM/B8J,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kCACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAClD,GAAQ+iB,EAAKnB,uBAAuB5hB,KAA5F,UACA0M,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAQ+iB,EAAKK,eAAepjB,KAAlF,mDAMFwe,GACVtjB,KAAKgF,SAAS,CAACse,wDAQJvQ,EAASkI,EAAWC,EAAU0D,GACzC,OAA0B,GAAtB7L,EAAQmM,WACD,GAEJ1N,EAAA7R,EAAAC,cAACuoB,GAAD/mB,OAAA4E,OAAA,CAAM6C,IAAKqS,GAAclb,KAAKC,MAA9B,CAAqC2e,SAAUA,EAAU5D,OAAQhb,KAAKgb,OAAQmE,eAAgBnf,KAAKmf,eAAgBC,cAAepf,KAAKof,cAAeC,eAAgBrf,KAAKqf,eAAiBC,UAAWtf,KAAKsf,UAAW7D,kBAAmBzb,KAAKyb,kBAAmBC,iBAAkB1b,KAAK0b,iBAAkBC,aAAc3b,KAAK2b,aAAc6D,qBAAsBxf,KAAKwf,qBAAsBC,oBAAqBzf,KAAKyf,oBAAqBC,gBAAiB1f,KAAK0f,gBAAiB3M,QAASA,EAASkI,UAAWA,EAAWC,SAAUA,EAAU9V,MAAOpF,KAAKoF,MAAOyW,cAAe7b,KAAK6b,cAAe6C,QAAS1e,KAAK0e,QAASrJ,uBAAwBrV,KAAKqV,uBAAwB4G,gBAAiBjc,KAAKic,gBAAiBH,gBAAiB9b,KAAK8b,gBAAiBC,kBAAmB/b,KAAK+b,kBAAmByB,uBAAwBxd,KAAKwd,uBAAwBD,qBAAsBvd,KAAKud,qBAAsBV,mBAAoB7c,KAAK6c,mBAAoBK,cAAeld,KAAKkd,cAAekL,cAAepoB,KAAKooB,cAAejS,2BAA4BnW,KAAKmW,2BAA4BU,qBAAsB7W,KAAK6W,qBAAsBwR,iBAAkBroB,KAAKqoB,iBAAkBlL,mBAAsBnd,KAAKmd,+DAS/oCpK,EAASkI,EAAWC,EAAUE,GAC3C,OAAO5J,EAAA7R,EAAAC,cAAA,OAAKiJ,IAAKuS,EAAavb,UAAU,wCACpC2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,wBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yBACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,wBACTkT,EAAQqC,4DAsDZ,IAUGkT,EAVHC,EAAAvoB,KAAAwO,EACuBxO,KAAKoF,MAAlCqd,EADMjU,EACNiU,SAAS9D,EADHnQ,EACGmQ,KAAKuD,EADR1T,EACQ0T,YAChBc,EAAmBhjB,KAAKoF,MAAxB4d,gBACD+D,EAAU,EACVyB,EAAY,GAwEhB,OAvEG7J,IACC6J,EAAYpnB,OAAOqnB,QAAQ9J,GAAMI,KAAK,SAASpf,EAAGqf,GAC9C,OAAOrf,EAAE,GAAGsf,QAAUD,EAAE,GAAGC,YAI/B+D,GAAmBP,IACnBO,EAAkB5hB,OAAOqU,KAAKgN,GAAU,IAE5C6F,EAAgB7F,EAASO,GACrB5hB,OAAOqU,KAAKgN,GAAU/Z,OAAS,EACjB8I,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACVmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uCAAuCqgB,IAAI,oBACtD1O,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,4BAA4ByH,MAAO,CAACmD,MAAOzK,KAAKoF,MAAMggB,oBAAoBplB,KAAKoF,MAAMggB,oBAAoB,KAAK,QAAUlF,IAAI,kBACrI9e,OAAOqU,KAAKgN,GAAU7Z,IAAI,SAACuZ,EAASlH,GACjC,IAAIja,EAAOyhB,EAASN,GACpB,OAAO3Q,EAAA7R,EAAAC,cAAA,MAAIC,UAAWsiB,GAAWmG,EAAc5mB,oBAAsB,SAAUwe,IAAK,SAAAA,GAAG,OAAIqI,EAAKtI,OAAOC,EAAIiC,KACvG3Q,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBAAuBmI,QAAS,SAAClD,GAAKA,EAAEC,iBAAiBwjB,EAAKvjB,SAAS,CAACge,gBAAgBb,MACnG3Q,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,YAAYmI,QAAS,SAAAlD,GAAC,OAAIyjB,EAAKrG,YAAYC,EAAQA,KAAU3Q,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,sBAC1F2R,EAAA7R,EAAAC,cAAA,YAAOoB,EAAK+e,cACZvO,EAAA7R,EAAAC,cAAA,QAAMC,UAAU,uCAKhC2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mBAAmBqgB,IAAI,iBAClC1O,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,gBAAgBmI,QAAS,SAAClD,GAAD,OAAOyjB,EAAKG,eAAclX,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,eAAlF,iBAEHqiB,EAAYrc,MAAQ2L,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCAAiCyH,MAAO,CAACiD,KAAK2X,EAAYlhB,KAAKoO,EAAE,OACrGoC,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACP2R,EAAA7R,EAAAC,cAACkS,EAAA,EAAD,CACIvJ,KAAMvI,KAAK2iB,QACXlb,UAAW,eACX1H,MAAOmiB,EAAYlhB,KAAK2hB,QAAQ5C,aAChCrY,UAAW,eACXpD,YAAY,EACZpE,SAAUF,KAAKwiB,cAEnBhR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,aACVuB,OAAOqU,KAAKgN,GAAU/Z,OAAS,GAAK8I,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,4BAA4BmI,QAAS,SAAAlD,GAAC,OAAIyjB,EAAK1F,cAAc/d,EAAEod,KAAc1Q,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,gBAA5G,WACrC2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAAlD,GAAC,OAAIyjB,EAAK3F,gBAAgB9d,EAAEod,KAAjF,YAMfoG,GACG9W,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+BACV2oB,GAAaA,EAAU9f,OAAS,GAC7B8f,EAAU5f,IAAI,SAAC+f,EAAQzN,GACvB,GAAGyN,EAAO,GAAGjnB,oBAAsB4mB,EAAc5mB,mBAC7C,OAA2B,GAAxBinB,EAAO,GAAGzJ,WAAwB,IACrC6H,GAAmB,EACZwB,EAAKK,eAAeD,EAAO,GAAIL,EAAc5mB,mBAAoBinB,EAAO,GAAI5B,MAI3FvV,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,cACX2R,EAAA7R,EAAAC,cAAA,UAAQoI,QAAS,SAAClD,GAAD,OAAKyjB,EAAK/D,UAAU1f,EAAEwjB,EAAc5mB,qBAAqB7B,UAAU,2BAApF,cAMF2R,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACVmJ,EAAA7R,EAAAC,cAAA,WACI4R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cAAcmI,QAAS,SAAClD,GAAD,OAAOyjB,EAAKG,eAAclX,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,eAAhF,iBAEHG,KAAKooB,cAAc,gEAKlB5O,GACV,OAAOhI,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mBAClB2R,EAAA7R,EAAAC,cAAA,OAAKsI,IAAKiP,MACV3F,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,SAAS2Z,0CAGhB1Z,GACV,IAAI+oB,EAAO,oBAQX,MAPW,QAAR/oB,EACC+oB,EAAO,aACM,SAAR/oB,EACL+oB,EAAO,eACM,UAAR/oB,IACL+oB,EAAO,cAEJrX,EAAA7R,EAAAC,cAAA,KAAGC,UAAWgpB,mDAEF,IAAAC,EAAA9oB,KAAA+O,EACW/O,KAAKoF,MAAnBme,GADGxU,EACZ0T,SADY1T,EACHwU,YACZS,EAAgBhkB,KAAKC,MAAMihB,WAAW1a,SAASxF,KAOnD,OANGuiB,IACCS,EAAgBA,EAAc/B,OAAO,SAAC4B,GAElC,OAAmD,IADxCA,EAAUzO,eAAe2T,cACxBrX,QAAQ6R,EAAWwF,kBAInCvX,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,gBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,uBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,sBACX2R,EAAA7R,EAAAC,cAAA,UACI4R,EAAA7R,EAAAC,cAAA,gCAEJ4R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,0BAAb,qCAEJ2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iCACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,aACX2R,EAAA7R,EAAAC,cAACopB,EAAA,EAAD,CAAM7f,GAAI,mBAAoBtJ,UAAU,iBAAgB2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,eAArE,eAIZ2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,qBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,mBACX2R,EAAA7R,EAAAC,cAACH,EAAA,EAAD,CAAQM,MAAOwjB,EAAYrjB,SAAU,SAAC4E,GAAKA,EAAEC,iBAAiB+jB,EAAK9jB,SAAS,CAACue,WAAYze,EAAEwB,OAAOvG,OAAO,QACzGyR,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,oCACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,8BACUmmB,GAAjBhC,GACCA,EAAcpb,IAAI,SAAC5H,EAAMmG,GACrB,OAAOqK,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,QAAQgJ,IAAK1B,EAAOoU,WAAS,EAACC,YAAa,SAAA1W,GAAC,OAAIgkB,EAAKtN,YAAY1W,EAAG9D,GAAM,KAC3FwQ,EAAA7R,EAAAC,cAAA,OAAKC,UAAW,wBAA0BsH,GACtCqK,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,iBACX2R,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,cACd2R,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,iBAGrB2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yCACVipB,EAAKG,cAAcjoB,EAAK8c,gBAAiB9c,EAAKoU,eAAe5D,EAAA7R,EAAAC,cAACopB,EAAA,EAAD,CAAM7f,GAAI,oBAAsBnI,EAAKsU,sBAAuB9D,EAAA7R,EAAAC,cAAA,KAAGC,UAAU,wBAU3K2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,+DAMvBuG,IAAO6K,QAAQ,8BACfjR,KAAKC,MAAMipB,QAAQrT,KAAK,8CAGnB,IAAAsT,EAAAnpB,KACL,OAAOwR,EAAA7R,EAAAC,cAAC4R,EAAA7R,EAAM0I,SAAP,KACHmJ,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,yCACX2R,EAAA7R,EAAAC,cAAA,MAAIC,UAAU,sBAAsBG,KAAKC,MAAMmF,MAAMzB,OAAOI,yBAC5DyN,EAAA7R,EAAAC,cAAA,UAAQC,UAAU,0BAA0BmI,QAAS,SAAClD,GAAQqkB,EAAKC,aAAnE,SAEJ5X,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,kBACX2R,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,eAENG,KAAKoF,MAAMyG,kBAAkBhG,MAAQ2L,EAAA7R,EAAAC,cAACypB,EAADjoB,OAAA4E,OAAA,GAAuBhG,KAAKoF,MAAWpF,KAAKC,MAA5C,CAAmD4E,WAAY7E,KAAK6E,WAAYkM,yBAA0B/Q,KAAK+Q,4BACpJ/Q,KAAKoF,MAAM4N,eAAenN,MAAQ2L,EAAA7R,EAAAC,cAAC0pB,EAADloB,OAAA4E,OAAA,GAAsBhG,KAAKoF,MAAWpF,KAAKC,MAA3C,CAAkD4E,WAAY7E,KAAK6E,WAAYiP,UAAW9T,KAAKiT,UAAWU,gBAAiB3T,KAAK2T,mBAClK3T,KAAKoF,MAAM0P,YAAYjP,MAAQ2L,EAAA7R,EAAAC,cAAC2pB,EAADnoB,OAAA4E,OAAA,GAAmBhG,KAAKoF,MAAWpF,KAAKC,MAAxC,CAA+C4E,WAAY7E,KAAK6E,WAAYiP,UAAW9T,KAAKiT,UAAWlC,yBAA0B/Q,KAAK+Q,4BAC1KS,EAAA7R,EAAAC,cAAA,eAAOI,KAAKwpB,mBAEhBhY,EAAA7R,EAAAC,cAAA,OAAKC,UAAU,2BACVG,KAAKypB,yBAGbzpB,KAAKoF,MAAMH,OAASuM,EAAA7R,EAAAC,cAAC8pB,GAAA,EAADtoB,OAAA4E,OAAA,GAAWhG,KAAKoF,MAAMH,MAAtB,CAA6BwE,aAAa,SAASC,OAAQ1J,KAAK6E,sBArvCtExE,aAwwCZsJ,gBAdf,SAAyBvE,GACrB,MAAO,CACH8b,WAAY9b,EAAM8b,WAClByB,QAASvd,EAAMud,QACfM,IAAK7d,EAAM6d,IACXrD,OAAQxa,EAAMwa,OACd6F,aAAcrgB,EAAMqgB,aACpBE,mBAAoBvgB,EAAMugB,mBAC1BD,uBAAwBtgB,EAAMsgB,uBAC9BE,kBAAmBxgB,EAAMwgB,oBAKlBjc,CAAyBqW,6PCrxClC2J,cAEF,SAAAA,EAAY1pB,GAAM,IAAAuE,EAAApD,OAAAwoB,EAAA,EAAAxoB,CAAApB,KAAA2pB,IACdnlB,EAAApD,OAAAyoB,EAAA,EAAAzoB,CAAApB,KAAAoB,OAAA0oB,EAAA,EAAA1oB,CAAAuoB,GAAA/kB,KAAA5E,KAAMC,KACDoE,QAAS,EAEd,IAAM0lB,EAAiBzlB,YAAWrE,GAElCuE,EAAK8E,QAAUka,IAAKhY,YAALpK,OAAA4oB,EAAA,EAAA5oB,CAAAoD,GACFulB,EACL,SAACpmB,GACGa,EAAKvE,MAAMyW,SAASvV,YAAKwC,KAG7B,SAAC0B,GACGb,EAAKvE,MAAMyW,SAAS3T,YAAgBsC,EAAO,aAAc,iBAE7D,IAGRb,EAAKY,MAAQ1B,YAAac,EAAKH,QAC/BG,EAAKY,MAAM6kB,KAAO,GAClBzlB,EAAK0B,SAAW1B,EAAK0B,SAASR,KAAdtE,OAAA4oB,EAAA,EAAA5oB,CAAAoD,IAChBA,EAAKY,MAAM8kB,SAAW,GACtB1lB,EAAKd,aAAeA,YAAac,EAAKH,QACtCG,EAAKY,MAAM+kB,aAAc,EACzB3lB,EAAKY,MAAMqd,SAAW,CAClBjhB,sBAAuB,GACvBue,aAAc,GACdd,QAAS,GACTjb,QAAU,GAEdQ,EAAKY,MAAM8W,eAAiB,GAC5B,IAAIkO,EAAiBtK,YAAkB7f,GA/BzB,OAgCduE,EAAKme,QAAUa,IAAKhY,YAALpK,OAAA4oB,EAAA,EAAA5oB,CAAAoD,GACL4lB,EACN,WACI5lB,EAAKvE,MAAMyW,SAASjV,YAAY+C,EAAKY,MAAMqd,YAE/C,GACA,IAEJje,EAAK0B,SAAW1B,EAAK0B,SAASR,KAAdtE,OAAA4oB,EAAA,EAAA5oB,CAAAoD,IAChBA,EAAKyB,WAAazB,EAAKyB,WAAWP,KAAhBtE,OAAA4oB,EAAA,EAAA5oB,CAAAoD,IAClBA,EAAKW,WAAaX,EAAKW,WAAWO,KAAhBtE,OAAA4oB,EAAA,EAAA5oB,CAAAoD,IA1CJA,mFAiDXxE,KAAKC,MAAMoqB,MAAMC,OAAO/pB,IACvBP,KAAKC,MAAMyW,SAASpW,YAAIN,KAAKC,MAAMoqB,MAAMC,OAAO/pB,uDAQ9B8kB,GACtB,IAAIA,EAAS/b,QAAQgK,aAAe+R,EAAS/b,QAAQiK,QACjD,GAAG8R,EAAS/b,QAAQ9C,SAAS+jB,QAA2C,aAAjClF,EAAS/b,QAAQpI,aACpD,GAAGlB,KAAKoF,MAAMf,QAAUrE,KAAKC,MAAMoqB,MAAMC,OAAO/pB,GAAG,CAC/CP,KAAKgF,SAAS,CAACX,QAAO,IACtB,IAAI6X,EAAiBmJ,EAAS/b,QAAQ9C,SAAS+jB,OAC5CrO,EAAejY,cACdiY,EAAejY,YAAc8H,KAAKC,MAAMkQ,EAAejY,cAE3D,IAAIN,EAASqG,IAAEwgB,KAAKtO,EAAe,CAAC,YAAY,YAAY,wBAAwB,0BAA0B,SAAS,gBACvHvY,EAAOM,YAAeN,EAAOM,YAAeN,EAAOM,YAAc,GACjEjE,KAAK0D,aAAe,CAACC,OAAOA,GAC5B3D,KAAKgF,SAAS,CAACrB,SAAOuY,yBAExB,GAAoC,aAAjCmJ,EAAS/b,QAAQpI,YAA2B,CAEjD,IAAIyC,EAAS3D,KAAKoF,MAAMzB,OAClBoC,EAAS3E,OAAO4E,OAAO,GAAIrC,EAAQ,CACrCnC,sBAAuB6jB,EAAS/b,QAAQ9C,SAAS8e,QAAQ9jB,wBAE7DxB,KAAKgF,SAAS,CAAErB,OAAQoC,EAAOokB,aAAY,sCAQ/CF,GAAM,IACLtmB,EAAU3D,KAAKoF,MAAfzB,OACAM,EAAeN,EAAfM,YACLA,EAAY4R,KAAZzU,OAAAC,EAAA,EAAAD,CAAA,GAAqB6oB,EAArB,CACI1pB,GAAIkqB,iBAERzqB,KAAKgF,SAAS,CAACrB,OAAOvC,OAAAC,EAAA,EAAAD,CAAA,GACfuC,EADc,CAEbM,YAAaA,yCASd1D,EAAG0pB,GAAK,IACVtmB,EAAU3D,KAAKoF,MAAfzB,OACAM,EAAeN,EAAfM,YACDkD,EAAQ6C,IAAE0gB,UAAUzmB,EAAa,CAAC1D,GAAIA,IAC1C0D,EAAYgjB,OAAO9f,EAAO,EAAG8iB,GAC7BjqB,KAAKgF,SAAS,CAACrB,OAAOvC,OAAAC,EAAA,EAAAD,CAAA,GACfuC,EADc,CAEbM,YAAaA,yCAQd1D,GAAG,IACLoD,EAAU3D,KAAKoF,MAAfzB,OACAM,EAAeN,EAAfM,YACL+F,IAAEoH,OAAOnN,EAAY,SAAS0mB,GAC1B,OAAOA,EAAEpqB,IAAMA,IAEnB,IAAMwF,EAAM3E,OAAAC,EAAA,EAAAD,CAAA,GACLuC,EADK,CAERM,YAAaA,IAEjBjE,KAAKgF,SAAS,CAAErB,OAAQoC,qCAEnB,IAAAoV,EACuBnb,KAAKC,MAAzBqJ,EADH6R,EACG7R,QAAQqZ,EADXxH,EACWwH,QACHvhB,OAAAC,EAAA,EAAAD,CAAA,GACNpB,KAAKC,OAGZ,OAAO2qB,EAAAjrB,EAAAC,cAACgrB,EAAAjrB,EAAM0I,SAAP,MACLrI,KAAKoF,MAAM+kB,aAAeS,EAAAjrB,EAAAC,cAAA,OAAKC,UAAU,gBACvC+qB,EAAAjrB,EAAAC,cAAA,OAAKC,UAAU,uBACX+qB,EAAAjrB,EAAAC,cAAA,OAAKC,UAAU,4BACX+qB,EAAAjrB,EAAAC,cAAA,UACIgrB,EAAAjrB,EAAAC,cAAA,8BAGRgrB,EAAAjrB,EAAAC,cAAA,OAAKC,UAAU,8BACX+qB,EAAAjrB,EAAAC,cAACirB,EAAA,EAADzpB,OAAA4E,OAAA,GAAkBhG,KAAKoF,MAAvB,CACIsC,UAAW,SACXD,UAAW,SACXI,SAAU,SACVtH,GAAI,EACJR,MAAOC,KAAKoF,MAAMzB,OAAOK,OACzByY,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,GACnCrY,YAAY,EACZiE,KAAMvI,KAAK2iB,aAIvBiI,EAAAjrB,EAAAC,cAACkrB,EAAA,EAAD1pB,OAAA4E,OAAA,GAAWhG,KAAKC,MAAhB,CAAuB8nB,iBAAkB/nB,KAAMkG,SAAUlG,KAAKkG,SAAUD,WAAYjG,KAAKiG,WAAYd,WAAYnF,KAAKmF,WAAYoD,KAAMvI,KAAKsJ,QAASA,QAASA,EAASlE,MAAOpF,KAAKoF,MAAO2lB,MAAO/qB,KAAK0D,aAAcW,QAAQ,MAEhOrE,KAAKoF,MAAM+kB,aAAeS,EAAAjrB,EAAAC,cAACorB,EAAA,EAAD5pB,OAAA4E,OAAA,GAAkBhG,KAAKC,MAAvB,CAA8B8nB,iBAAkB/nB,KAAMuI,KAAMvI,KAAK2iB,QAASA,QAASA,EAASvd,MAAOpF,KAAKoF,MAAOf,QAAQ,EAAOygB,KAAK,EAAO5I,eAAgBlc,KAAKoF,MAAM8W,0BAlKrL7b,aA8KJsJ,sBAPf,SAAyBvE,GAErB,MAAO,CACHkE,QAFgBlE,EAAZkE,UAMGK,CAAyBggB,uBCxLxCsB,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/10.2d2e280e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID. \n    *With an arrow function, we have to pass it explicitly, \n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\nclass Search extends Component {\n    render() {\n        return <div className=\"search-container\">\n            <input type=\"text\" value={this.props.value || ''} onChange={this.props.onChange} className=\"promize-form-control\" placeholder=\"Search.. \" name=\"searchVal\" />\n            <i className=\"fa fa-search\"></i>\n        </div>\n    }\n\n}\n\nexport default Search;","import { \n    PENDING, FULFILLED, REJECTED,\n    PRODUCT, IMAGE_UPLOAD,TAB_THUMBNAIL_IMAGE, SECTION, TAB, TAB_ATTRIBUTE,TAB_ATTRIBUTE_VALUES,TAB_ATTRIBUTE_VALUES_LIST, SUB_TAB\n} from \"../../utility/constants\";\n/**\n * get the customizer product details\n * @param {Number} id \n */\nexport function get(id){\n    const method = 'POST';\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: 'getProductWithPK/',\n        data: {\n            id\n        },\n        payload: {receiveType:'editData'}\n    }\n}\n/**\n * Create/Update the customizer product\n * @param {Object} data \n */\nexport function save(data){\n    let method = 'POST';\n    data = {\n        ...data,\n        modelName:\"promize_customizer\",\n        idKey:\"promize_customizer_id\"\n    }\n    let url = 'createRecord'\n\tif(data.promize_customizer_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveSection(data){\n    data = {\n        ...data,\n        modelName:\"promize_section\",\n        idKey:\"promize_section_id\"\n    }\n\tlet method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_section_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SECTION}_${PENDING}`, `${SECTION}_${FULFILLED}`, `${SECTION}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab\",\n        idKey:\"promize_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function updateBulkRecord(data){\n    let method = 'POST';\n    let url = 'updateBulkRecord'\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'editData'}\n    }\n}\n\nexport function saveSubTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_sub_tab\",\n        idKey:\"promize_sub_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_sub_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SUB_TAB}_${PENDING}`, `${SUB_TAB}_${FULFILLED}`, `${SUB_TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function deleteRecord(data){\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: \"DELETE\",\n        url: \"deleteRecord\",\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttribute(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute\",\n        idKey:\"promize_tab_attribute_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE}_${PENDING}`, `${TAB_ATTRIBUTE}_${FULFILLED}`, `${TAB_ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTabAttributeValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute_values\",\n        idKey:\"promize_tab_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttributeTextValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_text_attribute_values\",\n        idKey:\"promize_tab_text_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function linkTabAttributeValues(data){\n    let method = 'POST'\n    let url = 'linkTabAttributeValues'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function linkTabAttributeClipartValues(data){\n    let method = 'POST'\n    let url = 'createBulkRecord'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function uploadBaseImage(file,typeName,name){\n    /**\n     * Upload image async action creators\n     * Hanlde the Pending, Fullfilled (Success), Rejected actions\n     *\n     * @return object\n     */\n\tconst formData = new FormData();\n    formData.append('file',file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType:'FormData',\n        url: 'uploadBaseImage',\n        data: formData,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function uploadTabImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function uploadTabThumbnailImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${TAB_THUMBNAIL_IMAGE}_${PENDING}`, `${TAB_THUMBNAIL_IMAGE}_${FULFILLED}`, `${TAB_THUMBNAIL_IMAGE}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport toastr from 'toastr';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport Input from '../../components/form/input';\nimport { SubmitButton } from \"../../components/form/SubmitButton\";\nimport { app } from '../../config/app';\nimport ImageUpload from '../../components/files/ImageUpload';\nimport noImages from '../../assets/images/no-image.png';\nimport Popup from '../../components/design/Popup'\n\nexport function initialState() {\n    const initialState = {\n        fields:\n        {\n            \"domain_id\": app.DOMAIN_ID,\n            \"modelName\" : \"promize_customizer\",\n            \"promize_customizer_id\": \"\",\n            \"promize_customizer_name\": \"\",\n            \"status\": true,\n            \"model_image\": [],\n            \"overlay_image\" : '',\n            \"overlay_position\" : '' \n        },\n        inputErrors: {},\n        isEdit: true,\n    };\n\n    return initialState;\n}\n\nexport const validation = (props) => {\n    const rules = {\n        \"promize_customizer_name\": \"required\",\n    }\n    return rules;\n}\n\nexport const sectionValidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass Forms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            views: {\n                'view_name': '',\n                'image_url': '',\n                'file_name': ''\n            },\n        }\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    showAddViewPopup(e) {\n        e.preventDefault();\n        this.setState({views:{\n            'view_name': '',\n            'image_url': '',\n            'file_name': ''\n        }},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    hideAddViewPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover').hide();\n        const views = this.state.views;\n        const newObj = Object.assign({}, views, {\n            view_name: '',\n            image_url: '',\n            file_name: ''\n        });\n        this.setState({ views: newObj });\n    }\n    handleUploadView(e) {\n        e.preventDefault();\n        const views = this.state.views;\n        if (views.view_name && views.image_url) {\n            if(!views.id){\n                this.props.saveView(views);\n            }else{\n                this.props.updateView(views.id,views);\n            }\n            this.hideAddViewPopup(e);\n        } else {\n            toastr.error(\"Add view name and base image\");\n        }\n    }\n    handleViewNameChange(e) {\n        e.preventDefault();\n        let fields = this.state.views;\n        const newObj = Object.assign({}, fields, {\n            view_name: e.target.value\n        });\n        fields = newObj;\n        this.setState({ views: fields });\n    }\n    handleEdit(views){\n        this.setState({views},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    componentWillReceiveProps(props) {\n        if (props.imageUpload.response !== this.props.imageUpload.response) {\n            this.handleUploadedImage(props);\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (!event.target.classList.contains('btn-popup')) {\n            $('.portlet-dropdown-menu').removeClass('show');\n            $('.portlet-dropdown-menu').addClass('hide');\n        }\n    }\n\n    handleUploadedImage(props) {\n        const response = props.imageUpload.response;\n        if (response.status && response.status === 200) {\n            const fields = this.state.views;\n            let newObj = Object.assign({}, fields, {\n                image_url: response.file.path,\n            });\n            this.setState({ views: newObj });\n        }\n    }\n    openImageOptions(e, index) {\n        e.preventDefault();\n        $('.index-' + index).removeClass('hide');\n        $('.index-' + index).addClass('show');\n    }\n\n    addView() {\n        return (<div className=\"promize-modal-cover\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Add New View\n                        </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-form-group mt-10\">\n                        <Input {...this.props}\n                            fieldName={'view_name'}\n                            value={this.state.views.view_name}\n                            labelName={\"View Name\"}\n                            onChange={(e) => { this.handleViewNameChange(e) }}\n                            validation={true}\n                        />\n                    </div>\n                    <ImageUpload {...this.props}\n                        labelName={\"View Image\"}\n                        fieldName={'image_file'}\n                        dataName={'image_file'}\n                        validation={false}\n                        imageType={\"base_image\"}\n                        image_url={this.state.views.image_url}\n                        header={'View Image'}\n                        value={this.state.views.file_name}\n                    />\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.hideAddViewPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.handleUploadView(e) }}>Upload</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    displayNoImage() {\n        return <div className=\"promize-no-data\">\n            <img src={noImages} />\n            <p className=\"mt-10\">No Views available</p>\n        </div>\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup = (e) => {\n        e && e.preventDefault();\n        this.setState({ popup: false })\n    }\n    delete = (e, data) => {\n        let popup = {};\n        popup.title = \"Remove View\";\n        popup.content = 'Do you want to remove this view?';\n        popup.submit = () => {\n            this.props.deleteView(data.id)\n        }\n        this.setState({ popup })\n    }\n    render() {\n        return <>\n        <form onSubmit={this.props.form.handleProductSubmit} method=\"POST\">\n            <div className=\"promize-card-body\">\n                <div className=\"df\">\n                    <div className=\"wd-30\">\n                        <Input {...this.props}\n                            fieldName={'promize_customizer_name'}\n                            value={this.props.state.fields.promize_customizer_name}\n                            labelName={\"Product Name\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"promize-card-header promize-card-innerheader\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Views</span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <button className=\"btn btn-links\" onClick={(e) => { this.showAddViewPopup(e) }}><i className=\"fa fa-plus\"></i> Add View</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-tab-option-container\">\n                    {this.props.state.fields.model_image && this.props.state.fields.model_image.length == 0 && this.displayNoImage()}\n                    {this.props.state.fields.model_image && this.props.state.fields.model_image.length > 0 &&\n                        <ul className=\"promize-tab-options\">\n                            {this.props.state.fields.model_image.map((data, index) => {\n                                return <li key={index} className=\"mr-15 mb-15\">\n                                    <div className=\"promize-tab-options-detail\">\n                                        <div className=\"promize-tab-option-header\">\n                                            <p className=\"tab-option-title\">{data.view_name}</p>\n                                            <div className=\"pormize-portlet-dropdown\">\n                                                <button className=\"btn button-dropdown\" onClick={(e) => this.openImageOptions(e, index)}><i className=\"fa fa-ellipsis-v\" ></i></button>\n                                                <div className={\"portlet-dropdown-menu index-\" + index}>\n                                                    <ul className=\"portlet-menu\">\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Edit\" onClick={e => this.handleEdit(data)}><i className=\"fa fa-pencil-alt\"></i> Edit</button></li>\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Delete\" onClick={e => this.delete(e, data)}><i className=\"fa fa-trash-alt\"></i> Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"tab-option-container\">\n                                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                                        </div>\n                                    </div>\n                                </li>\n                            })}\n                        </ul>}\n\n                </div>\n            </div>\n            <div className=\"promize-footer-actions\">\n                <NavLink to=\"/products\" className=\"btn btn-promize-secondary\">{\"Cancel\"}</NavLink>\n                <SubmitButton className=\"btn btn-promize-primary\" text={\"Next\"} response={this.props.product} />\n            </div>\n            {this.addView()}\n        </form>\n        {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup} />}\n        </>\n\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload,\n    };\n}\n\nexport default connect(mapStateToProps)(Forms);","import _ from 'lodash';\nclass FabricFunction{\n    static getInstance(canvas) {\n        return new FabricFunction(canvas);\n    }\n    /**\n     * Create Fabric Function\n     * \n     * @param {Fabric Canvas | Object} canvas Fabric js canvas\n     */\n    constructor(canvas){\n        this.canvas = canvas\n    }\n    setCanvas(canvas){\n        this.canvas = canvas \n    }\n    /**\n     * find the Object from the fabric canvas using the object name\n     * @param {string} name the object name\n     */\n    findByName(name){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['name', name]);\n        }\n    }\n    /**\n     * find the Object from the fabric canvas using the object id\n     * @param {string | number} id the object id\n     */\n    findById(id){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['id', id]);\n        }\n    }\n}\n\nexport default FabricFunction;","/**\n * Todo:\n *  - Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport toastr from 'toastr'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetOptionPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let optionView = {};\n        let optionViewPosition = {};\n        let modelImage = this.props.state.fields.model_image\n        let tabAttributeValueData = this.props.setOptionPosition.data.tabAttributeValueData\n        modelImage.map((data, index) => {\n            optionView[data.id] = \"\";\n            optionViewPosition[data.id] = \"\";\n        });\n        if (tabAttributeValueData.option_images && typeof tabAttributeValueData.option_images == \"string\") {\n            optionView = JSON.parse(tabAttributeValueData.option_images)\n        }\n        if (tabAttributeValueData.option_position && typeof tabAttributeValueData.option_position == \"string\") {\n            optionViewPosition = JSON.parse(tabAttributeValueData.option_position)\n        }\n\n        this.state.optionView = optionView\n        this.state.optionViewPosition = optionViewPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addOptionImage = this.addOptionImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, optionView, optionViewPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (optionView[modelId]) {\n                    let option_images = this.props.setOptionPosition.data.data.option_images\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            })\n        })\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addOptionImage(data) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"optionImage\")) {\n            toastr.warning(\"Option Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + data.image_url\n            let { optionView, optionViewPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = data.promize_images_id\n            optionViewPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = optionViewPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"optionImage\",\n                    name: \"optionImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the option image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setOptionImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"optionImage\",\n                name: \"optionImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, optionViewPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, optionViewPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"optionImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, optionViewPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                var option_images = this.props.setOptionPosition.data.data.promize_images ?this.props.setOptionPosition.data.data.promize_images :  this.props.setOptionPosition.data.optionData.option_images;\n                if (optionView[modelId]) {\n                   let image = option_images ? option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id }) : {}\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { optionView, optionViewPosition } = this.state\n        this.props.updateTabAttributeValues({\n            promize_tab_attribute_values_id: this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_values_id,\n            promize_tab_attribute_id : this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_id,\n            option_images: JSON.stringify(optionView),\n            option_position: JSON.stringify(optionViewPosition)\n        })\n        toastr.success(\"Option Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, optionView, optionViewPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = \"\"\n            optionViewPosition[currnetModelImage.id] = \"\"\n            this.setState({ optionView, optionViewPosition, fields: \"\" })\n            toastr.success(\"The option image is removed\")\n            canvas.remove(optionImageObj)\n        }\n    }\n    /**\n     * Image Collection Section\n     */\n    imageCollection() {\n        let { optionView } = this.state\n        let optionViewImageId = Object.values(optionView)\n        return <div className=\"promize-image-collection\">\n            <div className=\"promize-img-coll df\">\n                <div className=\"promize-img-coll-detail wd-30\">\n                    <div className=\"promize-img-coll-title mb-10\">Image Collection</div>\n                    <div className=\"promize-img-coll-subtitle\">Some sample information about the sample images in followed detailed description,Some sample information about the sample images in followed detailed description.</div>\n                </div>\n                <div className=\"promize-coll-images-section df df-flow wd-70\">\n                    {this.props.setOptionPosition.data.data.promize_images && this.props.setOptionPosition.data.data.option_images.map((data, index) => {\n                        let active = (optionViewImageId.indexOf(data.promize_images_id) != -1 ? true : false)\n                        return <div className={\"promize-coll-images-items \" + (active ? \"disabled\" : \"\")} key={index} onClick={(e) => { active ? e.preventDefault() : this.addOptionImage(data) }}>\n                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>Delete</button>\n        }\n        return '';\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Option Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <button className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></button>\n                                        <button className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></button>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    {this.props.setOptionPosition.data.data && this.imageCollection()}\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default SetOptionPosition;\n","/**\n * Todo:\n *  -  Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from './../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetTabPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance(\"\")\n        }\n        let modelImage = this.props.state.fields.model_image\n        let tabData = this.props.setTabPosition.data.tabData\n        let tabImages = {}\n        let tabImagesPosition = {}\n        modelImage.map((data, index) => {\n            tabImages[data.id] = \"\";\n            tabImagesPosition[data.id] = \"\";\n        });\n        if (tabData.tab_images) {\n            tabImages = JSON.parse(tabData.tab_images)\n        }\n        if (tabData.tab_images_position) {\n            tabImagesPosition = JSON.parse(tabData.tab_images_position)\n        }\n\n        this.state.tabImages = tabImages\n        this.state.tabImagesPosition = tabImagesPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addTabImage = this.addTabImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentWillReceiveProps(props) {\n        if (!props.imageUpload.isFetching && !props.imageUpload.isError && this.props.imageUpload.isFetching !== props.imageUpload.isFetching) {\n            this.handleTabImage(props);\n        }\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, tabImages, tabImagesPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            })\n        })\n    }\n    handleTabImage(props) {\n        if (props.imageUpload && props.imageUpload.response) {\n            this.addTabImage(props.imageUpload.response.file.path)\n        }\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addTabImage(image) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"tabImage\")) {\n            toastr.warning(\"Tab Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + image\n            let { tabImages, tabImagesPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = image\n            tabImagesPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = tabImagesPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"tabImage\",\n                    name: \"tabImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the Tab image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setTabImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"tabImage\",\n                name: \"tabImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, tabImagesPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, tabImagesPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"tabImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, tabImagesPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { tabImages, tabImagesPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { tabImages, tabImagesPosition } = this.state\n        this.props.updateTabImages({\n            promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n            tab_images: JSON.stringify(tabImages),\n            tab_images_position: JSON.stringify(tabImagesPosition)\n        })\n        toastr.success(\"Tab Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, tabImages, tabImagesPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let tabImageObj = fabricFunction.findByName(\"tabImage\")\n        if (tabImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = \"\"\n            tabImagesPosition[currnetModelImage.id] = \"\"\n            this.setState({ tabImages, tabImagesPosition, fields: \"\" })\n            toastr.success(\"The tab image is removed\")\n            canvas.remove(tabImageObj)\n        }\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"tabImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Tab Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    <div className=\"df-js-center mt-20\">\n                        <div className=\"wd-25\">\n                            <div className=\"upload-image\">\n                                <ImageUpload\n                                    {...this.props}\n                                    form={this.props.imageForm}\n                                    labelName={\"Tab image\"}\n                                    fieldName={'tab_file'}\n                                    dataName={'tab_file'}\n                                    validation={false}\n                                    value={\"\"}\n                                    image_url={\"\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetTabPosition);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from '../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetBoundary extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let modelImage = this.props.state.fields.model_image\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:moving', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:scaling', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n    * call back front the fabric when scale or move the object\n    * @param {FabricObject} obj \n    */\n    positionChangeCallback = obj => {\n        let { fields, fabricFunction, currentView, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        let overlay = fabricFunction.findByName(\"overlay\")\n        if (overlay) {\n            var clipRect = new fabric.Rect({\n                left: obj.left - (overlay.width / 2),\n                top: obj.top - (overlay.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                fill: '',\n            });\n            overlay.set(\"clipPath\", clipRect)\n            canvas.renderAll()\n            this.setState({\n                fields: {\n                    ...fields,\n                    x: obj.left,\n                    y: obj.top,\n                    width: obj.getScaledWidth(),\n                    height: obj.getScaledHeight(),\n                }\n            })\n        }\n    }\n    addBoundary(baseImage) {\n        const canvas = this.state.canvas\n        var rect = new fabric.Rect({\n            left: 0,\n            top: 0,\n            width: canvas.width,\n            height: canvas.height,\n            fill: '#777',\n            selectable: false,\n            opacity: 0.7\n        });\n        canvas.add(rect);\n        this.addOverlayImage(baseImage, () => {\n            var rectRed = new fabric.Rect({\n                left: (canvas.width - 100) / 2,\n                top: (canvas.height - 100) / 2,\n                width: 100,\n                height: 100,\n                fill: '',\n                imageWidth: canvas.width,\n                imageHeight: canvas.height,\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasRotatingPoint: false,\n                productimizeType: 'boundary',\n                name: \"boundaryCtrl\"\n            });\n            canvas.add(rectRed);\n            canvas.renderAll()\n        })\n    }\n    addOverlayImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            var clipRect = new fabric.Rect({\n                left: -50,\n                top: -50,\n                width: 100,\n                height: 100,\n                fill: ''\n            });\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n                clipPath: clipRect,\n                selectable: false,\n                name: \"overlay\"\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n    * View Thmubnail Section\n    */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView = index => {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage) })\n        })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let {canvas } = this.state\n        object.set(data)\n        canvas.trigger('object:modified', { target: object })\n        object.setCoords();\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange = event => {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"boundaryCtrl\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos\n            this.changeCanvasData({ left }, object,true)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos \n            this.changeCanvasData({ top }, object,true)\n        } else if ((event.target.id === 'width')) {\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                width: width\n            }\n            this.changeCanvasData({ width }, object,true)\n        } else if ((event.target.id === 'height')) {\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                height: height\n            }\n            this.changeCanvasData({ height }, object,true)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                {/* <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div> */}\n            </div>\n        </React.Fragment>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-primary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n        return '';\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e){ \n        // let {tabImages,tabImagesPosition} = this.state\n        console.log(this.props.setBoundary)\n        // this.props.updateTabImages({\n        //     promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n        //     tab_images: JSON.stringify(tabImages),\n        //     tab_images_position: JSON.stringify(tabImagesPosition)\n        // })\n        toastr.success(\"Boundary / Default View Updated Successfully\")\n        this.props.closePopup(e)\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Boundary / Default View</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div>\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetBoundary);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport Switchtoggle from '../../../components/form/switchtoggle';\nimport { SimpleSelect } from '../../../components/form/SimpleSelect';\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n    render() {\n        let promize_attribute_values = this.props.promize_attribute_values\n        let tab_attribute_values = this.props.tab_attribute_values ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-cube\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i> <span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\"> <table className=\"promize-table table-options table-action\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Code</th>\n                                            <th>Image</th>\n                                            <th>Thumbnail</th>\n                                            <th>SKU</th>\n                                            <th>Price ($)</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                       {tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                            let tabAttributeValueData = tab_attribute_values[key]\n                                            let data = promize_attribute_values.find((obj) => { return obj.promize_attribute_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                            data.option_images = [];\n                                            data.promize_images.map((img_data, index) => {\n                                                if (img_data.image_type == \"option_thubnail_image\") {\n                                                } else {\n                                                    data.option_images.push(img_data)\n                                                }\n                                            })\n                                         \n                                            return <tr key={index}>\n                                                <td>{data.option_name ? data.option_name : '-'}</td>\n                                                <td>{data.option_code ? data.option_code : '-'}</td>\n                                                <td><div className=\"promize-tbl-mi-cvr\"><ul className=\"promize-milist\">\n                                                    {(data.promize_images.length > 0) && data.promize_images.map((img_data, index) => {\n                                                        if (img_data.image_type == 'option_thubnail_image') {\n                                                            return '';\n                                                        }\n                                                        return <li key={index}>\n                                                            {img_data.image_url && <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img\" alt={\" \"} />}\n                                                        </li>\n                                                    })}\n                                                    {!(data.promize_images.length > 0) && <li>{\"-\"}</li>}\n                                                </ul></div></td>\n                                                <td><div className=\"promize-tbl-mi-cvr\">\n                                                {data.promize_images.map((img_data, index) => {\n                                                    if (img_data.image_type == \"option_thubnail_image\") {\n                                                        if(img_data.image_url){ return  <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img-sm\" alt={\" \"} />}\n                                                        else{\n                                                            return <div>{\"-\"}</div>\n                                                        }\n                                                    }\n                                                })}\n                                                </div>\n                                                </td>\n                                                <td>{data.option_sku ? data.option_sku : '-'}</td>\n                                                <td>{data.option_price ? data.option_price : '-'}</td>\n                                                <td>\n                                                {/* <button class=\"btn btn-tbl\"><i class=\"fa fa-pencil-alt\"></i><span class=\"promize-btn-description\">Edit</span></button> */}\n                                                <button class=\"btn btn-tbl\" onClick={(e) => { this.props.openSetOptionPositionPopup(e, { tabAttributeValueData, data }) }}><i class=\"far fa-object-group\"></i><span class=\"promize-btn-description\">Option Position</span></button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table></div>}\n        </>\n    }\n}\n\n\nexport default Options;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport { getAllCliparts, get } from '../../../actions/cliparts';\nimport noData from '../../../assets/images/no-data.png';\nimport _ from 'lodash'\nclass Cliparts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clipartList: {},\n            toggle: false\n        }\n        this.getAssociatedClipart = this.getAssociatedClipart.bind(this)\n    }\n    componentWillMount() {\n        this.getAssociatedClipart();\n    }\n    getAssociatedClipart(id) {\n        this.props.promize_attribute_clipart_values.length > 0 && this.props.promize_attribute_clipart_values.map((data, index) => {\n            let id = data.promize_domain_clipart_category_id.split(',');\n            id.map((id, index) => {\n                this.props.dispatch(get(id));\n            })\n        })\n\n    }\n    componentWillReceiveProps(props) {\n        if (!props.clipart.isFetching && !props.clipart.isError) {\n            let clipart = props.clipart.response.data, clipartList = this.state.clipartList;\n            clipartList[clipart.promize_domain_clipart_category_id] = clipart\n            this.setState({ clipartList: clipartList });\n        }\n    }\n    render() {\n        let promize_attribute_clipart_values = this.props.promize_attribute_clipart_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        let clipartList = this.state.clipartList;\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-grin-hearts\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { tab_attribute_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    <ul className=\"promize-clipart-options\">\n                        {\n                            tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                let tabAttributeValueData = tab_attribute_values[key]\n                                let optionData = tabAttributeValueData.promize_attribute_clipart_values_id ? tabAttributeValueData : promize_attribute_clipart_values.find((obj) => { return obj.promize_attribute_clipart_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                let clip_ids = optionData.promize_domain_clipart_category_id.split(',');\n                                return clip_ids.map((id, index) => {\n                                    let clipart_images = clipartList[id];\n                                    return clipart_images && clipart_images.promize_clipart_category_images.map((data, index) => {\n                                        let clipartImg = data.promize_product_clipart_image\n                                        return <li>\n                                            <div className=\"promize-clipart-thumb\">\n                                                {clipartImg ? <img src={app.APP_IMAGE_BASE_URL + clipartImg} /> : <img src={noData} />}\n                                                <p>{data.clipart_name}</p>\n                                            </div>\n                                        </li>\n                                    })\n                                })\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clipart: state.clipart,\n    };\n}\n\nexport default connect(mapStateToProps)(Cliparts);","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n\n    render() {\n        let promize_attribute_image_values = this.props.promize_attribute_image_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-images\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, {}) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                        </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                {\n                    tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                        let tabAttributeValueData = tab_attribute_values[key]\n                        let optionData = tabAttributeValueData.promize_attribute_image_values_id ? tabAttributeValueData : promize_attribute_image_values.find((obj) => { return obj.promize_attribute_image_values_id == tabAttributeValueData.promize_attribute_values_id })\n                        return <div className=\"promize-attribute-options\">\n                            <div><span>{\"Image Name\"}</span><span>{\":\"}</span><span>{optionData.image_name}</span></div>\n                            <div><span>{\"Image Price\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_price?optionData.image_price: '-'}</span></div>\n                            <div><span>{\"Image Sku\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_sku ? optionData.image_sku : '-'}</span></div>\n                            <div><span>{\"Image Format\"}</span><span>{\":\"}</span><span>{optionData.image_format}</span></div>\n                            <div><span>{\"Image Max Upload Size\"}</span><span>{\":\"}</span><span>{optionData.max_upload_size}</span></div>\n                            <div><span>{\"Image Min Upload Size\"}</span><span>{\":\"}</span><span>{optionData.min_upload_size}</span></div>\n                        </div>\n                    })\n                }\n            </div>}\n        </>\n    }\n}\n\nexport default Image;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { getAllFonts } from '../../../actions/fontfamily'\nimport { getAllFontSizes } from '../../../actions/fontsize'\nimport { getAllFontColors } from '../../../actions/fontcolor'\nclass Text extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fontSizes: {},\n            fonts: {},\n            fontColors: {},\n            toggle: false\n        }\n    }\n\n    componentWillMount() {\n        this.props.dispatch(getAllFontSizes());\n        this.props.dispatch(getAllFonts());\n        this.props.dispatch(getAllFontColors());\n    }\n\n    componentWillReceiveProps(props) {\n        if (!props.fonts.isFetching && !props.fonts.isError) {\n            let fonts = props.fonts.response.data, fontsList = {};\n            fonts.map((data, index) => {\n                fontsList[data.font_id] = data\n            })\n            this.setState({ fonts: fontsList });\n        }\n        if (!props.fontsizes.isFetching && !props.fontsizes.isError) {\n            let fontsizes = props.fontsizes.response.data, fontsList = {};\n            fontsizes.map((data, index) => {\n                fontsList[data.font_size_id] = data\n            })\n            this.setState({ fontSizes: fontsList });\n        }\n        if (!props.fontcolors.isFetching && !props.fontcolors.isError) {\n            let fontcolors = props.fontcolors.response.data, fontsList = {};\n            fontcolors.map((data, index) => {\n                fontsList[data.promize_font_color_id] = data\n            })\n            this.setState({ fontColors: fontsList });\n        }\n    }\n\n    render() {\n        let { fonts, fontSizes, fontColors } = this.state\n        let promize_attribute_text_values = this.props.promize_attribute_text_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-font\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { type: \"text\", tab_text_attribute_values: this.props.promize_attribute_text_values }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    {\n                        tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                            let tabAttributeValueData = tab_attribute_values[key]\n                            let optionData = tabAttributeValueData.promize_attribute_text_values_id ? tabAttributeValueData : promize_attribute_text_values.find((obj) => { return obj.promize_attribute_text_values_id == tabAttributeValueData.promize_attribute_values_id })\n                            let font_id = optionData.font_ids.split(',');\n                            let font_size_ids = optionData.font_size_ids.split(',')\n                            let font_color_ids = optionData.font_color_ids.split(',')\n                            return (<>\n                                <div className=\"df\">\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fonts).length > 0 && optionData && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font\"}</p><span className=\"promize-text-highlight-aa\">{fonts[optionData.default_font_family].font_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10\">{\"Fonts\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fonts && font_id.map((id, index) => {\n                                                    let font = fonts[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontSizes).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Size\"}</p><span className=\"promize-text-highlight-aa\">{fontSizes[optionData.default_font_size].font_size}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Sizes\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontSizes && font_size_ids.map((id, index) => {\n                                                    let font = fontSizes[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_size}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontColors).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Color\"}</p><span className=\"promize-text-highlight-aa\">{fontColors[optionData.default_color].font_color_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Colors\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontColors && font_color_ids.map((id, index) => {\n                                                    let font = fontColors[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_color_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            </>\n                            )\n                        })\n                    }\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fonts: state.fonts,\n        fontsizes: state.fontsizes,\n        fontcolors: state.fontcolors,\n    };\n}\n\nexport default connect(mapStateToProps)(Text);","import React from 'react';\n\nclass InputMultple extends React.Component {\n\n\tclassNameCheck() {\n\t\tconst validation = this.props.form.validation(this.props.fieldName)\n\t\tconst message = validation ? this.props.state.inputErrors[this.props.fieldName].message : '';\n\t\tconst classValidation = `form-group ${validation ? 'feild-wrong' : ''} ${this.props.value && !validation ? 'feild-sucess' : ''}`\n\t\tconst className = this.props.validation ? classValidation : 'form-group';\n\t\treturn { 'className': className, 'message': message, 'validation': validation };\n\t}\n\n\tinput() {\n\t\tconst validation = this.classNameCheck();\n\t\treturn (<React.Fragment><div className=\"promize-form-group\">\n\t\t\t<label htmlFor={this.props.fieldName} className=\"promize-form-control-label\">{this.props.labelName}{this.props.validation && <sup>*</sup>}</label>\n\t\t\t<textarea className=\"promize-form-control\"\n\t\t\t\ttype={this.props.inputType ? this.props.inputType : \"text\"}\n\t\t\t\tid={this.props.fieldName}\n\t\t\t\tstep={this.props.inputStep ? this.props.inputStep : \"\"}\n\t\t\t\tdata-type={this.props.dataType || \"text\"}\n\t\t\t\tdata-name={this.props.dataName}\n\t\t\t\tplaceholder={\" \"}\n\t\t\t\tname={this.props.fieldName}\n\t\t\t\tonBlur={this.props.onBlur || this.props.form.blurEventListner}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tonChange={this.props.onChange || this.props.form.handleFieldsChange}\n\t\t\t\tvalue={this.props.value}\n\t\t\t\tdata-validation-name={this.props.labelName}\n\t\t\t\tmaxLength={this.props.maxLength}\n\t\t\t\trows=\"2\" />\n\n\t\t\t{validation['validation'] && <span className=\"promize-form-error\">{`${this.props.labelName} ` + validation['message']}</span>}\n\t\t</div></React.Fragment>);\n\t}\n\n\trender() {\n\n\t\treturn (<React.Fragment>\n\t\t\t{this.input()}\n\t\t</React.Fragment>);\n\t}\n}\n\nexport default InputMultple;\n","import React from 'react'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport RadioButton from '../../components/form/radioButton';\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\nclass Subtab extends React.Component {\n    state = {\n        toggle: false,\n        highlight: false,\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    render() {\n        let {tabData, sectIndex, tabIndex, subTabIndex, parentTabData} = this.props\n        let {highlight} = this.state\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n\n        return <>\n            <div className={\"promize-dragable-tab-container  mb-20\"} draggable onDragStart={e => this.props.onSubTabDragStart(e, tabData, subTabIndex)} onDragOver={e => this.props.onSubTabDragOver(e)} onDrop={e => {this.props.onSubTabDrop(e, subTabIndex, sectIndex, parentTabData.promize_tab_id)}}>\n                <div className=\"promize-widget promize-subtab\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action df\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex, this.props.parentTabData)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                        <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {this.state.toggle && <div className={\"promize-widget-body\"}>\n                    <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                            <SimpleSelect\n                                                onChangeHandler={e => this.props.handleFieldBlur(e, 'default_view', tabIndex)}\n                                                data={this.props.productDetails.model_image ? this.props.productDetails.model_image : []}\n                                                optionText=\"view_name\"\n                                                enableEmptyOptionText = {false}\n                                                value={parseInt(tabData.default_view)}\n                                                name=\"default_view\"\n                                                labelName=\"Choose Default View\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        {<div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.tab_attribute && Object.keys(tabData.tab_attribute).length > 0 && Object.keys(tabData.tab_attribute).map((key, index) => {\n                                let tabAttributeData = tabData.tab_attribute[key]\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return <div className=\"promize-widget mb-15\" key={index}>\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_attribute_data_values={tab_attribute_data_values} {...tabAttributeData}  {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                </div>\n                            })}\n                        </div>}\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from the <b>Attributes List</b></p>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Subtab","import React, { Component } from 'react'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport SubTab from './subTab'\nimport RadioButton from '../../components/form/radioButton';\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\n\nclass Tabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hightlight: true,\n            toggle: false,\n            subTabHide: {},\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n      //  ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop(e, sectIndex, tabIndex){\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    getTabContent = (tabData, sectIndex, tabIndex, parentTabData, subTabIndex) => {\n        const data = {\n            tabData,\n            sectIndex,\n            tabIndex,\n            parentTabData, \n            subTabIndex\n        }\n        return <SubTab {...this.props} {...data}/>\n    }\n\n    render() {\n        const { highlight } = this.state\n        const displayTab = this.props.state.openTab\n        const tabs = this.props.state.tabs\n        let { tabData, sectIndex, tabIndex, indexVal } = this.props\n        let sorted_sub_tabs = (tabData.promize_sub_tabs && tabData.promize_sub_tabs.length) > 0 ? (tabData.promize_sub_tabs.sort((a, b)=>{\n            return a.sort_id - b.sort_id\n        })) : []\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <>\n            <div className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onTabDragStart(e, tabData, indexVal)} onDragOver={e => this.props.onTabDragOver(e, indexVal, sectIndex)} onDragLeave ={e=> this.props.onTabDragEnter(e, indexVal, sectIndex)} onDrop={e => {this.props.onTabDrop(e, indexVal, sectIndex)}}>\n                <div className=\"promize-widget\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                            <button className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"btn\" : \"btn toggle\"} onClick={(e) => { this.props.openTab(e, tabIndex, sectIndex) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {<div className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"promize-widget-body db\" : \"promize-widget-body dn\"}>\n                        <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                        <SimpleSelect\n                                            onChangeHandler={e => this.props.handleFieldBlur(e, 'default_view', tabIndex)}\n                                            data={this.props.productDetails.model_image ? this.props.productDetails.model_image : []}\n                                            optionText=\"view_name\"\n                                            enableEmptyOptionText = {false}\n                                            value={parseInt(tabData.default_view)}\n                                            name=\"default_view\"\n                                            labelName=\"Choose Default View\"\n                                        />\n                                         \n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey widget-body pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        <div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.promize_tab_attributes && Object.keys(tabData.promize_tab_attributes).length > 0 && <> { \n                             (tabData.promize_tab_attributes).map((data, index) => {\n                                let tabAttributeData = tabData.tab_attribute[data.promize_tab_attribute_id]\n                                if (!tabAttributeData) {\n                                    return false\n                                }\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return   <div key={index} className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onAttributeDragStart(e, tabData, (index+1))} onDragOver={e => this.props.onAttributeDragOver(e)} onDrop={e => {this.props.onAttributeDrop(e, (index+1), sectIndex, tabIndex)}}><div className=\"promize-widget mb-15\"  >\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_values} deleteAttributeFromTab={this.props.deleteAttributeFromTab} {...tabAttributeData}  {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} />}\n                                </div></div>\n                            })}</>}\n                        </div>\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop ={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from <b>Attributes List</b></p>\n                        </div>\n                        {tabData.promize_sub_tabs && tabData.promize_sub_tabs.length > 0 &&\n                            <div className=\"mt-15\">\n                                <div className=\"promize-attr-section\">\n                                    <h3 className=\"promize-attr-title\">Sub Tabs</h3>\n                                </div>\n                                {sorted_sub_tabs.map((subTabData, subTabIndex) => {\n                                    let subTab = tabs[subTabData.child_tab_id]\n                                    return subTab && <div className=\"sub-tab-content\" key={subTabIndex}>{this.getTabContent(subTab, sectIndex, subTabData.child_tab_id,tabData, (subTabIndex+1))}</div>\n                                })\n                                }\n                            </div>}\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Tabs","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport { getAllAttributes } from '../../actions/attributes';\nimport noData from '../../assets/images/no-data.png';\nimport CheckBox from '../../components/form/CheckBox';\nimport Search from '../../components/form/Search';\nimport {SetOptionPosition, SetTabPosition, SetBoundary} from \"../../components/form\"\nimport {Link} from 'react-router-dom'\nimport Form from '../../utility/Form';\nimport Tabs from './tab.jsx';\nimport { saveSection, saveTab, saveTabAttribute, linkTabAttributeValues,saveTabAttributeValues,uploadTabImage,uploadTabThumbnailImage,saveSubTab, linkTabAttributeClipartValues, deleteRecord, updateBulkRecord} from '../../actions/products';\nimport Input from '../../components/form/input';\nimport Popup from '../../components/design/Popup'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass SectionForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            editSection:{\n                show: false,\n                data: {}\n            },\n            tab_attribute:{},\n            tab_attribute_values:{},\n            tab:{\n                tab_name:'New Tab',\n                tab_description:'',\n                tab_images:'',\n                tab_images_position:'',\n                tab_layer_no: 0,\n                tab_required: 0,\n                overlay_image:'',\n                overlay_position:'',\n                image_color_settings:'',\n                tab_thumbnail:'',\n                tab_style:JSON.stringify({display:1, height:50, width:50}),\n                sort_id: 0,\n                default_view: 0,\n                is_default_tab: 0,\n                promize_attribute_values:[],\n                tab_attributes:[],\n                default_option: \"\",\n                is_sub_tab : 0,\n                status : 1\n            },\n            selectedTabs: [],\n            selectedSubTabs: [],\n            openTab: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            subTabIndex: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            setOptionPosition:{\n                show:false,\n                data:{}\n            },\n            setTabPosition: {\n                show:false,\n                data:{}\n            },\n            setBoundary: {\n                show: false,\n                data:{}\n            },\n            currnetTabId: '',\n            searchText: '',\n            activeSectionId: '',\n            highlight:false,\n            parentTabId : ''\n        }\n        this.tabImages = Form.getInstance(\n            this, {},\n             {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.tabThumbnailImages = Form.getInstance(\n            this, {},\n            {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabThumbnailImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.section = Form.getInstance(\n            this, {},\n            (fields) => {\n                console.log(\"alert\")\n            },\n            {},\n            {}\n        );\n        this.sectionRefs = {}\n        let sections = {}\n        let tabs = {};\n        this.props.productDetails && this.props.productDetails.promize_sections && this.props.productDetails.promize_sections.map((section,index)=>{\n            sections[section.promize_section_id] = {\n                ...section\n            }\n            section.promize_tabs.map((tab,tab_index)=>{\n                tabs[tab.promize_tab_id] = tab\n                tabs[tab.promize_tab_id].tab_attribute = {}\n                tab.promize_tab_attributes.map((attribute, attr_index)=>{\n                    tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attribute.promize_attribute\n                    if(attribute.promize_attribute){\n                        let attributeData = attribute.promize_attribute\n                        if(attribute.promize_tab_attribute_values){\n                            attributeData.tab_attribute_values = {}\n                            attribute.promize_tab_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_attribute_values[tab_attr_value.promize_tab_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_text_attribute_values){\n                            attributeData.tab_text_attribute_values = {}\n                            attribute.promize_tab_text_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_text_attribute_values[tab_attr_value.promize_tab_text_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_image_attribute_values){\n                            attributeData.tab_image_attribute_values = {}\n                            attribute.promize_tab_image_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_image_attribute_values[tab_attr_value.promize_tab_image_attribute_values_id] = tab_attr_value\n                            })\n                        }\n                        tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attributeData\n                        //tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id].attribute = attributeData\n                    }\n                })\n            })\n        })\n        this.state.sections = sections\n        this.state.tabs = tabs\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.openSetOptionPositionPopup = this.openSetOptionPositionPopup.bind(this);\n        this.openSetBoundaryPopup = this.openSetBoundaryPopup.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.createTab = this.createTab.bind(this);\n        this.addAttributeToTab = this.addAttributeToTab.bind(this);\n        this.saveSectionToState = this.saveSectionToState.bind(this);\n        this.saveTabToState = this.saveTabToState.bind(this);\n        this.saveTabAttributeToState = this.saveTabAttributeToState.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleSwitchChange = this.handleSwitchChange.bind(this)\n        this.handleFieldBlur = this.handleFieldBlur.bind(this)\n        this.saveTabAttributeValuesList = this.saveTabAttributeValuesList.bind(this)\n        this.updateTabAttributeValues = this.updateTabAttributeValues.bind(this)\n        this.updateTabImages = this.updateTabImages.bind(this)\n        this.setCurrentTab = this.setCurrentTab.bind(this)\n        this.actionButtons = this.actionButtons.bind(this)\n        this.saveTabAttributeValues = this.saveTabAttributeValues.bind(this)\n        this.openTab = this.openTab.bind(this)\n    }\n    setRef = (ref,key) => {\n        this.sectionRefs[key] = ref;\n    };\n     \n    componentWillMount() {\n        this.props.dispatch(getAllAttributes());\n        this.props.new && this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: this.props.state.fields.promize_customizer_name,\n            sort_id:1\n        }))\n    }\n    componentDidMount(){\n        let {sectionContainer,sectionAddBtn} = this.refs;\n        if(sectionContainer && sectionAddBtn){\n            let sectionContainerBoundBox = sectionContainer.getBoundingClientRect()\n            let sectionAddBtnBoundBox = sectionAddBtn.getBoundingClientRect()\n            let sectionWrapperWidth = sectionContainerBoundBox.width - sectionAddBtnBoundBox.width\n            this.setState({sectionWrapperWidth})\n        }\n    }\n    componentWillReceiveProps(newProps){\n        let parentTabId = this.state.parentTabId;\n        if(!newProps.section.isFetching && !newProps.section.isError && this.props.section.isFetching != newProps.section.isFetching){\n            this.saveSectionToState(newProps.section.response.records,newProps.section)\n        }\n        if(newProps.tab && newProps.tab.response !== this.props.tab.response && newProps.tab.method == \"POST\" && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            if(parentTabId){\n                let obj = {\n                    parent_tab_id : parentTabId,\n                    child_tab_id : newProps.tab.response.records.promize_tab_id\n                }\n                this.setState({parentTabId : ''},()=>{\n                    this.props.dispatch(saveSubTab(obj));\n                })\n            }\n            this.saveTabToState(newProps.tab.response.records)\n        } \n        if(newProps.tab && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            this.saveTabToState(newProps.tab.response.records)\n        }\n        if(newProps.subTab && !newProps.subTab.isFetching && !newProps.subTab.isError && this.props.subTab.isFetching != newProps.subTab.isFetching){\n            this.saveSubTabToState(newProps.subTab.response.records);\n        }\n        if(newProps.tabAttribute && !newProps.tabAttribute.isFetching && !newProps.tabAttribute.isError && this.props.tabAttribute.isFetching != newProps.tabAttribute.isFetching){\n            this.saveTabAttributeToState(newProps.tabAttribute.response.records);\n        }\n        if(newProps.tabAttributevalueslist && !newProps.tabAttributevalueslist.isFetching && !newProps.tabAttributevalueslist.isError && this.props.tabAttributevalueslist.isFetching != newProps.tabAttributevalueslist.isFetching){\n            this.saveTabAttributeValuesList(newProps.tabAttributevalueslist.response.records)\n        }\n        if(newProps.tabAttributevalues && !newProps.tabAttributevalues.isFetching && !newProps.tabAttributevalues.isError && this.props.tabAttributevalues.isFetching != newProps.tabAttributevalues.isFetching){\n            this.saveTabAttributeValues(newProps.tabAttributevalues.response.records)\n        }if(newProps.tabThumbnailImage && !newProps.tabThumbnailImage.isFetching && !newProps.tabThumbnailImage.isError && this.props.tabThumbnailImage.isFetching != newProps.tabThumbnailImage.isFetching){\n            this.saveTabImage(newProps.tabThumbnailImage.response.file)\n        }\n    }\n    /**\n     * Save Section Data to the state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSectionToState(data,sectionData){\n        let {sections} = this.state;\n        if(data){\n            let sectionsData = sections[data.promize_section_id] || {};\n            sections[data.promize_section_id] = {\n                ...sectionsData,\n                ...data\n            }\n        }\n        this.setState({sections,activeSectionId:data.promize_section_id},()=>{\n            sectionData.method && sectionData.method == \"POST\" && this.createTab({},data.promize_section_id)\n        });\n    }\n    /**\n     * save Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n        saveTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.promize_tab_id] || {};\n            tabs[data.promize_tab_id] = {...tabData,...data}\n        }\n        this.setState({tabs});\n    }\n    /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSubTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.parent_tab_id] || {};\n            if(tabData.promize_sub_tabs == undefined){\n                tabData.promize_sub_tabs = []\n            }\n            tabData.promize_sub_tabs.push(data);\n            tabs[data.parent_tab_id] = {...tabData}\n        }\n        this.setState({tabs});\n    }\n\n     /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    deleteAttributeFromTab = (e, promize_attribute_id, tab_id)=>{\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Attribute\";\n        popup.content = 'Do you want to remove this attribute?';\n        popup.submit = () => {\n            this.deleteAttributeFromTabFn(e, promize_attribute_id, tab_id)\n        }\n        this.setState({popup})\n    }\n    deleteAttributeFromTabFn = (e, promize_attribute_id, tab_id) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        let deleteIndex = 0\n        let selectedTab = {\n            ...tabs[parseInt(tab_id)]\n        }\n        let tab_attributes = tabs[parseInt(tab_id)].promize_tab_attributes || tabs[parseInt(tab_id)].tab_attribute;\n        if(tab_attributes){\n            tab_attributes.map((tab_attr, index)=>{\n                if(tab_attr.promize_attribute_id == promize_attribute_id){\n                    deleteIndex = tab_attr.promize_tab_attribute_id\n                    let obj = {\n                        ids : [tab_attr.promize_tab_attribute_id],\n                        modelName:\"promize_tab_attribute\",\n                        idKey:\"promize_tab_attribute_id\",\n                    }\n                    this.props.dispatch(deleteRecord(obj))\n                }\n            })\n        }\n       deleteIndex && delete selectedTab.tab_attribute[deleteIndex]\n        tabs[parseInt(tab_id)] = selectedTab\n        this.setState({tabs});\n    }\n    /**\n     * save tab attribute to state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveTabAttributeToState(data){\n        let {tabs} = this.state;\n        if(data && data.promize_tab_attribute_id && data.promize_tab_id){\n            let tab = tabs[data.promize_tab_id] || {};\n            tab.promize_tab_attributes = tab.promize_tab_attributes || [];\n            tab.tab_attribute = tab.tab_attribute || {};\n            let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n            tab.tab_attribute[data.promize_tab_attribute_id] = {\n                ...data,\n                ...attributeData\n            }\n           tab.promize_tab_attributes.push(tab.tab_attribute[data.promize_tab_attribute_id])\n            tabs[data.promize_tab_id] = tab\n            this.setState({tabs},()=>{\n                let tabAttributeValues = []\n                let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n                if(attributeData.promize_attribute_values.length > 0){\n                    attributeData.promize_attribute_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_values_id,\n                        })\n                    })\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeValues(tabAttributeValues))\n                }else if(attributeData.promize_attribute_clipart_values.length > 0){\n                    attributeData.promize_attribute_clipart_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_clipart_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_clipart_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_image_values.length > 0){\n                    attributeData.promize_attribute_image_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_image_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_image_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_text_values.length > 0){\n                    attributeData.promize_attribute_text_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_text_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_text_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }\n               \n            })\n        }\n    }\n    /**\n     * save section Tab Attribute value\n     * @param {*} data return data from linkTabAttributeValues Api\n     */\n    saveTabAttributeValuesList(data){\n        let {tabs} = this.state\n        if(data){\n            let promize_tab_attribute_id = data[0].promize_tab_attribute_id;\n            Object.keys(tabs).map((key,index)=>{\n                if(tabs[key].tab_attribute && tabs[key].tab_attribute[promize_tab_attribute_id]){\n                    let tab_attribute = tabs[key].tab_attribute[promize_tab_attribute_id] || {};\n                    data.map((value,index)=>{\n                        tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                        if(value.promize_tab_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_clipart_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_clipart_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_image_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_image_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_text_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_text_attribute_values_id] = {...value}\n                        }\n                    })\n                    tabs[key].tab_attribute[promize_tab_attribute_id] = tab_attribute;\n                    this.setState({tabs})\n                }\n            })\n        }\n    }\n    saveTabAttributeValues(data){\n        let {tabs} = this.state\n        Object.keys(tabs).map((key,index)=>{\n            if(tabs[key].tab_attribute[data.promize_tab_attribute_id]){\n                let tab_attribute = tabs[key].tab_attribute[data.promize_tab_attribute_id] || {};\n                tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                tab_attribute.tab_attribute_values[data.promize_tab_attribute_values_id] = {...data}\n                tabs[key].tab_attribute[data.promize_tab_attribute_id] = tab_attribute\n                this.setState({tabs})\n            }\n        })\n    }\n    saveTabImage(data){\n        let {currnetTabId,tabs} = this.state\n        if(currnetTabId && tabs[currnetTabId]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[currnetTabId].promize_tab_id,tab_icon:data.path}))\n        }\n        this.setState({currnetTabId: ''})\n    }\n    /**\n     * Create Tab\n     * @param {HtmEvent | Object} e \n     */\n    createTab(e,sectIndex){\n        let {tab} = this.state\n        this.props.dispatch(saveTab({...tab,promize_section_id:sectIndex}))\n    }\n    /**\n     * add section\n     */\n    addSection() {\n        this.setState({editSection:{show:false}})\n        this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: \"Section Name\",\n            sort_id:1\n        }))\n    }\n    /**\n     * Update the tab attribute values\n     * @param {object} data \n     */\n    updateTabAttributeValues(data,type){\n        if(type == \"text\"){\n\n        }else{\n            this.props.dispatch(saveTabAttributeValues({\n                ...data\n            }))\n        }\n        \n    }\n    /**\n     * Update Tab Images\n     * @param {HtmlEvent | Object} e Html Element\n     * @param {string} fieldName Field Name\n     */\n    updateTabImages(data){\n        let {tabs} = this.state\n        if(data && tabs){\n            tabs[data.promize_tab_id] = {\n                ...tabs[data.promize_tab_id],\n                ...data\n            }\n            this.setState({tabs})\n            this.props.dispatch(saveTab({...data}))\n        }\n    }\n    onChangeHandler = (e)=>{\n        e.preventDefault()\n        let {tabs} = this.state;\n        let promize_tab_id = e.target ? parseInt(e.target.getAttribute('promize_tab_id')) : ''\n        if(promize_tab_id && tabs){\n            let selectedTab = tabs[promize_tab_id] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style.display = e.target.value ? parseInt(e.target.value) : 1;\n            selectedTab = {\n                ...tabs[promize_tab_id] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[promize_tab_id] = selectedTab\n            this.setState({tabs})\n            this.props.dispatch(saveTab(tabs[promize_tab_id]))\n        }\n    }\n    /**\n     * On Drag Start\n     * @param {Event | Object} ev event object from the Drag\n     * @param {Object} item The drag Item\n     * @param {number} reorder Reorder number\n     */\n    onDragStart = (ev, item, reorder) => {\n        ev.dataTransfer.setData(\"id\", item[\"promize_attribute_id\"]);\n        ev.dataTransfer.setData(\"reorder\", reorder);\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    /**\n     * On Drop\n     * @param {Event | Object} ev event object from the Drag\n     * @param {number} sectIndex Index of the section\n     * @param {number} dropIndex Index of the drop positon \n     */\n    onDrop = (ev, sectIndex, dropIndex) => {\n        let id = ev.dataTransfer.getData(\"id\");\n        if(dropIndex != null && sectIndex != null){\n            this.props.attributes.response.data.map((data, index) => {\n                if(data.promize_attribute_id == id) this.addAttributeToTab(ev, data, sectIndex, dropIndex);\n            });\n        }\n        this.setState({ highlight: false });\n    };\n    /**\n     * add Tab to section\n     * \n     * @param {HtmlEvent | Object} e Html Event link click\n     * @param {number} tabdata Tab data\n     * @param {number} sectIndex section index\n     */\n    addTabToSection(e, tabdata, sectIndex) {\n        e.preventDefault();\n        let sections = this.state.sections;\n        if (sections[sectIndex].tabs == undefined) {\n            sections[sectIndex].tabs = [];\n        }\n        let selectedTabs = sections[sectIndex].tabs;\n        selectedTabs.push(tabdata);\n        sections[sectIndex].tabs = selectedTabs;\n        this.setState({ sections });\n    }\n    addAttributeToTab(e, tabdata, sectIndex, dropIndex){\n        e.preventDefault();\n        this.props.dispatch(saveTabAttribute({\n            promize_tab_id: dropIndex,\n            promize_attribute_id: tabdata.promize_attribute_id,\n            sort_id: 1\n        }))\n    }\n    /**\n     * Tab Drag Start\n     * @param {Event | Object} ev Event Obect\n     * @param {Object} item Tab promize attribute\n     * @param {Object} startIndex Start Index\n     */\n    onTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"startIndex\", startIndex);\n        ev.dataTransfer.setData(\"key\", \"tab\")\n        ev.dataTransfer.effectAllowed = \"copy\";\n        //this.openTab(ev, '', '');\n    }\n    onTabDragEnter = (ev, dropIndex, sectIndex) =>{\n       // ev.preventDefault();\n        ev.target.style['background'] = '';\n       // $(ev.target).removeClass(\"drag-effect\"); \n    }\n    onTabDragOver  = (ev, dropIndex, sectIndex) => {\n       // ev.preventDefault();\n        if(ev.target.getAttribute('class') == \"promize-widget-header\"){\n            ev.target.style['background'] = 'lightblue';\n        }\n       // $(ev.target).addClass(\"drag-effect\"); \n       ev.dataTransfer.effectAllowed = \"copy\";\n       \n    };\n    onTabDrop = (ev, dropIndex, sectIndex) => {\n        ev.target.style['background'] = '';\n        //$(ev.target).removeClass(\"drag-effect\"); \n        let startIndex = ev.dataTransfer.getData(\"startIndex\");\n        let key = ev.dataTransfer.getData(\"key\");\n        if(key && key == 'tab'){\n            let tabs = [], othertabs = [], tabsObject = {};\n            let tabState = this.state.tabs;\n            Object.keys(tabState).map((key, index)=>{\n                if(parseInt(tabState[key].promize_section_id) == parseInt(sectIndex) && tabState[key].is_sub_tab == 0){\n                    tabs.push(tabState[key])\n                }else{\n                    othertabs.push(tabState[key])\n                }\n            })\n            let list = tabs.sort((a, b)=>{\n                return a.sort_id - b.sort_id\n            })\n            let orderedTabs = this.reorderTabInSection(list, parseInt(startIndex), parseInt(dropIndex));\n            let Obj = {\"data\" : orderedTabs,\n                \"obj\" : {modelName:\"promize_tab\", idKey:\"promize_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            orderedTabs.length > 0 && orderedTabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            othertabs.length > 0 && othertabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            this.setState({tabs : tabsObject});\n        }\n    };\n\n    onSubTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"subTabStartIndex\", startIndex);\n        ev.dataTransfer.setData(\"subTabkey\", \"subtab\")\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    onSubTabDragOver = ev => {\n       // ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n    };\n    onSubTabDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"subTabStartIndex\");\n        let key = ev.dataTransfer.getData(\"subTabkey\");\n        let list = '';\n        if(key && key == 'subtab'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_sub_tabs\n            let orderedAttributes = this.reorderAttributeInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_sub_tabs = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_sub_tab\", idKey:\"promize_sub_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n    };\n\n    onAttributeDragStart = (ev, item, startIndex) => {\n         ev.dataTransfer.setData(\"keyval\", \"attribute\")\n         ev.dataTransfer.setData(\"attrStartIndex\", startIndex);\n         ev.dataTransfer.effectAllowed = \"copy\";\n     }\n     onAttributeDragOver = ev => {\n       //  ev.preventDefault();\n         ev.dataTransfer.dropEffect = \"copy\";\n     };\n     onAttributeDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"attrStartIndex\"); \n        let key = ev.dataTransfer.getData(\"keyval\");\n        let list = '';\n        if(key && key == 'attribute'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_tab_attributes\n            let orderedAttributes = this.reorderSubTabInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_tab_attributes = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_tab_attribute\", idKey:\"promize_tab_attribute_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n     };\n    /**\n     * Add Suby Tab to the Tab\n     * @param {Html | Object} e Html Event link click \n     */\n    addSubTabToTab(e) {\n        e.preventDefault();\n        let sectIndex = this.state.subTabIndex.sectIndex;\n        let tabIndex = this.state.subTabIndex.tabIndex;\n        let sections = this.state.sections;\n        let subtabs = this.state.selectedSubTabs;\n        if (sections[sectIndex].tabs[tabIndex].sub_tabs == undefined) {\n            sections[sectIndex].tabs[tabIndex].sub_tabs = [];\n        }\n        let selectedsub_tabs = sections[sectIndex].tabs[tabIndex].sub_tabs;\n        this.props.attributes.response.data.map((data, index) => {\n            if (subtabs.includes(data.promize_attribute_id)) {\n                selectedsub_tabs.push(data);\n            }\n        });\n        sections[sectIndex].tabs[tabIndex].sub_tabs = selectedsub_tabs;\n        this.setState({ sections, selectedSubTabs: [] });\n        this.closeTabSelectionPopup(e);\n    }\n    /**\n     * Reorder Tab in section\n     * @param {Array} list Reorder List\n     * @param {number} startIndex Start Index\n     * @param {number} endIndex End Index\n     * @returns {Array} result of the reorder\n     */\n    reorderTabInSection(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        result = result.filter(function (obj) {\n            return obj.is_sub_tab !== 1;\n        });\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            if(data.is_sub_tab != 1){\n                counter = counter+ 1\n                data.sort_id = counter;\n            }\n        })\n        return result;\n    }\n    reorderSubTabInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            counter = counter+ 1\n            data.sort_id = counter;\n        })\n        return result;\n    }\n\n    reorderAttributeInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            data.sort_id = counter;\n            counter = counter+ 1\n        })\n        return result;\n    }\n\n    /**\n     * delete Tab from the section\n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    deleteTabFromsection(tabIndex, sectIndex, parentTabId) {\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Tab\";\n        popup.content = 'Do you want to remove this tab?';\n        popup.submit = e => {\n            this.deleteTabFromsectionFn(tabIndex, sectIndex, parentTabId, tabs)\n        }\n        this.setState({popup})\n    }\n    deleteTabFromsectionFn = (tabIndex, sectIndex, parentTabId, tabs) => {\n        let obj = {\n            ids : [tabIndex],\n            modelName:\"promize_tab\",\n            idKey:\"promize_tab_id\",\n        }\n        if(tabs[tabIndex].is_sub_tab && tabs[parentTabId.promize_tab_id].promize_sub_tabs){\n        tabs[parentTabId.promize_tab_id].promize_sub_tabs = tabs[parentTabId.promize_tab_id].promize_sub_tabs.filter((data)=>{\n            return data.child_tab_id != tabIndex\n        })\n        }\n        delete tabs[tabIndex]\n        this.props.dispatch(deleteRecord(obj))\n        this.setState({tabs});\n    }\n    /**\n     * Open Tab Index\n     * @param {HtmlEvent | Object } e \n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    openTab(e, tabIndex, sectIndex) {\n      //  e.preventDefault();\n        let tab = this.state.openTab;\n        if (parseInt(tab.tabIndex) !== parseInt(tabIndex)) {\n            tab.sectIndex = parseInt(sectIndex);\n            tab.tabIndex = parseInt(tabIndex);\n        } else {\n            tab.sectIndex = '';\n            tab.tabIndex = '';\n        }\n        this.setState({ openTab: tab });\n\n    }\n    /**\n     * Open Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of the section\n     * @param {number} tabIndex Index of the tab\n     */\n    openTabSelectionPopup(e, tabData, sectIndex, tabIndex) {\n        let {tab}  = this.state\n        e.preventDefault();\n        let obj ={\n            ...tab,\n            is_sub_tab : 1,\n            promize_section_id : parseInt(tabData.sectIndex)\n        }\n        this.setState({parentTabId : parseInt(tabData.tabIndex)},()=>{\n            this.props.dispatch(saveTab(obj));\n        })\n        // let subTabIndex = this.state.subTabIndex;\n        // subTabIndex.sectIndex = sectIndex;\n        // subTabIndex.tabIndex = tabIndex;\n        // this.setState(subTabIndex);\n        // $('.promize-modal-cover-tab-selection').show();\n    }\n    /**\n     * Close Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    closeTabSelectionPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover-tab-selection').hide();\n    }\n    /**\n     * Select Sub tab\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    selectedSubtab(e) {\n        e.preventDefault();\n        let subTabs = this.state.selectedSubTabs;\n        subTabs.push(parseInt(e.target.id));\n        this.setState({ selectedSubTabs: subTabs });\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetTabPositionPopup(e, data) {\n        e.preventDefault();\n        this.setState({setTabPosition:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n     /**\n     * Open Set Boundary Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} Data Option Data Object\n     */\n    openSetBoundaryPopup(e, data) {\n        e.preventDefault();\n        this.setState({setBoundary:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetOptionPositionPopup(e, data) {\n        e.preventDefault();\n        let setOptionPosition = this.state.setOptionPosition\n        this.setState({setOptionPosition:{\n            ...setOptionPosition,\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup(e) {\n        e && e.preventDefault();\n        this.setState({setOptionPosition:{\n            show:false,\n            data:{}\n        },setTabPosition:{\n            show:false,\n            data:{}\n        },setBoundary:{\n            show:false,\n            data:{}\n        },popup: false})\n    }\n    /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleFieldBlur(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:e.target.value}))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleFieldChange(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = e.target.value;\n            this.setState({tabs});\n        }\n    }\n        /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleStyleFieldBlur = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.props.dispatch(saveTab(tabs[tabIndex]))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleStyleFieldChange = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.setState({tabs})\n        }\n    }\n    /**\n     * Handler Switch Change\n     * @param {Html | Object} e \n     * @param {string} fieldName \n     * @param {number} tabIndex \n     */\n    handleSwitchChange(e, fieldName, tabIndex){\n       // e.preventDefault();\n        let {tabs} = this.state\n        let value = false;\n        if(e.target.checked){\n            value = true\n        }\n        let checkedVal = value ? 1 : 0\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = value;\n            this.setState({tabs},()=>{\n                this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:checkedVal}))\n            });\n        }\n    }\n\n    /**\n     * \n     * @param {Object} tabData Tab Data\n     * @param {number} sectIndex Index of the section\n     * @param {*} tabIndex Index of the section\n     */\n    actionButtons(tabData, sectIndex, tabIndex, parentTabData) {\n        return (<React.Fragment>\n            {!parentTabData && <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openTabSelectionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Add Subtab\">\n                    <i className=\"fa fa-folder-open\"></i><span class=\"promize-btn-description\">Add Sub-Tab</span>\n                </button>\n            </li>}\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openSetTabPositionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Set Tab Position\">\n                    <i className=\"fa fa-image\"></i><span class=\"promize-btn-description\">Tab Image</span>\n                </button>\n            </li>\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.deleteTabFromsection(parseInt(tabIndex), parseInt(sectIndex),parentTabData) }} title=\"Delete\">\n                    <i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span>\n                </button>\n            </li>\n        </React.Fragment>\n        )\n    }\n    /**\n     * tab Selection Popup\n     */\n    tabSelectionPopup() {\n        return (<div className=\"promize-modal-cover-tab-selection\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Select Sub-Tabs\n                    </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-options\">\n                        <Search />\n                        <div className=\"promize-dragable-container\">\n                            {(this.props.attributes.response.data != undefined) &&\n                                <CheckBox {...this.props}\n                                    currentComponent={this}\n                                    dataList={this.props.attributes.response.data}\n                                    fieldName={'TabList'}\n                                    value={this.state.selectedSubTabs}\n                                    onChangeHandler={this.selectedSubtab}\n                                    labelName={\" \"}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.closeTabSelectionPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.addSubTabToTab(e) }}>Submit</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    setCurrentTab(currnetTabId){\n        this.setState({currnetTabId})\n    }\n    /**\n     * \n     * @param {Object} tabData Tab Data object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of Tab\n     */\n    addSelectedtab(tabData, sectIndex, tabIndex, indexVal) {\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <Tabs key={tabIndex} {...this.props} indexVal={indexVal} onDrop={this.onDrop} onTabDragStart={this.onTabDragStart} onTabDragOver={this.onTabDragOver} onTabDragEnter={this.onTabDragEnter}  onTabDrop={this.onTabDrop} onSubTabDragStart={this.onSubTabDragStart} onSubTabDragOver={this.onSubTabDragOver} onSubTabDrop={this.onSubTabDrop} onAttributeDragStart={this.onAttributeDragStart} onAttributeDragOver={this.onAttributeDragOver} onAttributeDrop={this.onAttributeDrop} tabData={tabData} sectIndex={sectIndex} tabIndex={tabIndex} state={this.state} actionButtons={this.actionButtons} openTab={this.openTab} deleteAttributeFromTab={this.deleteAttributeFromTab} onChangeHandler={this.onChangeHandler} handleFieldBlur={this.handleFieldBlur} handleFieldChange={this.handleFieldChange} handleStyleFieldChange={this.handleStyleFieldChange} handleStyleFieldBlur={this.handleStyleFieldBlur} handleSwitchChange={this.handleSwitchChange} setCurrentTab={this.setCurrentTab} displayNoData={this.displayNoData} openSetOptionPositionPopup={this.openSetOptionPositionPopup} openSetBoundaryPopup={this.openSetBoundaryPopup} selectedTabsList={this.selectedTabsList} tabThumbnailImages = {this.tabThumbnailImages} />\n    }\n    /**\n     * Select Tab \n     * @param {Object} tabData Tab data Object\n     * @param {number} sectIndex Index Section\n     * @param {*} tabIndex Index of tab\n     * @param {*} subTabIndex Index of subtab\n     */\n    selectedTabsList(tabData, sectIndex, tabIndex, subTabIndex) {\n        return <div key={subTabIndex} className=\"promize-dragable-tab-container mr-10\" >\n            <div className=\"promize-widget mb-10\">\n                <div className=\"promize-widget-header\">\n                    <h3 className=\"promize-widget-title\">\n                        {tabData.attribute_name}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    }\n    editSection = (id,keyData) =>{\n        let sectionX = this.sectionRefs[keyData].getBoundingClientRect().x || 0\n        let sectionWrapperX = this.refs[\"sectionWrapper\"].getBoundingClientRect().x || 0\n        let sectionEdit = this.state.sections[id]\n        let x = sectionX - sectionWrapperX \n        this.setState({editSection:{show:true,data:{section_id:id,section:sectionEdit,x}}})\n    }\n    sectionEdit = e => {\n        const editSection = this.state.editSection\n        const section = editSection.data.section\n        editSection.data.section = {...section,\n            section_name: e.target.value || \"\"\n        }\n        this.setState({editSection:{...editSection}})\n    }\n    saveSectionEdit = (e,editSection) => {\n        toastr.success(\"Section Name Updated\");\n        this.props.dispatch(saveSection({\n            promize_section_id:editSection.data.section.promize_section_id, \n            section_name:editSection.data.section.section_name\n        }))\n        this.setState({editSection:{show:false}})\n    }\n    sectionDelete = (e,editSection) => {\n        let popup = {};\n        popup.title = \"Remove Section\";\n        popup.content = 'Do you want to remove this section?';\n        popup.submit = () => {\n            this.sectionDeletefn(e,editSection)\n        }\n        this.setState({popup})\n    }\n    sectionDeletefn = (e,editSection) => {\n        const {sections} = this.state;\n        let sectionIndex = editSection.data.section.promize_section_id\n        let obj = {\n            ids : [sectionIndex],\n            modelName:\"promize_section\",\n            idKey:\"promize_section_id\",\n        }\n        delete sections[sectionIndex]\n        this.props.dispatch(deleteRecord(obj))\n        let activeSectionId = Object.keys(sections)[0]\n        this.setState({sections,activeSectionId,editSection:{show:false}});\n    }\n    /**\n     * Add section area\n     */\n    addSectionArea() {\n        const {sections,tabs,editSection} = this.state;\n        let {activeSectionId} = this.state;\n        let counter = 0\n        let tabsArray = []\n        if(tabs){\n            tabsArray = Object.entries(tabs).sort(function(a, b) {\n                return a[1].sort_id - b[1].sort_id;\n             })\n        }\n        let sectionRows,activeSection;\n        if(!activeSectionId && sections){\n            activeSectionId = Object.keys(sections)[0]\n        }\n        activeSection = sections[activeSectionId]\n        if (Object.keys(sections).length > 0) {\n            sectionRows = <React.Fragment>\n                <div className=\"promize-prdt-section-container mb-15\" ref=\"sectionContainer\">\n                    <ul className=\"promize-prdt-section-list\" style={{width:(this.state.sectionWrapperWidth?this.state.sectionWrapperWidth+\"px\":\"100%\")}} ref=\"sectionWrapper\">\n                        {Object.keys(sections).map((keyData, sectIndex) => {\n                            let data = sections[keyData];\n                            return <li className={keyData == activeSection.promize_section_id && \"active\"} ref={ref => this.setRef(ref,keyData)}>\n                                <div className=\"promize-section-name\" onClick={(e)=>{e.preventDefault();this.setState({activeSectionId:keyData})}}>\n                                    <span className=\"edit-icon\" onClick={e => this.editSection(keyData,keyData)}><i className=\"fa fa-pencil-alt\"></i></span>\n                                    <span>{data.section_name}</span>\n                                    <span className=\"promize-section-status active\"></span>\n                                </div>\n                            </li>                      \n                        })}\n                    </ul>\n                    <div className=\"pormize-abs-rght\" ref=\"sectionAddBtn\">\n                        <button className=\"btn btn-links\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                    </div>\n                    {editSection.show && <div className=\"promize-card promize-card-edit\" style={{left:editSection.data.x+\"px\"}}>\n                    <div className=\"promize-card-body\">\n                            <Input\n                                form={this.section}\n                                fieldName={'section_name'}\n                                value={editSection.data.section.section_name}\n                                labelName={\"Section Name\"}\n                                validation={false}\n                                onChange={this.sectionEdit}\n                            />\n                            <div className=\"df df-end\">\n                                {Object.keys(sections).length > 1 && <button className=\"btn btn-promize-secondary\" onClick={e => this.sectionDelete(e,editSection)}><i className=\"fa fa-trash\"></i> Remove</button>}\n                                <button className=\"btn btn-promize-primary\" onClick={e => this.saveSectionEdit(e,editSection)}>Save</button>\n                            </div>\n                            \n                    </div>\n                </div>}\n                </div>\n                {activeSection &&\n                    <div className=\"promize-dragable-container \">\n                        {tabsArray && tabsArray.length > 0 &&\n                            tabsArray.map((tabKey, tabIndex) => {\n                            if(tabKey[1].promize_section_id == activeSection.promize_section_id){\n                                if(tabKey[1].is_sub_tab == 1) return ''\n                                counter = counter +1\n                                return this.addSelectedtab(tabKey[1], activeSection.promize_section_id, tabKey[0], counter)\n                            }\n                        })}\n                    \n                        <div className=\"text-right\">\n                            <button onClick={(e)=>this.createTab(e,activeSection.promize_section_id)} className=\"btn btn-promize-primary\">Add Tab</button>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        } else {\n            sectionRows = <React.Fragment>\n                <div>\n                    <button className=\"btn btn-rnd\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                </div>\n                {this.displayNoData(\"No Sections available\")}\n            </React.Fragment>\n        }\n        return sectionRows;\n    }\n    displayNoData(message) {\n        return <div className=\"promize-no-data\">\n            <img src={noData} />\n            <p className=\"mt-10\">{message}</p>\n        </div>\n    }\n    attributeIcon(type){\n        let icon = 'fa fa-grin-hearts'\n        if(type == 'text'){\n            icon = 'fa fa-font'\n        }else if(type == 'image'){\n            icon = 'fa fa-images'\n        }else if(type == 'option'){\n            icon = 'fa fa-cube'\n        }\n        return <i className={icon}></i>\n    }\n    displayAttributeList() {\n        const {sections,searchText} = this.state;\n        let attributeData = this.props.attributes.response.data\n        if(searchText){\n            attributeData = attributeData.filter((attribute)=>{\n                let name = attribute.attribute_name.toLowerCase()\n                return name.indexOf(searchText.toLowerCase()) !== -1\n            })\n        }\n        return (\n            <div className=\"promize-card\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Attributes List</span>\n                        </h3>\n                        <p className=\"promize-title-subtitle\">Drag and drop attributes to tabs</p>\n                    </div>\n                    <div className=\"promize-sm-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <Link to={\"/attributes/add/\"} className=\"btn btn-links\"><i className=\"fa fa-plus\"></i> Add New</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-card-body\">\n                    <div className=\"promize-options\">\n                        <Search value={searchText} onChange={(e)=>{e.preventDefault();this.setState({searchText:(e.target.value||'')})}}/>\n                        <div className=\"promize-dragable-container mt-15\">\n                            <ul className=\"promize-dragable-list\">\n                                {( attributeData != undefined) &&\n                                    attributeData.map((data, index) => {\n                                        return <li className=\"mb-10\" key={index} draggable onDragStart={e => this.onDragStart(e, data, false)}>\n                                            <div className={\"dragable-items df ind\" + index}>\n                                                <div className=\"option-action\">\n                                                    <button className=\"option-btn\">\n                                                        <i className=\"fa fa-bars\"></i>\n                                                    </button>\n                                                </div>\n                                                <div className=\"option-name df-al-center pl-10 wd-100\">\n                                                    {this.attributeIcon(data.attribute_type)}{data.attribute_name}<Link to={\"/attributes/edit/\" + data.promize_attribute_id} ><i className=\"fa fa-eye\"></i></Link>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    })}\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-footer-actions\">\n                </div>\n            </div>\n        )\n    }\n    saveData(){\n        toastr.success(\"Records saved successfully\");\n        this.props.history.push('/products');\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-page-title-wrapper df-sp-btwn\">\n                <h3 className=\"promize-page-title\">{this.props.state.fields.promize_customizer_name}</h3>\n                <button className=\"btn btn-promize-primary\" onClick={(e) => { this.saveData() }}>Save</button>\n            </div>\n            <div className=\"promize-row df\">\n                <div className=\"wd-70 mr-15\">\n                    {/* <div>{this.tabSelectionPopup()}</div> */}\n                        {this.state.setOptionPosition.show && <SetOptionPosition {...this.state} {...this.props} closePopup={this.closePopup} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                        {this.state.setTabPosition.show && <SetTabPosition   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabImages={this.updateTabImages}/>}\n                        {this.state.setBoundary.show && <SetBoundary   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                    <div> {this.addSectionArea()}</div>\n                </div>\n                <div className=\"wd-30 promize-sticky-20\">\n                    {this.displayAttributeList()}\n                </div>\n            </div>\n            {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup}/>}\n        </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        attributes: state.attributes,\n        section: state.section,\n        tab: state.tab,\n        subTab: state.subTab,\n        tabAttribute: state.tabAttribute,\n        tabAttributevalues: state.tabAttributevalues,\n        tabAttributevalueslist: state.tabAttributevalueslist,\n        tabThumbnailImage: state.tabThumbnailImage\n    };\n}\n\n\nexport default connect(mapStateToProps)(SectionForms);","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Form from '../../utility/Form';\nimport Forms,{initialState,validation} from './Forms';\nimport { save,get,uploadBaseImage,saveSection } from '../../actions/products';\nimport SectionForms, { sectionvalidation } from './sectionForm'\nimport {generateUnqId} from './../../utility/Utility'\nimport Switchtoggle from '../../components/form/switchtoggle';\n\nclass Edit extends Component {\n   \n    constructor(props){\n        super(props);\n        this.isEdit = true;\n\n        const formValidation = validation(props);\n\n        this.product = Form.getInstance(\n                this,formValidation,\n                (fields) => {\n                    this.props.dispatch(save(fields))\n                },\n                //file upload\n                (views) => {\n                    this.props.dispatch(uploadBaseImage(views, 'base_image', 'imageUpload'))\n                },\n                {}\n            );\n\n        this.state = initialState(this.isEdit);\n        this.state.view = {}\n        this.saveView = this.saveView.bind(this)\n        this.state.viewList = [];\n        this.initialState = initialState(this.isEdit);\n        this.state.openSection = false;\n        this.state.sections = {\n            promize_customizer_id: '',\n            section_name: '',\n            sort_id: '',\n            \"status\": true,\n        }\n        this.state.productDetails = ''\n        let sectValidation = sectionvalidation(props)\n        this.section = Form.getInstance(\n            this, sectValidation,\n            () => {\n                this.props.dispatch(saveSection(this.state.sections))\n            },\n            {},\n            {}\n        );  \n        this.saveView = this.saveView.bind(this)\n        this.updateView = this.updateView.bind(this)\n        this.deleteView = this.deleteView.bind(this)\n    }\n    /* componentDidMount() is invoked immediately after a component is mounted.\n    * Initialization that requires DOM nodes should go here.\n    * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n   */\n    componentDidMount(){\n        if(this.props.match.params.id){\n            this.props.dispatch(get(this.props.match.params.id));\n        }\n    }\n    \n    /* componentWillReceiveProps() is invoked before a mounted component receives new props.\n    *  If you need to update the state in response to prop changes (for example, to reset it),\n    *  you may compare this.props and nextProps and perform state transitions using this.setState() in this method.\n    */\n    componentWillReceiveProps(newProps) {\n        if(!newProps.product.isFetching && !newProps.product.isError){\n            if(newProps.product.response.record && newProps.product.receiveType === 'editData'){\n                if(this.state.isEdit && this.props.match.params.id){\n                    this.setState({isEdit:false});\n                    let productDetails = newProps.product.response.record\n                    if(productDetails.model_image){\n                        productDetails.model_image = JSON.parse(productDetails.model_image)\n                    }\n                    let fields = _.pick(productDetails,['domain_id','modelName','promize_customizer_id','promize_customizer_name','status','model_image']);\n                    fields.model_image = (fields.model_image) ? fields.model_image : []\n                    this.initialState = {fields:fields};\n                    this.setState({fields,productDetails});\n                }\n            }else if(newProps.product.receiveType === 'postData'){\n               // toastr.success(newProps.product.response.message);\n                let fields = this.state.fields;\n                const newObj = Object.assign({}, fields, {\n                    promize_customizer_id: newProps.product.response.records.promize_customizer_id\n                });\n                this.setState({ fields: newObj,openSection:true })\n            }\n        }\n   }\n   /**\n    * save the view data\n    * @param {object} view \n    */\n   saveView(view) {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        model_image.push({...view,\n            id: generateUnqId()\n        })\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n     /**\n     * \n     * @param {number} id \n     * @param {object} view \n     */\n    updateView(id,view){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        var index = _.findIndex(model_image, {id: id});\n        model_image.splice(index, 1, view);\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n    /**\n     * Delete the Model Image\n     * @param {Number} id \n     */\n    deleteView(id){\n        let {fields} = this.state;\n        let {model_image} = fields;\n        _.remove(model_image,function(n) {\n            return n.id == id;\n        })\n        const newObj = {\n            ...fields,\n            model_image: model_image\n        }\n        this.setState({ fields: newObj})\n    }\n    render() {\n        const { product,section } = this.props;\n        let formProps = {\n            ...this.props,\n            \n        }\n        return <React.Fragment>\n        {!this.state.openSection && <div className=\"promize-card\">\n            <div className=\"promize-card-header\">\n                <div className=\"promize-card-title mb-10\">\n                    <h3>\n                        <span>Edit Product</span>\n                    </h3>\n                </div>\n                <div className=\"promize-card-action df-end\">\n                    <Switchtoggle {...this.state}\n                        labelName={'Status'}\n                        fieldName={'status'}\n                        dataName={'status'}\n                        id={1}\n                        value={this.state.fields.status}\n                        spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                        checkValue={{ first: true, second: false }}\n                        validation={false} \n                        form={this.section}\n                        />\n                </div>\n            </div>\n            <Forms {...this.props} currentComponent={this} saveView={this.saveView} updateView={this.updateView} deleteView={this.deleteView} form={this.product} product={product} state={this.state} reset={this.initialState} isEdit={false} />\n        </div>}\n        {this.state.openSection && <SectionForms {...this.props} currentComponent={this} form={this.section} section={section} state={this.state} isEdit={false} new={false} productDetails={this.state.productDetails}/>}\n    </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { product } = state;\n    return {\n        product\n    };\n}\n\nexport default connect(mapStateToProps)(Edit);\n","module.exports = __webpack_public_path__ + \"static/media/no-data.12573e6e.png\";"],"sourceRoot":""}