{"version":3,"sources":["actions/gridActions.jsx","utility/grid.js","components/form/Search.jsx","components/form/switchtoggle.jsx","components/grid/NoRecord.jsx","assets/images/no-data.png","components/grid/Delete.jsx","components/grid/pagination/Entries.jsx","components/grid/pagination/Paginate.jsx","components/grid/Pagination.jsx","components/grid/Table.jsx"],"names":["getGridRecords","actionDetails","url","actionType","queryParams","method","types","concat","PENDING","FULFILLED","REJECTED","data","Object","objectSpread","breakcache","Math","random","payload","deleteGridRecord","id","idKey","modelName","PKey","deleteParams","params","isObject","isArray","defineProperty","statusUpdateGridRecord","status","created_date","updated_date","Grid","argsObj","classCallCheck","this","currentComponent","initialState","action","extraParams","manualPagination","listName","currentPage","parseInt","rowsPerPage","rowsPerPageOptions","5","10","25","50","100","sortByFieldName","sortType","selectedRow","selectedRowPerPage","handleColFiltersChange","bind","handleColSorting","handlePaginateClick","handleDateFiltersChange","handleGlobalFiltersChange","updateColFiltersState","toggleRow","toggleSelectAll","addSelectedCheckBox","isRowChecked","resetPagination","resetCheckbox","handleNumberEntryChange","handleColFiltersKeyDown","getHandlePaginate","getResponseData","totalRecords","filters","state","sortVal","filterKey","arguments","length","undefined","self","validFilters","keys","forEach","filter","filterName","_","isEmpty","subValidFilters","formatFilters","merge","filterVal","trim","JSON","stringify","replace","name","value","_this","parse","set","setState","getRecords","e","target","keyCode","which","handleFilter","preventDefault","str","letter","index","toLowerCase","search","selected","selectedDom","ReactDOM","findDOMNode","getAttribute","json","fields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","result","err","return","records","from","to","slice","page","pageRows","setExtraParams","props","dispatch","getQueryParams","deleteModalObj","console","error","statusUpdateObj","response","results","list","indexOf","setData","_this2","idIndex","splice","push","totalCheckBoxLength","$","prop","each","is","attr","Search","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","onChange","placeholder","Component","switchtoggle","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","changeButton","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","checked","checkValue","form","handleFieldsChangeByPlugin","changeMethod","react__WEBPACK_IMPORTED_MODULE_6___default","classWrapper","labelName","fieldName","htmlFor","React","NoRecord","rowSpan","rowspan","colSpan","colspan","isFetching","src","noData","module","exports","__webpack_require__","p","Delete","possibleConstructorReturn","getPrototypeOf","handleToogleModal","assertThisInitialized","confirmMsg","lowerCase","managementType","showModal","message","deleteDetails","document","on","event","trigger","deleteObj","confirmStatus","triggerCancel","grid","deleteRecord","react_default","style","display","onClick","handleDeleteConfirmation","Entries","rows","rowsSelected","map","key","options","Paginate","pager","pageStart","generatePagination","nextProps","setPage","totalPages","getPager","totalItems","pageSize","intermediate","startPage","endPage","ceil","pages","range","loadData","aria-hidden","pagesArr","links","disabled","Pagination","pagination_Entries","assign","pagination_Paginate","Table","recordDeleted","fixedActionSet","rowDelete","isError","toastr","success","getRecordsAfterDelete","locale","common","remove","isUndefined","grid_Delete","ref","instance","delete","pageTitle","subTitle","searchVal","addButton","children","grid_Pagination"],"mappings":"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","file":"static/js/0.54643ba2.chunk.js","sourcesContent":["import { isArray,isObject} from 'lodash';\nimport { GRID, PENDING, FULFILLED, REJECTED  } from \"../utility/constants\";\n\n/*Handling events with React elements is very similar to handling events on DOM elements\n* Inside a loop it is common to want to pass an extra parameter to an event handler.\n*the e argument representing the React event will be passed as a second argument after the ID.\n*With an arrow function, we have to pass it explicitly,\n*but with bind any further arguments are automatically forwarded\n*The bind() method creates a new function that, when called, has its this keyword set to the provided value\n*An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n*/\n\n/**\n * Get the records to Grid - async action creators\n * Hanlde the Pending, Fullfilled (Success), Rejected action\n *\n * @return object\n */\nexport function gridRecords(url, params){\n    return {\n\t\ttypes: [`${GRID}_${PENDING}`, `${GRID}_${FULFILLED}`, `${GRID}_${REJECTED}`],\n\t\tmethod: 'GET',\n\t\turl: url,\n\t\tqueryParams: params,\n\t\tpayload: {}\n\t}\n}\n\n/**\n * Get the records to Grid - async action creators\n * Hanlde the dynamic action based on given action type to Pending, Fullfilled (Success), Rejected actions\n *\n * @return object\n */\nexport function getGridRecords(actionDetails){\n\tconst {url, actionType, queryParams, method} = actionDetails;\n\treturn {\n\t\ttypes: [`${actionType}_${PENDING}`, `${actionType}_${FULFILLED}`, `${actionType}_${REJECTED}`],\n\t\tmethod: method,\n\t\turl: url,\n\t\t//queryParams: {...queryParams},\n    \tdata: method === 'POST' ? {...queryParams, breakcache:Math.random()} : {},\n\t\tpayload: {}\n\t}\n}\n\n/**\n * Deleted a record from Grid - async action creators\n * Hanlde the dynamic action based on given action type to Pending, Fullfilled (Success), Rejected actions\n *\n * @return object\n */\nexport function deleteGridRecord(actionDetails){\n    let {url, actionType, id, idKey, modelName,\n\t\tPKey, deleteParams} = actionDetails;\n    let params = {};\n    if(deleteParams && isObject(deleteParams)){\n        params = deleteParams;\n    }\n    else if(id && idKey){\n        id = isArray(id) ? id : [id];\n        params = { [idKey] : id };\n\t}\n\tparams.modelName = modelName;\n\tparams.idKey = PKey;\n\n    return {\n        types: [`${actionType}_${PENDING}`, `${actionType}_${FULFILLED}`, `${actionType}_${REJECTED}`],\n        method: 'DELETE',\n        url: `${url}`,\n        payload: {},\n        data: params\n    }\n}\n\n/**\n * Record status updated - async action creators\n * Hanlde the dynamic action based on given action type to Pending, Fullfilled (Success), Rejected actions\n *\n * @return object\n */\nexport function statusUpdateGridRecord(actionDetails){\n\tconst {url, actionType, modelName,\n\tPKey, params} = actionDetails;\n\tparams.status = (params.status == 1) ? 0 : 1\n\tparams.modelName = modelName;\n\tparams.idKey = PKey;\n\tdelete params.created_date;\n\tdelete params.updated_date;\n\treturn {\n\t\ttypes: [`${actionType}_${PENDING}`, `${actionType}_${FULFILLED}`, `${actionType}_${REJECTED}`],\n\t\tmethod: 'PUT',\n\t\turl: `${url}`,\n\t\tpayload: {},\n\t\tdata: params\n\t}\n}\n","import ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { getGridRecords, deleteGridRecord, statusUpdateGridRecord } from '../actions/gridActions';\n// import Authorization from './authorization';\n// import RequestFactory from \"./requestFactory\";\n\nclass Grid {\n  /**\n    * Get instance for utitlity\n    *\n    * @param object\n    * @param callback\n    * @return object\n    */\n  static getInstance(argsObj) {\n    return new Grid(argsObj);\n  }\n\n  /**\n    * Class initializer\n    *\n    * @param object\n    * @param callback\n    * @return void\n    */\n  constructor(argsObj) {\n    this.currentComponent = argsObj.currentComponent;\n    this.initialState = this.currentComponent.initialState(this.currentComponent);\n    this.url = argsObj.url; // Current action URL\n    this.action = argsObj.action || getGridRecords; // Current action method\n    this.actionType = argsObj.actionType; // Action type\n    this.method = argsObj.method || 'GET';\n    this.extraParams = argsObj.extraParams;\n    this.manualPagination = argsObj.manualPagination || false;\n    this.listName = argsObj.listName;\n    this.currentPage = parseInt(argsObj.currentPage) || 1; // Current page number\n    this.rowsPerPage = 10; // Records per page\n    this.rowsPerPageOptions = {\n      5: 5,\n      10: 10,\n      25: 25,\n      50: 50,\n      100: 100,\n    };\n    this.sortByFieldName = ''; // Table head column sort by field name\n    this.sortType = ''; // Default sort type -1 (-1 - DESC, 1 - ASC)\n    this.selectedRow = [];\n    this.selectedRowPerPage = 0;\n\n    this.handleColFiltersChange = this.handleColFiltersChange.bind(this);\n    this.handleColSorting = this.handleColSorting.bind(this);\n    this.handlePaginateClick = this.handlePaginateClick.bind(this);\n    this.handleDateFiltersChange = this.handleDateFiltersChange.bind(this);\n    this.handleGlobalFiltersChange = this.handleGlobalFiltersChange.bind(this);\n    this.updateColFiltersState = this.updateColFiltersState.bind(this);\n    this.toggleRow = this.toggleRow.bind(this);\n    this.toggleSelectAll = this.toggleSelectAll.bind(this);\n    this.addSelectedCheckBox = this.addSelectedCheckBox.bind(this);\n    this.isRowChecked = this.isRowChecked.bind(this);\n    this.resetPagination = this.resetPagination.bind(this);\n    this.resetCheckbox = this.resetCheckbox.bind(this);\n    this.handleNumberEntryChange = this.handleNumberEntryChange.bind(this);\n    this.handleColFiltersKeyDown = this.handleColFiltersKeyDown.bind(this);\n    this.getHandlePaginate = this.getHandlePaginate.bind(this);\n    this.getResponseData = this.getResponseData.bind(this);\n    this.totalRecords = 0;\n  }\n\n  /**\n    * build the query\n    *\n    * @return object\n    */\n  getQueryParams() {\n    const extraParams = this.extraParams || {};\n    const filters = (this.currentComponent.state && typeof this.currentComponent.state.filters === 'object') ? this.currentComponent.state.filters : {};\n    const params = {\n      ...extraParams,\n      currentPage: this.currentPage,\n      rowsPerPage: this.rowsPerPage,\n      sortVal: this.sortType,\n      ...filters,\n    };\n    return params;\n  }\n\n  /**\n     * Join the nested objects by using dots\n     *\n     * @param object filters\n     * @param string filterKey\n     */\n  formatFilters(filters, filterKey = '') {\n    const self = this;\n    let validFilters = {};\n    Object.keys(filters).forEach((filter) => {\n      const filterName = !_.isEmpty(filterKey) ? `${filterKey}.${filter}` : filter;\n      if (_.isObject(filters[filter])) {\n        const subValidFilters = self.formatFilters(filters[filter], filterName);\n        validFilters = _.merge(validFilters, subValidFilters);\n        return;\n      }\n\n      const filterVal = filters[filter].trim();\n      if (!_.isEmpty(filterVal)) {\n        validFilters[filterName] = filterVal;\n      }\n    });\n    return validFilters;\n  }\n\n  /**\n    * Build the head column filter to pass in query string\n    *\n    * @return object\n    */\n  getFilters(filters) {\n    const validFilters = this.formatFilters(filters);\n    return !_.isEmpty(validFilters) ? JSON.stringify(validFilters).replace('{', '').replace('}', '') : '';\n  }\n\n  /**\n     * Update the header filter state value\n     */\n  updateColFiltersState(name, value) {\n    let filters = JSON.parse(JSON.stringify(this.currentComponent.state.filters));\n    filters = _.set(filters, name, value);\n    this.currentComponent.setState({ filters }, () => {\n      this.getRecords();\n    });\n  }\n\n  /**\n     * Handle grid column filter text change\n     */\n  handleColFiltersChange(e) {\n    this.updateColFiltersState(e.target.name, e.target.value);\n  }\n\n  /**\n     * Handle grid column filter keyDown\n     */\n  handleColFiltersKeyDown(e) {\n    // Call table header filter when user press 'Enter key'\n    if (e.keyCode === 13 || e.which === 13) {\n      this.handleFilter();\n    }\n  }\n\n  /**\n     * Handle grid column filter select input change\n     */\n  handleColFiltersSelectChange(name, value) {\n    this.updateColFiltersState(name, value);\n  }\n\n  /**\n     * Handle grid column filter change\n     */\n  handleColSorting(e) {\n    e.preventDefault();\n    this.sortType = (this.sortType === 'DESC') ? 'ASC' : 'DESC';\n    this.getRecords();\n  }\n\n  /**\n    * build the query\n    *\n    * @return object\n    */\n  camelCaseRelace(str) {\n    const replace = '_';\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter, index) => (index === 0 ? letter.toLowerCase() : replace.concat(letter.toLowerCase()))).replace(/\\s+/g, '');\n  }\n\n  /**\n     * Handle grid global search change\n     */\n  handleGlobalFiltersChange(e) {\n    // This Comment code required in future\n    this.currentComponent.setState({ search: e.target.value });\n  }\n\n  /**\n     * Handle grid column filter change\n     */\n  handleDateFiltersChange(selected, value) {\n    /**\n        * Declare the handle Select Change\n        */\n    const selectedDom = ReactDOM.findDOMNode(selected);\n    const name = selectedDom.getAttribute('data-name') ? selectedDom.getAttribute('data-name') : selectedDom.getAttribute('name');\n    const filters = { ...this.currentComponent.state.filters };\n    filters[name] = value;\n    this.currentComponent.setState({ filters, search: value });\n  }\n\n  /**\n    * Handle field changes from Plugin\n    *\n    * @param name\n    * @param value\n    * @return void\n    */\n  handleFieldsChangeByJson(json) {\n    let fields = JSON.parse(JSON.stringify(this.currentComponent.state.filters));\n    for (const result of json) {\n      fields = _.set(fields, result.name, result.value);\n    }\n    this.currentComponent.setState({ filters: fields });\n  }\n\n  /**\n   * Declare the handle Select Change\n   */\n  handleSelectChange(selected, value) {\n    const selectedDom = ReactDOM.findDOMNode(selected);\n    const name = selectedDom.getAttribute('data-name') ? selectedDom.getAttribute('data-name') : selectedDom.getAttribute('name');\n    const filters = { ...this.currentComponent.state.filters };\n    filters[name] = value;\n    this.currentComponent.setState({ filters, search: value });\n  }\n\n  /**\n     * Handle the getHandlePaginate\n     */\n  getHandlePaginate(records, totalRecords) {\n    const { currentPage } = this;\n    const { rowsPerPage } = this;\n    const from = currentPage * rowsPerPage;\n    const to = from + rowsPerPage;\n    records = _.slice(records, from, to);\n    return records;\n  }\n\n  /**\n     * Handle the pagination click\n     */\n  handlePaginateClick(page, pageRows) {\n    let data;\n    this.currentPage = page;\n    if (this.rowsPerPage !== pageRows) {\n      this.resetPagination();\n    }\n    this.rowsPerPage = parseInt(pageRows);\n    if (this.manualPagination) {\n      data = this.getResponseData();\n      this.currentComponent.setState({ [this.listName]: data });\n    } else {\n      this.getRecords();\n    }\n  }\n\n  /**\n     * Handle the No Of Entries change\n     */\n  handleNumberEntryChange(page, pageRows) {\n    this.resetCheckbox();\n    this.handlePaginateClick(page, pageRows);\n  }\n\n  /**\n     * Set additional parameters into queryparams\n     */\n  setExtraParams(extraParams) {\n    this.extraParams = (extraParams && typeof extraParams === 'object') ? ({ ...this.extraParams, ...extraParams }) : null;\n  }\n\n  /**\n     * Get the records for table\n     */\n  getRecords(extraParams) {\n    if (extraParams) {\n      this.setExtraParams(extraParams);\n    }\n    return this.currentComponent.props.dispatch(this.action({\n      url: this.url, actionType: this.actionType, queryParams: this.getQueryParams(), method: this.method,\n    }));\n  }\n\n  /**\n     * Handle the delete funtionality\n     */\n  deleteRecord(deleteModalObj) {\n    if (typeof deleteModalObj !== 'object') {\n      // This is the error statement to the developers\n      console.error('The \"Delete Record\" method arguments must be an object.');\n      return;\n    }\n    const action = deleteModalObj.action || deleteGridRecord;\n    return this.currentComponent.props.dispatch(action(deleteModalObj));\n  }\n\n  /**\n     * Handle the status update functionality\n     */\n  statusUpdate(statusUpdateObj, e) {\n    e.preventDefault();\n    if (typeof statusUpdateObj !== 'object') {\n      // This is the error statement to the developers\n      console.error('The \"Status Update\" method arguments must be an object.');\n      return;\n    }\n\n    const action = statusUpdateObj.action || statusUpdateGridRecord;\n    // statusUpdateObj.params['regId'] = Authorization.getAuthUserId();\n    return this.currentComponent.props.dispatch(action(statusUpdateObj));\n  }\n\n  /**\n     * Handle the status update functionality\n     */\n  statusUpdateUser(statusUpdateObj, e) {\n    e.preventDefault();\n    if (typeof statusUpdateObj !== 'object') {\n      // This is the error statement to the developers\n      console.error('The \"Status Update\" method arguments must be an object.');\n      return;\n    }\n\n    const action = statusUpdateObj.action || statusUpdateGridRecord;\n    // statusUpdateObj.params['regId'] = Authorization.getAuthUserId();\n    return this.currentComponent.props.dispatch(action(statusUpdateObj));\n  }\n\n  /**\n     * Handle the checkIfResponse\n     */\n  getResponseData() {\n    let data;\n    data = this.currentComponent.props[this.listName];\n    data = data.response ? data.response.data : [];\n    return data;\n  }\n\n  /**\n     * Handle the column based filter\n     */\n  handleFilter() {\n    this.resetPagination();\n    if (this.manualPagination) {\n      const list = this.getResponseData();\n      let results = [];\n      const { filters } = this.currentComponent.state;\n      results = _.filter(list, (data) => {\n        for (const filter in filters) {\n          return data[filter].toLowerCase().indexOf(filters[filter].toLowerCase()) > -1;\n        }\n      });\n      this.totalRecords = results.length || 1;\n\n      this.currentComponent.setData(results);\n    } else {\n      this.getRecords();\n    }\n  }\n\n  /**\n     * Handle the column based filter reset\n     */\n  handleResetFilter() {\n    this.resetPagination();\n    this.currentComponent.setState({ filters: this.initialState.filters, search: this.initialState.search }, () => this.handleFilter());\n  }\n\n  /**\n     * Reset the pagination\n    */\n  resetPagination() {\n    this.currentPage = 1;\n    this.rowsPerPage = 10;\n  }\n\n  /**\n     * Reset the all & row checkbox\n    */\n  resetCheckbox() {\n    this.selectedRow = [];\n    this.selectedRowPerPage = this.currentPage;\n  }\n\n  /**\n     * When user bulk delete the all the of the current page,\n     * then currentPage is more than 0, need to reset the page to one level back\n     * So it will fetch the previous page record.\n     * Suppose if we do not reset to one page back, then it will show the 'No record exist' message on current page\n     *\n    */\n  getRecordsAfterDelete() {\n    if (this.selectedRow.length > 0) {\n      this.resetCheckbox();\n      this.currentPage = this.currentPage > 0 ? this.currentPage - 1 : this.currentPage;\n    }\n    this.getRecords();\n  }\n\n  addSelectedCheckBox(id) {\n    // Grid checkbox workflow\n    // User could select the checkbox from current page.\n    // After selected the rows when user switched to next page and select the row at that time reset the previously selected rows and update the current page selected rows\n    // After switched next page, But not select any rows and coming back to previously selected rows page, need to display the selected rows.\n    if (this.selectedRowPerPage !== this.currentPage) {\n      this.resetCheckbox();\n    }\n\n    const idIndex = this.selectedRow.indexOf(id);\n    if (idIndex > -1) {\n      this.selectedRow.splice(idIndex, 1);\n    } else {\n      this.selectedRow.push(id);\n    }\n  }\n\n  // Check whether current row is selected or not\n  isRowChecked(id) {\n    return this.selectedRow.indexOf(id) > -1;\n  }\n\n  /**\n     * Function is used to toggle select all check box when user click each record instead of select all checkbox\n     *\n     * @param int id\n     * @return void\n    */\n  toggleRow(e) {\n    // Get the total checkbox length of current page\n    const totalCheckBoxLength = $('.rowCheckbox').length;\n    // Get the checked or selected checkbox length of current page\n    const checkedCheckboxLength = $('.rowCheckbox:checked').length;\n\n    // Check whether total checkbox and checked checkbox on the current page is equal or not\n    // If equal, then make check the 'selectAll' checkbox\n    // If not, then uncheck the 'selectAll' checkbox\n    if (checkedCheckboxLength === totalCheckBoxLength) {\n      $('#selectAllCheckbox').prop('checked', true);\n    } else {\n      $('#selectAllCheckbox').prop('checked', false);\n    }\n\n    this.addSelectedCheckBox(e.target.value);\n  }\n\n\n  /**\n     * Function is used to toggle select all check box\n     *\n     * @return void\n     */\n  toggleSelectAll(e) {\n    const self = this;\n    if ($('#selectAllCheckbox').prop('checked')) {\n      $('.rowCheckbox').each(function () {\n        if ($(this).is(':checked') === false) {\n          $(this).prop('checked', true);\n          self.addSelectedCheckBox($(this).attr('value'));\n        }\n      });\n      // $('.options-drop').show();\n    } else {\n      $('.rowCheckbox').each(function () {\n        $(this).prop('checked', false);\n        self.addSelectedCheckBox($(this).attr('value'));\n      });\n      // $('.options-drop').hide();\n    }\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\n/*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID. \n    *With an arrow function, we have to pass it explicitly, \n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\nclass Search extends Component {\n    render() {\n        return <div className=\"search-container\">\n            <input type=\"text\" value={this.props.value || ''} onChange={this.props.onChange} className=\"promize-form-control\" placeholder=\"Search.. \" name=\"searchVal\" />\n            <i className=\"fa fa-search\"></i>\n        </div>\n    }\n\n}\n\nexport default Search;","import React from 'react';\n\nclass switchtoggle extends React.Component {\n  constructor(props) {\n    super(props)\n    this.changeButton = this.changeButton.bind(this);\n  }\n\n  changeButton(e) {\n    let value;\n    if (e.target.checked) {\n      value = this.props.checkValue['first'];\n    } else {\n      value = this.props.checkValue['second'];\n    }\n    this.props.form.handleFieldsChangeByPlugin && this.props.form.handleFieldsChangeByPlugin(e.target.name, value)\n  }\n\n  render() {\n    const changeMethod = this.props.onChange ? this.props.onChange : this.changeButton;\n    return (<div className={this.props.classWrapper ? this.props.classWrapper : \"form-group\" + \" check-mainbox\"}>\n      <div className={\"promize-toggle \" + this.props.className || this.props.className}>\n        <label>{this.props.labelName}</label>\n        <input className=\"tgl tgl-light\" id={this.props.id} onChange={changeMethod} checked={this.props.value == this.props.checkValue['first'] ? true : false} name={this.props.fieldName} type=\"checkbox\" />\n        <label className=\"tgl-btn\" htmlFor={this.props.id}></label>\n      </div>\n    </div>);\n  }\n}\n\nexport default switchtoggle;\n","import React, { Component } from 'react';\nimport noData from '../../assets/images/no-data.png';\n\nclass NoRecord extends Component {\n\n    render() {\n        const rowSpan = this.props.rowspan || 0;\n        const colSpan = this.props.colspan || 3;\n\n        if (this.props.isFetching) {\n            return <tr className=\"empty-row\"></tr>;\n        }\n        if (colSpan || colSpan) {\n            return <tr rowSpan={rowSpan}>\n                <td colSpan={colSpan}>\n                <div className=\"promize-no-data mt-15\">\n                    <img src={noData} />\n                    <p className=\"mt-10\">No Records Found</p>\n                </div>\n            </td>\n            </tr>\n        }\n        return <div className=\"promize-no-data mt-15\">\n            <img src={noData} />\n            <p className=\"mt-10\">No Records Found</p>\n        </div>\n\n    }\n}\n\nexport default NoRecord;","module.exports = __webpack_public_path__ + \"static/media/no-data.12573e6e.png\";","import React ,{ Component } from'react';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport toastr from 'toastr';\n// import Authorization from '../../utility/authorization';\n\nclass Delete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleToogleModal = this.handleToogleModal.bind(this);\n        const confirmMsg = `${\"confirm delete\"} ${_.lowerCase(this.props.managementType)}?`\n        this.state = { \n          showModal: false,\n          message: confirmMsg,\n        };\n        this.deleteDetails = {};\n    }\n    /**\n     * Cancel the confirmation box by press enter button\n     */\n    triggerCancel(){\n      const self = this;\n        $(document).on(\"keyup\", function (event) {\n            if (event.which === 13 && self.state.showModal) {\n                $(\"#cancel\").trigger('click');\n            }\n        });\n    }\n\n    handleToogleModal(deleteObj, e) {\n      e.preventDefault();\n      this.deleteDetails = deleteObj;\n      if(this.state.showModal){\n        this.setState({showModal: false});\n      }else{\n        this.setState({showModal: true});\n      }      \n    }\n\n    handleDeleteConfirmation(confirmStatus, e){\n      e.preventDefault();\n      this.triggerCancel();\n      const confirmMsg = `${\"confirm_message\"} ${_.lowerCase(this.props.managementType)}?` \n      if(confirmStatus){\n        this.setState({showModal: false, message: confirmMsg});\n        this.props.grid.deleteRecord(this.deleteDetails);\n      }\n      else{\n        this.setState({showModal: false, message: confirmMsg});\n      }\n    }\n\n    render() {\n      return (    \n              <div className=\"promize-modal-cover-delete-popup\" style={{display: this.state.showModal ? 'block' : 'none' }}>\n                  <div className=\"promize-modal modal-sm\">\n                    <div className=\"promize-modal-header\">\n                      <h3 className=\"modal-title\">\n                          <span>\n                            Confirm delete\n                          </span>\n                      </h3>\n                    </div>\n                    <div className=\"promize-modal-body text-center\">\n                        <div className=\"promize-form-group mt-10\">\n                              <p>Are you sure you want to delete?</p>    \n                        </div>\n                    </div>\n                      <div className=\"promize-modal-footer df-js-center\">\n                          <button className=\"btn btn-promize-secondary\" id=\"cancel\" onClick={(e) => this.handleDeleteConfirmation(false, e)}>{\"No\"}</button>\n                          <button className=\"btn btn-promize-primary\" onClick={(e) => this.handleDeleteConfirmation(true, e)}>{\"Yes\"}</button>\n                      </div>\n                  </div>\n              </div>\n           )\n        }\n      }\nexport default Delete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nclass Entries extends React.Component {\n\n    static propTypes = {\n        rowsSelected: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        return( \n            <div className=\"promize-entries\">\n                <select className=\"promize-form-control select-control\" value={this.props.rows} onChange={this.props.rowsSelected}>\n                    {\n                        Object.keys(this.props.grid.rowsPerPageOptions).map((key) => {\n                            const options = this.props.grid.rowsPerPageOptions[key];\n                            return <option key={`Entries-${key}`} value={options}>{options}</option>\n                        })\n                    }                      \n                </select>\n                <p className=\"ml-10\">Displaying {this.props.grid.rowsPerPage} of {this.props.totalRecords}</p>\n            </div>\n        )\n    }\n}\n\nexport default Entries;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nclass Paginate extends React.Component {\n\n    static propTypes = {\n        totalRecords: PropTypes.number.isRequired,\n        rows: PropTypes.number.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        grid: PropTypes.object.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n        this.pageStart = 1;\n    }\n\n    componentDidMount(){\n        this.generatePagination(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n           this.generatePagination(nextProps); \n    }\n\n    generatePagination(props){\n        // set page if items array isn't empty\n        if (props.totalRecords && props.totalRecords > 0) {\n            this.setPage(props, props.currentPage);\n        }\n    }\n    setPage(props, page){\n        const totalRecords = props.totalRecords;\n        let pager = this.state.pager;\n\n        if (page < this.pageStart || page > pager.totalPages) {\n            return;\n        }\n        // get new pager object for specified page\n        pager = this.getPager(props, totalRecords, page);\n        // update state\n        this.setState({ pager: pager });\n    }\n\n    getPager(props,totalItems, currentPage, pageSize) {\n        let intermediate = false;\n        currentPage = props.currentPage || props.grid.currentPage;\n        pageSize = props.rows || props.grid.rowsPerPage;\n \n        // calculate total pages\n        var totalPages = (Math.ceil(parseInt(totalItems) /parseInt(pageSize))) ; // 55 links\n        var startPage, endPage;\n\n        if (totalPages <= 3) {\n            // less than 4 total pages so show all\n            startPage = this.pageStart;\n            endPage = totalPages;\n        } else {\n            // more than 3 total pages so calculate start and end pages\n            if (currentPage <= 3) {\n                startPage = this.pageStart;\n                endPage = 3;\n            } else if (currentPage + 2 >= totalPages) { // End level\n                startPage = totalPages - 3;\n                endPage = totalPages;\n            } else { // Intermediate level\n                startPage = currentPage - 1;\n                endPage = currentPage + 1;\n                intermediate = true;\n            }\n\n        }\n \n        // create an array of pages to ng-repeat in the pager control\n        var pages = _.range(startPage, endPage + 1);\n \n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            pages: pages,\n            intermediate: intermediate\n        };\n    }\n\n    render(){\n\n        const pager = this.state.pager;\n        const pageRows = this.props.rows;\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return(\n            <div className=\"promize-pagination\">\n                <ul>\n                    \n                    <li className={pager.currentPage === this.pageStart ? 'disabled' : ''} onClick={() => (pager.currentPage !== this.pageStart) && this.props.loadData(this.pageStart, pageRows)}>\n                        <button>\n                        <i className = \"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n                        </button>\n                    </li>\n                    <li className={pager.currentPage === this.pageStart ? 'disabled' : ''}  onClick={() => (pager.currentPage !== this.pageStart) && this.props.loadData(pager.currentPage - 1, pageRows)}>\n                        <button>\n                            <i className = \"fa fa-angle-left\" aria-hidden=\"true\"></i>\n                        </button>\n                    </li>\n                    {pager.pages.map((page, index, pagesArr) => {\n                            const links = [];\n                            if(pager.intermediate && index === 0){\n                                links.push(<li key={`pagination-link-${index}-first-dots`}><button>...</button></li>)\n                            }\n                            links.push(\n                                <li key={`pagination-link-${index}`} disabled={true} onClick={() => (pager.currentPage !== page) && this.props.loadData(page, pageRows)} >\n                                    <button className={(pager.currentPage === page) ? 'active' : ''}>\n                                        {page}\n                                    </button>\n                                </li>\n                            )\n                            if(pager.intermediate && (pagesArr.length-1) === index){\n                                links.push(<li key={`pagination-link-${index}-last-dots`}><button>...</button></li>)\n                            }\n                            return links;\n                        }\n                    )}\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                        <button onClick={() => (pager.currentPage !== pager.totalPages) && this.props.loadData(pager.currentPage + 1, pageRows)}>\n                            <i className = \"fa fa-angle-right\" aria-hidden=\"true\"></i>\n                        </button>\n                    </li>\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                        <button onClick={() => (pager.currentPage !== pager.totalPages) && this.props.loadData(pager.totalPages, pageRows)}>\n                            <i className = \"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n                        </button>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Paginate;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Entries from './pagination/Entries';\nimport Paginate from './pagination/Paginate';\n\nclass Pagination extends React.Component {\n\n    static propTypes = {\n        totalRecords: PropTypes.number,\n        rows: PropTypes.number.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        grid: PropTypes.object.isRequired\n    }\n    \n    constructor(props) {\n        super(props);\n        this.rowsSelected = this.rowsSelected.bind(this);\n        this.loadData = this.loadData.bind(this);\n    }\n\n    /**\n     * Load the data when click on pagination link\n     */\n    loadData(page, pageRows){\n        this.props.grid.handlePaginateClick(page, pageRows);\n    }\n\n    /**\n     * Load data when change the rows per page default value\n     */\n    rowsSelected(e){\n        this.props.grid.handleNumberEntryChange(this.props.currentPage, e.target.value);\n    }\n\n    render() {\n        return ( \n            <div className=\"table-footer-action\">\n                { this.props.totalRecords > 10 &&  <Entries {...this.props} rowsSelected={this.rowsSelected} /> }\n                { this.props.totalRecords > 10 && <Paginate {...this.props} loadData={this.loadData} /> }\n            </div>\n        )\n    }\n\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport Delete from '../../components/grid/Delete';\nimport Search from '../form/Search'\nimport Pagination from '../../components/grid/Pagination';\n// import Loader from '../layouts/Loader';\n\nclass Table extends Component {\n\n    static propTypes = {\n        pageTitle: PropTypes.string,\n        managementType: PropTypes.string.isRequired,\n        grid: PropTypes.object.isRequired,\n        data: PropTypes.object.isRequired,\n        rowDelete: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.recordDeleted = this.recordDeleted.bind(this);\n        this.data = [];\n        this.fixedActionSet = false;\n    }\n\n    /**\n     * Handle the delete record response\n     *\n     * @param object\n     */\n    recordDeleted(props) {\n        const response = props.rowDelete.response;\n        if (response !== this.props.rowDelete.response) {\n            if (!props.rowDelete.isFetching && !props.rowDelete.isError && Object.keys(response).length > 0) {\n                if (response.status && response.status === 200) {\n                    toastr.success(response.message);\n                    props.grid.getRecordsAfterDelete();\n                }\n                else {\n                    toastr.error(response.message || this.props.locale.common.remove.error);\n                }\n            }\n            else if (props.rowDelete.isError) {\n                toastr.error(response.message || this.props.locale.common.remove.error);\n            }\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (!_.isUndefined(nextProps.rowDelete)) {\n            this.recordDeleted(nextProps);\n        }\n    }\n\n\n\n    render() {\n        return <div className=\"promize-card\">\n         <Delete {...this.props} ref={instance => { this.delete = instance; }} />\n        <div className=\"promize-card-header\">\n            <div className=\"promize-card-title\">\n                <h3><span>{this.props.pageTitle}</span></h3>\n                { this.props.subTitle && <p>{this.props.subTitle}</p> }\n            </div>\n            <div className=\"promize-card-action\">\n                <Search value={this.props.filters.searchVal} onChange={this.props.grid.handleColFiltersChange} />\n                {this.props.addButton}\n            </div>\n        </div>\n        <div className=\"promize-card-body\">\n            {this.props.children}\n            {!this.props.data.isFetching && this.props.data.response.data &&\n                this.props.data.response.data.length > 0 &&\n                <Pagination {...this.props} grid={this.props.grid} currentPage={this.props.grid.currentPage} rows={this.props.grid.rowsPerPage} totalRecords={this.props.data.response.totalRecords} />}\n        </div>\n        </div>\n    }\n}\n\nexport default Table;\n"],"sourceRoot":""}