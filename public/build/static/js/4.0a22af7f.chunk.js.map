{"version":3,"sources":["../node_modules/fabric/dist/fabric.js","../node_modules/react-input-range/lib/js/index.js","../node_modules/react-input-range/lib/js/utils/index.js","../node_modules/autobind-decorator/lib/index.js","../node_modules/react-input-range/lib/js/input-range/label.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/react-input-range/lib/js/input-range/input-range.js","../node_modules/react-input-range/lib/js/input-range/value-transformer.js","../node_modules/react-input-range/lib/js/utils/captialize.js","../node_modules/react-input-range/lib/js/utils/clamp.js","../node_modules/react-input-range/lib/js/utils/distance-to.js","../node_modules/react-input-range/lib/js/utils/is-defined.js","../node_modules/react-input-range/lib/js/utils/is-number.js","../node_modules/react-input-range/lib/js/utils/is-object.js","../node_modules/react-input-range/lib/js/utils/length.js","../node_modules/react-input-range/lib/js/input-range/default-class-names.js","../node_modules/react-input-range/lib/js/input-range/range-prop-type.js","../node_modules/react-input-range/lib/js/input-range/value-prop-type.js","../node_modules/react-input-range/lib/js/input-range/slider.js","../node_modules/react-input-range/lib/js/input-range/track.js","../node_modules/react-input-range/lib/js/input-range/key-codes.js"],"names":["Buffer","proto","fabric","version","exports","document","window","HTMLDocument","Document","implementation","createHTMLDocument","virtualWindow","__webpack_require__","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","global","sqrt","Math","atan2","pow","PiBy180","PI","PiBy2","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","transform","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","multiply","tan","composeMatrix","matrix","customTransformMatrix","resetObjectTransform","target","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","map","NUM_FRACTION_DIGITS","join","_join","Array","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","abs","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","clone","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","couldUseAttachEvent","attachEvent","addListener","element","addEventListener","removeListener","removeEventListener","getPointer","event","scroll","getScrollLeftTop","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","test","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","arr","defaultView","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","e","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","defaultEasing","d","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","calculateColor","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","opacityAttr","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","multiplier","colorAlpha","keyValuePairs","__convertPercentUnitsToValues","instance","svgOptions","gradientUnits","propValue","finalValue","keys","offsetX","offsetY","gradientTransform","option","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","_getPointer","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","Textbox","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","-ms-touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","button","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_applyPatternForTransformedGradient","pCtx","pCanvas","retinaScaling","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","_getCoords","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","tMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","_onComplete","_onChange","fxCenterObjectV","_onComplete2","_onChange2","fxRemove","_onComplete3","_onChange3","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","correctLeftTop","calcDim","_calcDimensions","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","_onComplete4","_onChange4","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","testContext","now","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep","defineProperty","_inputRange","_inputRange2","__esModule","default","module","_captialize","enumerable","_interopRequireDefault","_clamp","_distanceTo","_isDefined","_isNumber","_isObject","_length","boundMethod","descriptor","definingProperty","configurable","boundFn","writable","_len","Reflect","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","Label","_react2","_propTypes2","labelValue","formatLabel","labelContainer","propTypes","isRequired","objectOf","func","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","_createClass","defineProperties","Constructor","protoProps","staticProps","_autobindDecorator2","valueTransformer","newObj","_interopRequireWildcard","_defaultClassNames2","_label2","_rangePropType2","_valuePropType2","_slider2","_track2","_utils","_keyCodes","_applyDecoratedDescriptor","decorators","desc","initializer","decorator","InputRange","_React$Component","_classCallCheck","ReferenceError","_possibleConstructorReturn","getPrototypeOf","trackNode","isSliderDragging","lastKeyMoved","subClass","superClass","create","setPrototypeOf","_inherits","Component","allowSameValues","bool","ariaLabelledby","ariaControls","disabled","draggableTrack","maxValue","minValue","name","onChangeStart","onChangeComplete","step","removeDocumentMouseUpListener","removeDocumentTouchEndListener","disabledInputRange","inputRange","getClientRect","values","getValueFromProps","isMultiValue","positions","getPositionsFromValues","getTrackClientRect","distanceTo","currentValues","isObject","isWithinRange","hasStepDifference","updatePositions","getValueFromPosition","transformedValues","getStepValueFromValue","updateValues","shouldUpdate","updateValue","handleMouseUp","handleTouchEnd","_this2","getPositionFromEvent","updatePosition","prevEvent","_props","_props$value","stepValue","prevPosition","prevValue","LEFT_ARROW","DOWN_ARROW","decrementValue","RIGHT_ARROW","UP_ARROW","incrementValue","_props2","_props2$value","getKeyByPosition","isDefined","handleInteractionStart","handleInteractionEnd","addDocumentMouseUpListener","addDocumentTouchEndListener","_this3","percentages","getPercentagesFromValues","getKeys","percentage","_props3","onSliderDrag","handleSliderDrag","onSliderKeyDown","handleSliderKeyDown","_this4","captialize","_this5","componentClassName","getComponentClassName","aria-disabled","ref","handleKeyDown","handleKeyUp","handleMouseDown","onTouchStart","handleTouchStart","onTrackDrag","handleTrackDrag","onTrackMouseDown","handleTrackMouseDown","renderSliders","renderHiddenInputs","_extends","assign","getPercentageFromPosition","clientRect","sizePerc","getPercentageFromValue","getPositionFromValue","clamp","valuePerStep","pointA","pointB","_typeof","iterator","numA","numB","activeTrack","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","isNumber","propName","Slider","removeDocumentMouseMoveListener","removeDocumentTouchMoveListener","handleMouseMove","handleTouchMove","addDocumentMouseMoveListener","addDocumentTouchMoveListener","getStyle","aria-labelledby","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","draggable","role","tabIndex","Track","trackDragEvent","activeTrackStyle","getActiveTrackStyle"],"mappings":"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","file":"static/js/4.0a22af7f.chunk.js","sourcesContent":["/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\nvar fabric = fabric || {\n  version: '3.4.0'\n};\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return fabric;\n    });\n  }\n/* _AMD_END_ */\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  } else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n\n  fabric.window = window;\n} else {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n\n  var virtualWindow = new jsdom.JSDOM(decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'), {\n    features: {\n      FetchExternalResources: ['img']\n    },\n    resources: 'usable'\n  }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document || fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0;\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\n\nfabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined';\n/* _FROM_SVG_START_ */\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\n\nfabric.SHARED_ATTRIBUTES = ['display', 'transform', 'fill', 'fill-opacity', 'fill-rule', 'opacity', 'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'id', 'paint-order', 'vector-effect', 'instantiated_by_use', 'clip-path'];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\n\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.fontPaths = {};\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.perfLimitSizeTotal = 2097152;\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.maxCacheSideLimit = 4096;\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.minCacheSideLimit = 256;\n/**\n * Cache Object for widths of chars in text rendering.\n */\n\nfabric.charWidthsCache = {};\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\n\nfabric.textureSize = 2048;\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\n\nfabric.disableStyleCopyPaste = false;\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\n\nfabric.enableGLFiltering = true;\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\n\nfabric.browserShadowBlurConstant = 1;\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.arcToSegmentsCache = {};\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.boundsOfCurveCache = {};\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\n\nfabric.cachesBoundsOfCurve = true;\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\n\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function () {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return new fabric.WebglFilterBackend({\n      tileSize: fabric.textureSize\n    });\n  } else if (fabric.Canvas2dFilterBackend) {\n    return new fabric.Canvas2dFilterBackend();\n  }\n};\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n(function () {\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    var eventListener = this.__eventListeners[eventName];\n\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    } else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {};\n    } // one object with key/value pairs was passed\n\n\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    } else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n\n      this.__eventListeners[eventName].push(handler);\n    }\n\n    return this;\n  }\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    } // remove all key/value pairs (event name -> event handler)\n\n\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    } // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n        for (var prop in eventName) {\n          _removeEventListener.call(this, prop, eventName[prop]);\n        }\n      } else {\n        _removeEventListener.call(this, eventName, handler);\n      }\n\n    return this;\n  }\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n    }\n\n    this.__eventListeners[eventName] = listenersForEvent.filter(function (value) {\n      return value !== false;\n    });\n    return this;\n  }\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n\n\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n/**\n * @namespace fabric.Collection\n */\n\n\nfabric.Collection = {\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function add() {\n    this._objects.push.apply(this._objects, arguments);\n\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function insertAt(object, index, nonSplicing) {\n    var objects = this._objects;\n\n    if (nonSplicing) {\n      objects[index] = object;\n    } else {\n      objects.splice(index, 0, object);\n    }\n\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function remove() {\n    var objects = this._objects,\n        index,\n        somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]); // only call onObjectRemoved if an object was actually removed\n\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function forEachObject(callback, context) {\n    var objects = this.getObjects();\n\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function getObjects(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n\n    return this._objects.filter(function (o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function item(index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function isEmpty() {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function size() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function contains(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function complexity() {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n/**\n * @namespace fabric.CommonMethods\n */\n\nfabric.CommonMethods = {\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function _setOptions(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function _initGradient(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function _initPattern(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    } else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function _initClipping(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function _setObject(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function set(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      } else {\n        this._set(key, value);\n      }\n    }\n\n    return this;\n  },\n  _set: function _set(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function toggle(property) {\n    var value = this.get(property);\n\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function get(property) {\n    return this[property];\n  }\n};\n\n(function (global) {\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n  /**\n   * @namespace fabric.util\n   */\n\n  fabric.util = {\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function cos(angle) {\n      if (angle === 0) {\n        return 1;\n      }\n\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n\n      var angleSlice = angle / PiBy2;\n\n      switch (angleSlice) {\n        case 1:\n        case 3:\n          return 0;\n\n        case 2:\n          return -1;\n      }\n\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function sin(angle) {\n      if (angle === 0) {\n        return 0;\n      }\n\n      var angleSlice = angle / PiBy2,\n          sign = 1;\n\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n\n      switch (angleSlice) {\n        case 1:\n          return sign;\n\n        case 2:\n          return 0;\n\n        case 3:\n          return -sign;\n      }\n\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function removeFromArray(array, value) {\n      var idx = array.indexOf(value);\n\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function degreesToRadians(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function radiansToDegrees(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function rotatePoint(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function rotateVector(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function transformPoint(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n      }\n\n      return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function makeBoundingBoxFromPoints(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function invertTransform(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({\n        x: t[4],\n        y: t[5]\n      }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function toFixed(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function parseUnit(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72;\n        // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12;\n        // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function falseFunction() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function getKlass(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function getSvgAttributes(type) {\n      var attributes = ['instantiated_by_use', 'style', 'id', 'class'];\n\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function resolveNamespace(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function loadImage(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n      /** @ignore */\n\n      var onLoadCallback = function onLoadCallback() {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n\n      img.onerror = function () {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      }; // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\n\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      } // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n\n\n      if (url.substring(0, 14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function loadImageInDom(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function enlivenObjects(objects, callback, namespace, reviver) {\n      objects = objects || [];\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function (obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function enlivenPatterns(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function (pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        } else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function groupSVGElements(elements, options, path) {\n      var object;\n\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        } else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n\n      object = new fabric.Group(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function populateWithProperties(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function drawDashedLine(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n      x = 0;\n\n      while (len > x) {\n        x += da[di++ % dc];\n\n        if (x > len) {\n          x = len;\n        }\n\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function createCanvasElement() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function copyCanvasElement(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function toDataURL(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function createImage() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function clipContext(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function multiplyTransformMatrices(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function qrDecompose(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Array[Number]} transform matrix\n     */\n    calcRotateMatrix: function calcRotateMatrix(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @return {Array[Number]} transform matrix\n     */\n    calcDimensionsMatrix: function calcDimensionsMatrix(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [options.flipX ? -scaleX : scaleX, 0, 0, options.flipY ? -scaleY : scaleY, 0, 0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n\n      if (options.skewX) {\n        scaleMatrix = multiply(scaleMatrix, [1, 0, Math.tan(degreesToRadians(options.skewX)), 1], true);\n      }\n\n      if (options.skewY) {\n        scaleMatrix = multiply(scaleMatrix, [1, Math.tan(degreesToRadians(options.skewY)), 0, 1], true);\n      }\n\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Array[Number]} transform matrix\n     */\n    composeMatrix: function composeMatrix(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n\n      if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n\n      return matrix;\n    },\n\n    /**\n     * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\n     * Is deprecated for composeMatrix. Please do not use it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.util\n     * @param  {Number} scaleX\n     * @param  {Number} scaleY\n     * @param  {Number} skewX\n     * @return {Array[Number]} transform matrix\n     */\n    customTransformMatrix: function customTransformMatrix(scaleX, scaleY, skewX) {\n      return fabric.util.composeMatrix({\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX\n      });\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function resetObjectTransform(target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function saveObjectTransform(target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function getFunctionBody(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function isTransparent(ctx, x, y, tolerance) {\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        } else {\n          x = 0;\n        }\n\n        if (y > tolerance) {\n          y -= tolerance;\n        } else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          i,\n          temp,\n          imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1),\n          l = imageData.data.length; // Split image data - for tolerance > 1, pixelDataSize = 4;\n\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function parsePreserveAspectRatioAttribute(attribute) {\n      var meetOrSlice = 'meet',\n          alignX = 'Mid',\n          alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '),\n          align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        } else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      } //divide align in alignX and alignY\n\n\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function clearFabricFontCache(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n\n      if (!fontFamily) {\n        fabric.charWidthsCache = {};\n      } else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function limitDimsByArea(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return {\n        x: Math.floor(roughWidth),\n        y: perfLimitSizeY\n      };\n    },\n    capValue: function capValue(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n    findScaleToFit: function findScaleToFit(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n    findScaleToCover: function findScaleToCover(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function matrixToSVG(transform) {\n      return 'matrix(' + transform.map(function (value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var _join = Array.prototype.join;\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI,\n        th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0,\n        fromY = 0;\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx,\n        ry2 = ry * ry,\n        py2 = py * py,\n        px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    } else {\n      root = (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    } else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    } // Convert into cubic bezier segments <= 90deg\n\n\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [],\n        mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n    return [cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n  }\n  /*\n   * Private\n   */\n\n\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n\n    if (tb >= ta) {\n      return tb - ta;\n    } else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n\n\n  fabric.util.drawArc = function (ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n\n\n  fabric.util.getBoundsOfArc = function (fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n    var fromX = 0,\n        fromY = 0,\n        bound,\n        bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({\n        x: bound[0].x + fx,\n        y: bound[0].y + fy\n      });\n      bounds.push({\n        x: bound[1].x + fx,\n        y: bound[1].y + fy\n      });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n\n    return bounds;\n  };\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\n\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[0][j] = x;\n      y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [{\n      x: min.apply(null, bounds[0]),\n      y: min.apply(null, bounds[1])\n    }, {\n      x: max.apply(null, bounds[0]),\n      y: max.apply(null, bounds[1])\n    }];\n\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function () {\n  var slice = Array.prototype.slice;\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2),\n        result = [];\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n\n    return result;\n  }\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function max(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 >= value2;\n    });\n  }\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function min(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 < value2;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function fill(array, value) {\n    var k = array.length;\n\n    while (k--) {\n      array[k] = value;\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   */\n\n\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    } else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @namespace fabric.util.array\n   */\n\n\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n})();\n\n(function () {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      } else if (source instanceof Array) {\n        destination = [];\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({}, source[i], deep);\n        }\n      } else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({}, source[property]);\n          } else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({}, source[property], deep);\n          }\n        }\n      } else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    } else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n\n    return destination;\n  }\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n\n\n  function clone(object, deep) {\n    return extend({}, object, deep);\n  }\n  /** @namespace fabric.util.object */\n\n\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function () {\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function (match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n\n\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n\n\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n\n\n  function graphemeSplit(textstring) {\n    var i = 0,\n        chr,\n        graphemes = [];\n\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n\n      graphemes.push(chr);\n    }\n\n    return graphemes;\n  } // taken from mdn in the charAt doc page.\n\n\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    } // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= i + 1) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      var next = str.charCodeAt(i + 1);\n\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      return str.charAt(i) + str.charAt(i + 1);\n    } // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\n\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n\n    var prev = str.charCodeAt(i - 1); // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    } // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n\n\n    return false;\n  }\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n\n\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n(function () {\n  var slice = Array.prototype.slice,\n      emptyFunction = function emptyFunction() {},\n      IS_DONTENUM_BUGGY = function () {\n    for (var p in {\n      toString: 1\n    }) {\n      if (p === 'toString') {\n        return false;\n      }\n    }\n\n    return true;\n  }(),\n\n  /** @ignore */\n  addMethods = function addMethods(klass, source, parent) {\n    for (var property in source) {\n      if (property in klass.prototype && typeof klass.prototype[property] === 'function' && (source[property] + '').indexOf('callSuper') > -1) {\n        klass.prototype[property] = function (property) {\n          return function () {\n            var superclass = this.constructor.superclass;\n            this.constructor.superclass = parent;\n            var returnValue = source[property].apply(this, arguments);\n            this.constructor.superclass = superclass;\n\n            if (property !== 'initialize') {\n              return returnValue;\n            }\n          };\n        }(property);\n      } else {\n        klass.prototype[property] = source[property];\n      }\n\n      if (IS_DONTENUM_BUGGY) {\n        if (source.toString !== Object.prototype.toString) {\n          klass.prototype.toString = source.toString;\n        }\n\n        if (source.valueOf !== Object.prototype.valueOf) {\n          klass.prototype.valueOf = source.valueOf;\n        }\n      }\n    }\n  };\n\n  function Subclass() {}\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this; // climb prototype chain to find method not equal to callee's method\n\n\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      } // eslint-disable-next-line\n\n\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n  }\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n\n\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n  fabric.util.addListener = function (element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n\n  fabric.util.removeListener = function (element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n\n    return event;\n  }\n\n  fabric.util.getPointer = function (event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n(function () {\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n\n    if (!elementStyle) {\n      return element;\n    }\n\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n    }\n\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      } else {\n        var normalizedProperty = property === 'float' || property === 'cssFloat' ? typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat' : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n  /** @ignore */\n  setOpacity = function setOpacity(element) {\n    return element;\n  };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function setOpacity(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  } else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function setOpacity(element, value) {\n      var es = element.style;\n\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : 'alpha(opacity=' + value * 100 + ')';\n        es.filter = es.filter.replace(reOpacity, value);\n      } else {\n        es.filter += ' alpha(opacity=' + value * 100 + ')';\n      }\n\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n})();\n\n(function () {\n  var _slice = Array.prototype.slice;\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n\n  /**\n   * Converts an array-like object (e.g. arguments or NodeList) to an array\n   * @memberOf fabric.util\n   * @param {Object} arrayLike\n   * @return {Array}\n   */\n  toArray = function toArray(arrayLike) {\n    return _slice.call(arrayLike, 0);\n  };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  } catch (err) {}\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function toArray(arrayLike) {\n      var arr = new Array(arrayLike.length),\n          i = arrayLike.length;\n\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n\n      return arr;\n    };\n  }\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n\n\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      } else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      } else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n\n    return el;\n  }\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n\n\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n\n\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n\n\n  function getScrollLeftTop(element) {\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n      scrollLeft: 0,\n      scrollTop: 0\n    }; // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\n    while (element && (element.parentNode || element.host)) {\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop || docElement.scrollTop || 0;\n      } else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n\n\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = {\n      left: 0,\n      top: 0\n    },\n        offset = {\n      left: 0,\n      top: 0\n    },\n        scrollLeftTop,\n        offsetAttributes = {\n      borderLeftWidth: 'left',\n      borderTopWidth: 'top',\n      paddingLeft: 'left',\n      paddingTop: 'top'\n    };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n\n    if (typeof element.getBoundingClientRect !== 'undefined') {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n    };\n  }\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n\n\n  var getElementStyle;\n\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function getElementStyle(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  } else {\n    getElementStyle = function getElementStyle(element, attr) {\n      var value = element.style[attr];\n\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style ? 'userSelect' : 'MozUserSelect' in style ? 'MozUserSelect' : 'WebkitUserSelect' in style ? 'WebkitUserSelect' : 'KhtmlUserSelect' in style ? 'KhtmlUserSelect' : '';\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n\n      return element;\n    }\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = '';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function () {\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n      /** @ignore */\n\n      scriptEl.onload =\n      /** @ignore */\n      scriptEl.onreadystatechange = function (e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' && this.readyState !== 'loaded' && this.readyState !== 'complete') {\n            return;\n          }\n\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl); // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  }\n\n  ;\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n\n    var impl = fabric.jsdomImplForWrapper(element);\n\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null; // unsure if necessary\n\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n})();\n\n(function () {\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() {}\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n\n\n  function request(url, options) {\n    options || (options = {});\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function () {},\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n    /** @ignore */\n\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\n\n\nfabric.log = function () {};\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\n\n\nfabric.warn = function () {};\n/* eslint-disable */\n\n\nif (typeof console !== 'undefined') {\n  ['log', 'warn'].forEach(function (methodName) {\n    if (typeof console[methodName] !== 'undefined' && typeof console[methodName].apply === 'function') {\n      fabric[methodName] = function () {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function () {\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animate(options) {\n    requestAnimFrame(function (timestamp) {\n      options || (options = {});\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration,\n          time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : time - start,\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n\n        if (time > finish) {\n          onChange(endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          return;\n        } else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function (callback) {\n    return fabric.window.setTimeout(callback, 1000 / 60);\n  };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n\n\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function () {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba(' + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + ',' + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + ',' + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n    options = options || {};\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function easing(currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n})();\n\n(function () {\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n\n    return {\n      a: a,\n      c: c,\n      p: p,\n      s: s\n    };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n  }\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n  }\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d / 2;\n\n    if (t === 2) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n\n    var opts = normalize(a, c, p, s);\n\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n\n    return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * 0.5 + opts.c + b;\n  }\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce(d - t, 0, c, d) + b;\n  }\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  }\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n\n\n  fabric.util.ease = {\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function easeInQuad(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function easeOutQuad(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function easeInOutQuad(t, b, c, d) {\n      t /= d / 2;\n\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function easeInCubic(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n})();\n\n(function (global) {\n  'use strict';\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line', 'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n      attributesMap = {\n    cx: 'left',\n    x: 'left',\n    r: 'radius',\n    cy: 'top',\n    y: 'top',\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform'\n  },\n      colorAttributes = {\n    stroke: 'strokeOpacity',\n    fill: 'fillOpacity'\n  };\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n  fabric.cssRules = {};\n  fabric.gradientDefs = {};\n  fabric.clipPaths = {};\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    } else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    } else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      } else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    } else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      } else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    } else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden'; // display=none on parent element always takes precedence over child element\n\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    } else if (attr === 'opacity') {\n      value = parseFloat(value);\n\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    } else if (attr === 'textAnchor'\n    /* text-anchor */\n    ) {\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n      } else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    } else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      } else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    } else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    } else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return !isArray && isNaN(parsed) ? value : parsed;\n  }\n  /**\n    * @private\n    */\n\n\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n\n\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n\n    return attributes;\n  }\n  /**\n   * @private\n   */\n\n\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName,\n        nodeArray = [],\n        nodeList,\n        i,\n        len;\n\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n\n    return nodeArray;\n  }\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n\n\n  fabric.parseTransformAttribute = function () {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]),\n          sin = fabric.util.sin(args[0]),\n          x = 0,\n          y = 0;\n\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = args.length === 2 ? args[1] : args[0];\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    } // identity matrix\n\n\n    var iMatrix = fabric.iMatrix,\n        // == begin transform regexp\n    number = fabric.reNum,\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + '\\\\s*\\\\))',\n        transform = '(?:' + matrix + '|' + translate + '|' + scale + '|' + rotate + '|' + skewX + '|' + skewY + ')',\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n    reTransformList = new RegExp(transformList),\n        // == end transform regexp\n    reTransform = new RegExp(transform, 'g');\n    return function (attributeValue) {\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = []; // return if no argument was given or\n      // an argument does not match transform attribute regexp\n\n      if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function (match) {\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n          // match !== '' && match != null\n          return !!match;\n        }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n\n          case 'matrix':\n            matrix = args;\n            break;\n        } // snapshot current matrix into matrices array\n\n\n        matrices.push(matrix.concat()); // reset\n\n        matrix = iMatrix.concat();\n      });\n      var combinedMatrix = matrices[0];\n\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n\n      return combinedMatrix;\n    };\n  }();\n  /**\n   * @private\n   */\n\n\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n      attr = pair[0].trim().toLowerCase();\n      value = pair[1].trim();\n      oStyle[attr] = value;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n      oStyle[attr] = value;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = {};\n\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n\n    return styles;\n  }\n  /**\n   * @private\n   */\n\n\n  function elementMatchesRule(element, selectors) {\n    var firstMatching,\n        parentMatching = true; //start from rightmost selector.\n\n    firstMatching = selectorMatches(element, selectors.pop());\n\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n\n    return firstMatching && parentMatching && selectors.length === 0;\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector,\n        parentMatching = true;\n\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n\n    return selectors.length === 0;\n  }\n  /**\n   * @private\n   */\n\n\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'),\n        matcher,\n        i; // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n\n    return selector.length === 0;\n  }\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n\n\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n\n    if (el) {\n      return el;\n    }\n\n    var node,\n        i,\n        len,\n        nodelist = doc.getElementsByTagName('*');\n\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']),\n        i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length,\n          attr,\n          j,\n          attrs,\n          len;\n      applyViewboxTransform(el2);\n\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        } // el2.firstChild != null\n\n\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        } else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el); // some browsers do not shorten nodelist after replaceChild (IE8)\n\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  } // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n\n\n  var reViewBoxAttrValue = new RegExp('^' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*' + '$');\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n\n  function applyViewboxTransform(element) {\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth,\n        viewBoxHeight,\n        matrix,\n        el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)),\n        missingDimAttr = !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%',\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = {},\n        translateMatrix = '',\n        widthDiff = 0,\n        heightDiff = 0;\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    } else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    } // default is to preserve aspect ratio\n\n\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX; // calculate additional translation to move the viewbox\n      }\n\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY; // calculate additional translation to move the viewbox\n      }\n\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX + ' 0' + ' 0 ' + scaleY + ' ' + (minX * scaleX + widthDiff) + ' ' + (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g'); // element.firstChild != null\n\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n\n      element.appendChild(el);\n    } else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', '')) && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n\n\n  fabric.parseSVGDocument = function (doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n    var svgUid = fabric.Object.__uid++,\n        i,\n        len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function (el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || elements && !elements.length) {\n      callback && callback([], {});\n      return;\n    }\n\n    var clipPaths = {};\n    descendants.filter(function (el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function (el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function (el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths; // Precedence of rules:   style > class > attribute\n\n    fabric.parseElements(elements, function (instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n\n    gradientsAttrs.forEach(function (attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp('(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' + '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' + fabric.reNum + '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function parseFontDeclaration(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n\n      var fontStyle = match[1],\n          // font variant is not used\n      // fontVariant = match[2],\n      fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function getGradientDefs(doc) {\n      var tagArray = ['linearGradient', 'radialGradient', 'svg:linearGradient', 'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el,\n          j = 0,\n          gradientDefs = {};\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function parseAttributes(element, attributes, svgUid) {\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = {},\n          fontSize,\n          parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      } // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\n\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function (memo, attr) {\n        value = element.getAttribute(attr);\n\n        if (value) {\n          // eslint-disable-line\n          memo[attr] = value;\n        }\n\n        return memo;\n      }, {}); // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\n      ownAttributes = extend(ownAttributes, extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr,\n          normalizedValue,\n          normalizedStyle = {};\n\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function parseElements(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function parseStyleAttribute(element) {\n      var oStyle = {},\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      } else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function parsePointsAttribute(points) {\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      } // replace commas with whitespace and remove bookending whitespace\n\n\n      points = points.replace(/,/g, ' ').trim();\n      points = points.split(/\\s+/);\n      var parsedPoints = [],\n          i,\n          len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      } // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function getCSSRules(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          i,\n          len,\n          allRules = {},\n          rules; // very crude parsing of style contents\n\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text; // remove comments\n\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\n        if (styleContents.trim() === '') {\n          continue;\n        }\n\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function (rule) {\n          return rule.trim();\n        }); // eslint-disable-next-line no-loop-func\n\n        rules.forEach(function (rule) {\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = {},\n              declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n\n          rule = match[1];\n          rule.split(',').forEach(function (_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n\n            if (_rule === '') {\n              return;\n            }\n\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            } else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function loadSVGFromURL(url, callback, reviver, options) {\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n        var xml = r.responseXML;\n\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false'; //IE chokes on DOCTYPE\n\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function loadSVGFromString(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      } else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false'; // IE chokes on DOCTYPE\n\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.ElementsParser = function (elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = options && options.svgUid || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function (proto) {\n  proto.parse = function () {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function () {\n    var _this = this;\n\n    this.elements.forEach(function (element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function (el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function (el, index) {\n    var klass = this.findTag(el);\n\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      } catch (err) {\n        fabric.log(err);\n      }\n    } else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function (index, el) {\n    var _this = this;\n\n    return function (obj) {\n      var _options;\n\n      _this.resolveGradient(obj, el, 'fill');\n\n      _this.resolveGradient(obj, el, 'stroke');\n\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n\n      obj._removeTransformMatrix(_options);\n\n      _this.resolveClipPath(obj);\n\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function (obj, property, storage) {\n    var value = obj[property];\n\n    if (!/^url\\(/.test(value)) {\n      return;\n    }\n\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function (obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function (obj, container) {\n    return function (_newObj) {\n      _newObj._removeTransformMatrix();\n\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function (obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element,\n        klass,\n        objTransformInv,\n        container,\n        gTransform,\n        options;\n\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(element, this.createClipPathCallback(obj, container), this.options);\n      }\n\n      if (container.length === 1) {\n        clipPath = container[0];\n      } else {\n        clipPath = new fabric.Group(container);\n      }\n\n      gTransform = fabric.util.multiplyTransformMatrices(objTransformInv, clipPath.calcTransformMatrix());\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({\n        x: options.translateX,\n        y: options.translateY\n      }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function () {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function (el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype =\n  /** @lends fabric.Point.prototype */\n  {\n    type: 'point',\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function add(that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function addEquals(that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function scalarAdd(scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function scalarAddEquals(scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function subtract(that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function subtractEquals(that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function scalarSubtract(scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function scalarSubtractEquals(scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function multiply(scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function multiplyEquals(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function divide(scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function divideEquals(scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function eq(that) {\n      return this.x === that.x && this.y === that.y;\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function lt(that) {\n      return this.x < that.x && this.y < that.y;\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function lte(that) {\n      return this.x <= that.x && this.y <= that.y;\n    },\n\n    /**\n      * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function gt(that) {\n      return this.x > that.x && this.y > that.y;\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function gte(that) {\n      return this.x >= that.x && this.y >= that.y;\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function lerp(that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function distanceFrom(that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function midPointFrom(that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function min(that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function max(that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function setXY(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function setX(x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function setY(y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function setFromPoint(that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function swap(that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function clone() {\n      return new Point(this.x, this.y);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n\n\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n  fabric.Intersection.prototype =\n  /** @lends fabric.Intersection.prototype */\n  {\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function appendPoint(point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function appendPoints(points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      } else {\n        result = new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      } else {\n        result = new Intersection('Parallel');\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectLinePolygon = function (a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1,\n        b2,\n        inter,\n        i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length,\n        i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n\n\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    } else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n  fabric.Color.prototype =\n  /** @lends fabric.Color.prototype */\n  {\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function _tryParsingColor(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function _rgbToHsl(r, g, b) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      var h,\n          s,\n          l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function getSource() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function setSource(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function toRgb() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function toRgba() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function toHsl() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function toHsla() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function toHex() {\n      var source = this.getSource(),\n          r,\n          g,\n          b;\n      r = source[0].toString(16);\n      r = r.length === 1 ? '0' + r : r;\n      g = source[1].toString(16);\n      g = g.length === 1 ? '0' + g : g;\n      b = source[2].toString(16);\n      b = b.length === 1 ? '0' + b : b;\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function toHexa() {\n      var source = this.getSource(),\n          a;\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = a.length === 1 ? '0' + a : a;\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function getAlpha() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function setAlpha(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function toGrayscale() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function toBlackWhite(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n      threshold = threshold || 127;\n      average = Number(average) < Number(threshold) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function overlayWith(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(),\n          i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  fabric.Color.colorNameMap = {\n    aliceblue: '#F0F8FF',\n    antiquewhite: '#FAEBD7',\n    aqua: '#00FFFF',\n    aquamarine: '#7FFFD4',\n    azure: '#F0FFFF',\n    beige: '#F5F5DC',\n    bisque: '#FFE4C4',\n    black: '#000000',\n    blanchedalmond: '#FFEBCD',\n    blue: '#0000FF',\n    blueviolet: '#8A2BE2',\n    brown: '#A52A2A',\n    burlywood: '#DEB887',\n    cadetblue: '#5F9EA0',\n    chartreuse: '#7FFF00',\n    chocolate: '#D2691E',\n    coral: '#FF7F50',\n    cornflowerblue: '#6495ED',\n    cornsilk: '#FFF8DC',\n    crimson: '#DC143C',\n    cyan: '#00FFFF',\n    darkblue: '#00008B',\n    darkcyan: '#008B8B',\n    darkgoldenrod: '#B8860B',\n    darkgray: '#A9A9A9',\n    darkgrey: '#A9A9A9',\n    darkgreen: '#006400',\n    darkkhaki: '#BDB76B',\n    darkmagenta: '#8B008B',\n    darkolivegreen: '#556B2F',\n    darkorange: '#FF8C00',\n    darkorchid: '#9932CC',\n    darkred: '#8B0000',\n    darksalmon: '#E9967A',\n    darkseagreen: '#8FBC8F',\n    darkslateblue: '#483D8B',\n    darkslategray: '#2F4F4F',\n    darkslategrey: '#2F4F4F',\n    darkturquoise: '#00CED1',\n    darkviolet: '#9400D3',\n    deeppink: '#FF1493',\n    deepskyblue: '#00BFFF',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1E90FF',\n    firebrick: '#B22222',\n    floralwhite: '#FFFAF0',\n    forestgreen: '#228B22',\n    fuchsia: '#FF00FF',\n    gainsboro: '#DCDCDC',\n    ghostwhite: '#F8F8FF',\n    gold: '#FFD700',\n    goldenrod: '#DAA520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#ADFF2F',\n    honeydew: '#F0FFF0',\n    hotpink: '#FF69B4',\n    indianred: '#CD5C5C',\n    indigo: '#4B0082',\n    ivory: '#FFFFF0',\n    khaki: '#F0E68C',\n    lavender: '#E6E6FA',\n    lavenderblush: '#FFF0F5',\n    lawngreen: '#7CFC00',\n    lemonchiffon: '#FFFACD',\n    lightblue: '#ADD8E6',\n    lightcoral: '#F08080',\n    lightcyan: '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray: '#D3D3D3',\n    lightgrey: '#D3D3D3',\n    lightgreen: '#90EE90',\n    lightpink: '#FFB6C1',\n    lightsalmon: '#FFA07A',\n    lightseagreen: '#20B2AA',\n    lightskyblue: '#87CEFA',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#B0C4DE',\n    lightyellow: '#FFFFE0',\n    lime: '#00FF00',\n    limegreen: '#32CD32',\n    linen: '#FAF0E6',\n    magenta: '#FF00FF',\n    maroon: '#800000',\n    mediumaquamarine: '#66CDAA',\n    mediumblue: '#0000CD',\n    mediumorchid: '#BA55D3',\n    mediumpurple: '#9370DB',\n    mediumseagreen: '#3CB371',\n    mediumslateblue: '#7B68EE',\n    mediumspringgreen: '#00FA9A',\n    mediumturquoise: '#48D1CC',\n    mediumvioletred: '#C71585',\n    midnightblue: '#191970',\n    mintcream: '#F5FFFA',\n    mistyrose: '#FFE4E1',\n    moccasin: '#FFE4B5',\n    navajowhite: '#FFDEAD',\n    navy: '#000080',\n    oldlace: '#FDF5E6',\n    olive: '#808000',\n    olivedrab: '#6B8E23',\n    orange: '#FFA500',\n    orangered: '#FF4500',\n    orchid: '#DA70D6',\n    palegoldenrod: '#EEE8AA',\n    palegreen: '#98FB98',\n    paleturquoise: '#AFEEEE',\n    palevioletred: '#DB7093',\n    papayawhip: '#FFEFD5',\n    peachpuff: '#FFDAB9',\n    peru: '#CD853F',\n    pink: '#FFC0CB',\n    plum: '#DDA0DD',\n    powderblue: '#B0E0E6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#FF0000',\n    rosybrown: '#BC8F8F',\n    royalblue: '#4169E1',\n    saddlebrown: '#8B4513',\n    salmon: '#FA8072',\n    sandybrown: '#F4A460',\n    seagreen: '#2E8B57',\n    seashell: '#FFF5EE',\n    sienna: '#A0522D',\n    silver: '#C0C0C0',\n    skyblue: '#87CEEB',\n    slateblue: '#6A5ACD',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#FFFAFA',\n    springgreen: '#00FF7F',\n    steelblue: '#4682B4',\n    tan: '#D2B48C',\n    teal: '#008080',\n    thistle: '#D8BFD8',\n    tomato: '#FF6347',\n    turquoise: '#40E0D0',\n    violet: '#EE82EE',\n    wheat: '#F5DEB3',\n    white: '#FFFFFF',\n    whitesmoke: '#F5F5F5',\n    yellow: '#FFFF00',\n    yellowgreen: '#9ACD32'\n  };\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgb = function (color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromRgb = function (color) {\n    var match = color.match(Color.reRGBa);\n\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n      return [parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1];\n    }\n  };\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgba = Color.fromRgb;\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHsl = function (color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n\n\n  fabric.Color.sourceFromHsl = function (color) {\n    var match = color.match(Color.reHSLa);\n\n    if (!match) {\n      return;\n    }\n\n    var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r,\n        g,\n        b;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1];\n  };\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromHsla = Color.fromHsl;\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHex = function (color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromHex = function (color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = value.length === 3 || value.length === 4,\n          isRGBa = value.length === 8 || value.length === 4,\n          r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2),\n          g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4),\n          b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6),\n          a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : 'FF';\n      return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2))];\n    }\n  };\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromSource = function (source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color,\n        colorAlpha,\n        opacity,\n        i; // convert percents to absolute values\n\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--;) {\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        } else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n\n  var clone = fabric.util.object.clone;\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n\n  fabric.Gradient = fabric.util.createClass(\n  /** @lends fabric.Gradient.prototype */\n  {\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Array[Number]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * @type String pixels || percentage\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type\n     * @type String linear || radial\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Array[Object]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function initialize(options) {\n      options || (options = {});\n      options.coords || (options.coords = {});\n\n      var coords,\n          _this = this; // sets everything, then coords and colorstops get sets again\n\n\n      Object.keys(options).forEach(function (option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      } else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function addColorStop(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function toSVG(object, options) {\n      var coords = clone(this.coords, true),\n          i,\n          len,\n          options = options || {},\n          markup,\n          commonAttributes,\n          colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX,\n          offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox'; // colorStops must be sorted ascending\n\n      colorStops.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      } else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n      commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ? options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = ['<linearGradient ', commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n'];\n      } else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = ['<radialGradient ', commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n'];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n\n        var minRadius = Math.min(coords.r1, coords.r2);\n\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push('<stop ', 'offset=\"', colorStop.offset * 100 + '%', '\" style=\"stop-color:', colorStop.color, typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';', '\"/>\\n');\n      }\n\n      markup.push(this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n');\n      return markup.join('');\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function toLive(ctx) {\n      var gradient,\n          coords = fabric.util.object.clone(this.coords),\n          i,\n          len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n      } else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n  fabric.util.object.extend(fabric.Gradient, {\n    /* _FROM_SVG_START_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function fromElement(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ? 'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords,\n          i,\n          offsetX = 0,\n          offsetY = 0,\n          transformMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      } else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--;) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY\n      });\n      return gradient;\n    },\n\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * this function is uniquely used by Object.setGradient and is deprecated with it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function forObject(obj, options) {\n      options || (options = {});\n\n      __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\n        // those values are to avoid errors. this function is uniquely used by\n        viewBoxWidth: 100,\n        viewBoxHeight: 100\n      });\n\n      return new fabric.Gradient(options);\n    }\n  });\n  /**\n   * @private\n   */\n\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function (prop) {\n      propValue = options[prop];\n\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue = parseFloat(options[prop], 10);\n\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n(function () {\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n  fabric.Pattern = fabric.util.createClass(\n  /** @lends fabric.Pattern.prototype */\n  {\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function initialize(options, callback) {\n      options || (options = {});\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n\n      if (!options.source || options.source && typeof options.source !== 'string') {\n        callback && callback(this);\n        return;\n      } // function string\n\n\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      } else {\n        // img src string\n        var _this = this;\n\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function (img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source,\n          object; // callback\n\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      } // <img> element\n      else if (typeof this.source.src === 'string') {\n          source = this.source.src;\n        } // <canvas> element\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\n            source = this.source.toDataURL();\n          }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function toSVG(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n      }\n\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      } else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + '</pattern>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n    setOptions: function setOptions(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function toLive(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source; // if the image failed to load, return, and allow rest to continue loading\n\n      if (!source) {\n        return '';\n      } // if an image\n\n\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n\n\n  fabric.Shadow = fabric.util.createClass(\n  /** @lends fabric.Shadow.prototype */\n  {\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function initialize(options) {\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function _parseShadow(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function toString() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function toSVG(object) {\n      var fBoxX = 40,\n          fBoxY = 40,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector({\n        x: this.offsetX,\n        y: this.offsetY\n      }, fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20,\n          color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + '\\t<feMerge>\\n' + '\\t\\t<feMergeNode></feMergeNode>\\n' + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + '\\t</feMerge>\\n' + '</filter>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function toObject() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n\n      var obj = {},\n          proto = fabric.Shadow.prototype;\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function (prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n      return obj;\n    }\n  });\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  } // aliases for faster resolution\n\n\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function onBeforeScaleRotate() {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: {},\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function _initStatic(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n\n      this._initOptions(options);\n\n      this._setImageSmoothing(); // only initialize retina scaling once\n\n\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function _isRetinaScaling() {\n      return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function getRetinaScaling() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function _initRetinaScaling() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function calcOffset() {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function setOverlayImage(image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function setBackgroundImage(image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function setOverlayColor(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function setBackgroundColor(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function _setImageSmoothing() {\n      var ctx = this.getContext();\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function __setBgOverlayImage(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function (img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      } else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function __setBgOverlayColor(property, color, callback) {\n      this[property] = color;\n\n      this._initGradient(color, property);\n\n      this._initPattern(color, property, callback);\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function _createCanvasElement() {\n      var element = createCanvasElement();\n\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      if (!element.style) {\n        element.style = {};\n      }\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function _initOptions(options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function _createLowerCanvas(canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      } else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function getWidth() {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function getHeight() {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function setWidth(value, options) {\n      return this.setDimensions({\n        width: value\n      }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function setHeight(value, options) {\n      return this.setDimensions({\n        height: value\n      }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function setDimensions(dimensions, options) {\n      var cssValue;\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n\n      this._initRetinaScaling();\n\n      this._setImageSmoothing();\n\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function _setBackstoreDimension(prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function _setCssDimension(prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function getZoom() {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function setViewportTransform(vpt) {\n      var activeObject = this._activeObject,\n          object,\n          ignoreVpt = false,\n          skipAbsolute = true,\n          i,\n          len;\n      this.viewportTransform = vpt;\n\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function zoomToPoint(point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point,\n          vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function setZoom(value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function absolutePan(point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function relativePan(point) {\n      return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function getElement() {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function _onObjectAdded(obj) {\n      this.stateful && obj.setupState();\n\n      obj._set('canvas', this);\n\n      obj.setCoords();\n      this.fire('object:added', {\n        target: obj\n      });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function _onObjectRemoved(obj) {\n      this.fire('object:removed', {\n        target: obj\n      });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function clearContext(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function getContext() {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function clear() {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function renderAll() {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function renderAndReset() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function requestRenderAll() {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function calcViewportBoundaries() {\n      var points = {},\n          width = this.width,\n          height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({\n        x: 0,\n        y: 0\n      }, iVpt);\n      points.br = transformPoint({\n        x: width,\n        y: height\n      }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n    cancelRequestedRender: function cancelRequestedRender() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function renderCanvas(ctx, objects) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', {\n        ctx: ctx\n      });\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n\n      this._renderBackground(ctx);\n\n      ctx.save(); //apply viewport transform once for all rendering process\n\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n      this._renderObjects(ctx, objects);\n\n      ctx.restore();\n\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      if (this.clipTo) {\n        ctx.restore();\n      }\n\n      if (path) {\n        path.canvas = this; // needed to setup a couple of variables\n\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({\n          forClipping: true\n        });\n        this.drawClipPathOnCanvas(ctx);\n      }\n\n      this._renderOverlay(ctx);\n\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      this.fire('after:render', {\n        ctx: ctx\n      });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function drawClipPathOnCanvas(ctx) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function _renderObjects(ctx, objects) {\n      var i, len;\n\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function _renderBackgroundOrOverlay(ctx, property) {\n      var fill = this[property + 'Color'],\n          object = this[property + 'Image'],\n          v = this.viewportTransform,\n          needsVpt = this[property + 'Vpt'];\n\n      if (!fill && !object) {\n        return;\n      }\n\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive ? fill.toLive(ctx, this) : fill;\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4] + (fill.offsetX || 0), v[5] + (fill.offsetY || 0));\n        }\n\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n\n      if (object) {\n        ctx.save();\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function _renderBackground(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function _renderOverlay(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function getCenter() {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function centerObjectH(object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function centerObjectV(object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function centerObject(object) {\n      var center = this.getCenter();\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function viewportCenterObject(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function viewportCenterObjectH(object) {\n      var vpCenter = this.getVpCenter();\n\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function viewportCenterObjectV(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function getVpCenter() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({\n        x: center.left,\n        y: center.top\n      }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function _centerObject(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function toDatalessJSON(propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function _toObjectMethod(methodName, propertiesToInclude) {\n      var clipPath = this.clipPath,\n          data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function _toObjects(methodName, propertiesToInclude) {\n      return this._objects.filter(function (object) {\n        return !object.excludeFromExport;\n      }).map(function (instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function _toObject(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function __serializeBgOverlay(methodName, propertiesToInclude) {\n      var data = {},\n          bgImage = this.backgroundImage,\n          overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function toSVG(options, reviver) {\n      options || (options = {});\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n\n      this._setSVGHeader(markup, options);\n\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'background');\n\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'overlay');\n\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function _setSVGPreamble(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n\n      markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || 'UTF-8', '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function _setSVGHeader(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt,\n          viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' + options.viewBox.x + ' ' + options.viewBox.y + ' ' + options.viewBox.width + ' ' + options.viewBox.height + '\" ';\n      } else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push('<svg ', 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n', '<defs>\\n', this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), this.createSVGClipPathMarkup(options), '</defs>\\n');\n    },\n    createSVGClipPathMarkup: function createSVGClipPathMarkup(options) {\n      var clipPath = this.clipPath;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + this.clipPath.toClipPathSVG(options.reviver) + '</clipPath>\\n';\n      }\n\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function createSVGRefElementsMarkup() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function (prop) {\n        var fill = _this[prop + 'Color'];\n\n        if (fill && fill.toLive) {\n          var shouldTransform = _this[prop + 'Vpt'],\n              vpt = _this.viewportTransform,\n              object = {\n            width: _this.width / (shouldTransform ? vpt[0] : 1),\n            height: _this.height / (shouldTransform ? vpt[3] : 1)\n          };\n          return fill.toSVG(object, {\n            additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : ''\n          });\n        }\n      });\n\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function createSVGFontFacesMarkup() {\n      var markup = '',\n          fontList = {},\n          obj,\n          fontFamily,\n          style,\n          row,\n          rowIndex,\n          _char,\n          charIndex,\n          i,\n          len,\n          fontPaths = fabric.fontPaths,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n\n        fontList[fontFamily] = true;\n\n        if (!obj.styles) {\n          continue;\n        }\n\n        style = obj.styles;\n\n        for (rowIndex in style) {\n          row = style[rowIndex];\n\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += ['\\t\\t@font-face {\\n', '\\t\\t\\tfont-family: \\'', j, '\\';\\n', '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n', '\\t\\t}\\n'].join('');\n      }\n\n      if (markup) {\n        markup = ['\\t<style type=\"text/css\">', '<![CDATA[\\n', markup, ']]>', '</style>\\n'].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function _setSVGObjects(markup, reviver) {\n      var instance,\n          i,\n          len,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n\n        if (instance.excludeFromExport) {\n          continue;\n        }\n\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function _setSVGObject(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function _setSVGBgOverlayImage(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function _setSVGBgOverlayColor(markup, property) {\n      var filler = this[property + 'Color'],\n          vpt = this.viewportTransform,\n          finalWidth = this.width,\n          finalHeight = this.height;\n\n      if (!filler) {\n        return;\n      }\n\n      if (filler.toLive) {\n        var repeat = filler.repeat,\n            iVpt = fabric.util.invertTransform(vpt),\n            shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push('<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"', ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ', 'width=\"', repeat === 'repeat-y' || repeat === 'no-repeat' ? filler.source.width : finalWidth, '\" height=\"', repeat === 'repeat-x' || repeat === 'no-repeat' ? filler.source.height : finalHeight, '\" fill=\"url(#SVGID_' + filler.id + ')\"', '></rect>\\n');\n      } else {\n        markup.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ', 'fill=\"', filler, '\"', '></rect>\\n');\n      }\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function sendToBack(object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.unshift(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.unshift(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function bringToFront(object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.push(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.push(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function sendBackwards(object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function _findNewLowerIndex(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx; // traverse down the stack looking for the nearest intersecting object\n\n        for (i = idx - 1; i >= 0; --i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function bringForward(object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function _findNewUpperIndex(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx; // traverse up the stack looking for the nearest intersecting object\n\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function moveTo(object, index) {\n      removeFromArray(this._objects, object);\n\n      this._objects.splice(index, 0, object);\n\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function dispose() {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n\n      this.backgroundImage = null;\n\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' + '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n  extend(fabric.StaticCanvas,\n  /** @lends fabric.StaticCanvas */\n  {\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function supports(methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function () {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n\n    fabric.StaticCanvas.prototype.createJPEGStream = function (opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\n\n\nfabric.BaseBrush = fabric.util.createClass(\n/** @lends fabric.BaseBrush.prototype */\n{\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit: 10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function setShadow(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function _setBrushStyles() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function _saveAndTransform(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function _setShadow() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n  needsFullRender: function needsFullRender() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function _resetShadow() {\n    var ctx = this.canvas.contextTop;\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n(function () {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush,\n  /** @lends fabric.PencilBrush.prototype */\n  {\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function initialize(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function _drawSegment(ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function onMouseDown(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      this._prepareForDrawing(pointer); // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n\n\n      this._captureDrawingPath(pointer);\n\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function onMouseMove(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n\n          this._render();\n        } else {\n          var points = this._points,\n              length = points.length,\n              ctx = this.canvas.contextTop; // draw the curve update\n\n          this._saveAndTransform(ctx);\n\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function onMouseUp(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n\n      this.oldEnd = undefined;\n\n      this._finalizeAndAddPath();\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function _prepareForDrawing(pointer) {\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function _addPoint(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n\n      this._points.push(point);\n\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function _reset() {\n      this._points = [];\n\n      this._setBrushStyles();\n\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function _captureDrawingPath(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function _render() {\n      var ctx = this.canvas.contextTop,\n          i,\n          len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n\n      ctx.beginPath(); //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function convertPointsToSVGPath(points) {\n      var path = [],\n          i,\n          width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length,\n          multSignX = 1,\n          multSignY = 0,\n          manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2); // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n\n        p1 = points[i];\n\n        if (i + 1 < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function createPath(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function decimatePoints(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n\n      var zoom = this.canvas.getZoom(),\n          adjustedDistance = Math.pow(distance / zoom, 2),\n          i,\n          l = points.length - 1,\n          lastPoint = points[0],\n          newPoints = [lastPoint],\n          cDistance;\n\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function _finalizeAndAddPath() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n\n      this._resetShadow(); // fire event 'path' created\n\n\n      this.canvas.fire('path:created', {\n        path: path\n      });\n    }\n  });\n})();\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\n\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.CircleBrush.prototype */\n{\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function initialize(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function drawDot(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n\n    this._saveAndTransform(ctx);\n\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n  dot: function dot(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function onMouseDown(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function _render() {\n    var ctx = this.canvas.contextTop,\n        i,\n        len,\n        points = this.points;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function onMouseMove(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function onMouseUp() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove,\n        i,\n        len;\n    this.canvas.renderOnAddRemove = false;\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n        radius: point.radius,\n        left: point.x,\n        top: point.y,\n        originX: 'center',\n        originY: 'center',\n        fill: point.fill\n      });\n      this.shadow && circle.setShadow(this.shadow);\n      circles.push(circle);\n    }\n\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function addPoint(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n        circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n        circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n    this.points.push(pointerPoint);\n    return pointerPoint;\n  }\n});\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.SprayBrush.prototype */\n{\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density: 20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth: 1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance: 1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity: false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping: true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function initialize(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function onMouseDown(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function onMouseMove(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function onMouseUp() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function _getOptimizedRects(rects) {\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = {},\n        key,\n        i,\n        len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n\n    var uniqueRectsArray = [];\n\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function render(sprayChunk) {\n    var ctx = this.canvas.contextTop,\n        i,\n        len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function _render() {\n    var ctx = this.canvas.contextTop,\n        i,\n        ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function addSprayChunk(pointer) {\n    this.sprayChunkPoints = [];\n    var x,\n        y,\n        width,\n        radius = this.width / 2,\n        i;\n\n    for (i = 0; i < this.density; i++) {\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt( // bottom clamp width to 1\n        Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n      } else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush,\n/** @lends fabric.PatternBrush.prototype */\n{\n  getPatternSrc: function getPatternSrc() {\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n    return patternCanvas;\n  },\n  getPatternSrcFunction: function getPatternSrcFunction() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function getPattern() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function _setBrushStyles() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function createPath(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n(function () {\n  var _getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      STROKE_OFFSET = 0.5;\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n\n      this._initInteractive();\n\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform: false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey: 'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey: 'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey: 'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive: true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection: true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey: 'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey: null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(100, 100, 255, 0.3)',\n    // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray: [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth: 1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: 'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: 'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor: 'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor: 'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor: 'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor: 'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass: 'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance: 0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind: false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode: false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function _initInteractive() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n\n      this._initWrapperElement();\n\n      this._createUpperCanvas();\n\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function _chooseObjectsToRender() {\n      var activeObjects = this.getActiveObjects(),\n          object,\n          objsToRender,\n          activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n\n          if (activeObjects.indexOf(object) === -1) {\n            objsToRender.push(object);\n          } else {\n            activeGroupObjects.push(object);\n          }\n        }\n\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      } else {\n        objsToRender = this._objects;\n      }\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function renderAll() {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n    renderTopLayer: function renderTopLayer(ctx) {\n      ctx.save();\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      } // we render the top context - last object\n\n\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n\n        this.contextTopDirty = true;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function renderTop() {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function _resetCurrentTransform() {\n      var t = this._currentTransform;\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          } else {\n            t.mouseXSign = 1;\n          }\n        }\n\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          } else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      } else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function containsPoint(e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      } else {\n        xy = {\n          x: pointer.x,\n          y: pointer.y\n        };\n      } // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\n\n      return target.containsPoint(xy) || target._findTargetCorner(pointer);\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function _normalizePointer(object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function isTargetTransparent(target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {\n          x: x,\n          y: y\n        }),\n            targetRelativeX = Math.max(target.cacheTranslationX + normalizedPointer.x * target.zoomX, 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + normalizedPointer.y * target.zoomY, 0);\n\n        var isTransparent = fabric.util.isTransparent(target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor,\n          v = this.viewportTransform;\n      target.selectionBackgroundColor = '';\n      this.clearContext(ctx);\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false\n      });\n      target.selectionBackgroundColor = originalColor;\n      var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function _isSelectionKeyPressed(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function (key) {\n          return e[key] === true;\n        });\n      } else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function _shouldClearSelection(e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n      return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function _shouldCenterTransform(target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      } else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function _getOriginFromCorner(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      } else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      } else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function _getActionFromCorner(alreadySelected, corner, e\n    /* target */\n    ) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function _setupCurrentTransform(e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target)\n      };\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function _translateObject(x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function _changeSkewTransformOrigin(mouseMove, t, by) {\n      var property = 'originX',\n          origins = {\n        0: 'center'\n      },\n          skew = t.target.skewX,\n          originA = 'left',\n          originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n      mouseMove = mouseMove > 0 ? 1 : -1;\n\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n\n      origins[-1] = originA;\n      origins[1] = originB;\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      } else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function _skewObject(x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if (lockSkewingX && by === 'x' || lockSkewingY && by === 'y') {\n        return false;\n      } // Get the constraint point\n\n\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin,\n          constraintPosition,\n          dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY); // Actually skew the object\n\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y; // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function _setObjectSkew(localMouse, transform, by, _dim) {\n      var target = transform.target,\n          newValue,\n          skewed = false,\n          skewSign = transform.skewSign,\n          newDim,\n          dimNoSkew,\n          otherBy,\n          _otherBy,\n          _by,\n          newDimMouse,\n          skewX,\n          skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      } else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      } else {\n        newValue = skewSign * Math.atan(newDimMouse / target['scale' + _by] / (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = _dim[otherBy] / newDim[otherBy] * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function _scaleObject(x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      } // Get the constraint point\n\n\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(),\n          scaled = false;\n\n      this._setLocalMouse(localMouse, t); // Actually scale the object\n\n\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim); // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function _setObjectScale(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target,\n          forbidScalingX = false,\n          forbidScalingY = false,\n          scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n\n      if (by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      } else if (!by) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = scaled || changeX);\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = scaled || changeY);\n      } else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = changeX);\n      } else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = changeY);\n      }\n\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function _scaleObjectEqually(localMouse, target, transform, _dim) {\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX,\n          scaled,\n          signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1,\n          newScaleX,\n          newScaleY; // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function _flipObject(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        } else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        } else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function _setLocalMouse(localMouse, t) {\n      var target = t.target,\n          zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      } else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      } else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      } // adjust the mouse coordinates when dealing with padding\n\n\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        } else {\n          localMouse.x -= padding;\n        }\n      } else {\n        // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        } else {\n          localMouse.y -= padding;\n        }\n      } else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function _rotateObject(x, y) {\n      var t = this._currentTransform,\n          target = t.target,\n          constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle = target.snapAngle,\n            snapThreshold = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      } // normalize angle to positive value\n\n\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      } else {\n        // rotation only happen here\n        target.angle = angle; // Make sure the constraints apply\n\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function setCursor(value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function _drawSelection(ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor; // selection border\n\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n        var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n        ctx.beginPath();\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n        ctx.closePath();\n        ctx.stroke();\n      } else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\n        ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function findTarget(e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget,\n          activeTargetSubs; // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      } // if we hit the corner of an activeObject, let's return that.\n\n\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n\n      if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function _checkTarget(pointer, obj, globalPointer) {\n      if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n\n          if (!isTransparent) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function _searchPossibleTargets(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target,\n          i = objects.length,\n          subTarget; // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ? this._normalizePointer(objToCheck.group, pointer) : pointer;\n\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n\n          break;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function restorePointerVpt(pointer) {\n      return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function getPointer(e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = _getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs(bounds.top - bounds.bottom);\n        }\n\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs(bounds.right - bounds.left);\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = {\n          width: 1,\n          height: 1\n        };\n      } else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function _createUpperCanvas() {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''); // there is no need to create a new upperCanvas element if we have already one.\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      } else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\n      this._applyCanvasStyle(this.upperCanvasEl);\n\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function _createCacheCanvas() {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function _initWrapperElement() {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function _applyCanvasStyle(element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function _copyCanvasStyle(fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function getSelectionContext() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function getSelectionElement() {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function getActiveObject() {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function getActiveObjects() {\n      var active = this._activeObject;\n\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        } else {\n          return [active];\n        }\n      }\n\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function _onObjectRemoved(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', {\n          target: obj\n        });\n\n        this._discardActiveObject();\n\n        this.fire('selection:cleared', {\n          target: obj\n        });\n        obj.fire('deselected');\n      }\n\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function _fireSelectionEvents(oldObjects, e) {\n      var somethingChanged = false,\n          objects = this.getActiveObjects(),\n          added = [],\n          removed = [],\n          opt = {\n        e: e\n      };\n      oldObjects.forEach(function (oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function (object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed; // added for backward compatibility\n\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      } else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n\n        opt.selected = added; // added for backward compatibility\n\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      } else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function setActiveObject(object, e) {\n      var currentActives = this.getActiveObjects();\n\n      this._setActiveObject(object, e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function _setActiveObject(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n\n      if (object.onSelect({\n        e: e\n      })) {\n        return false;\n      }\n\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function _discardActiveObject(e, object) {\n      var obj = this._activeObject;\n\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({\n          e: e,\n          object: object\n        })) {\n          return false;\n        }\n\n        this._activeObject = null;\n      }\n\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function discardActiveObject(e) {\n      var currentActives = this.getActiveObjects(),\n          activeObject = this.getActiveObject();\n\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', {\n          target: activeObject,\n          e: e\n        });\n      }\n\n      this._discardActiveObject(e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function dispose() {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function clear() {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function drawControls(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function _toObject(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude); //Undo the damage we did by changing all of its properties\n\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function _realizeGroupTransformOnObject(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top']; //Copy all the positionally relevant properties across now\n\n        var originalValues = {};\n        layoutProps.forEach(function (prop) {\n          originalValues[prop] = instance[prop];\n        });\n\n        this._activeObject.realizeTransform(instance);\n\n        return originalValues;\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function _unwindGroupTransformOnObject(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function _setSVGObject(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n    setViewportTransform: function setViewportTransform(vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  }); // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n(function () {\n  var cursorOffset = {\n    mt: 0,\n    // n\n    tr: 1,\n    // ne\n    mr: 2,\n    // e\n    br: 3,\n    // se\n    mb: 4,\n    // s\n    bl: 5,\n    // sw\n    ml: 6,\n    // w\n    tl: 7 // nw\n\n  },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3,\n      MIDDLE_CLICK = 2,\n      LEFT_CLICK = 1,\n      addEventOptions = {\n    passive: false\n  };\n\n  function checkClick(e, value) {\n    return e.button && e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: ['n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize', 'nw-resize'],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function _initEventListeners() {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n\n      this._bindEvents();\n\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function _getEventPrefix() {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n    addOrRemove: function addOrRemove(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function removeListeners() {\n      this.addOrRemove(removeListener, 'remove'); // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function _bindEvents() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function _onGesture(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function _onDrag(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function _onMouseWheel(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function _onMouseOut(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', {\n        target: target,\n        e: e\n      });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', {\n        e: e\n      });\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function (obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function _onMouseEnter(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', {\n          target: null,\n          e: e\n        });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function _onOrientationChange(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function _onShake(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function _onLongPress(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function _onDragOver(e) {\n      e.preventDefault();\n\n      var target = this._simpleEventHandler('dragover', e);\n\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function _onContextMenu(e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function _onDoubleClick(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'dblclick');\n\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function getPointerId(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function _isMainEvent(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n\n      if (evt.isPrimary === false) {\n        return false;\n      }\n\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function _onTouchStart(e) {\n      e.preventDefault();\n\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions); // Unbind mousedown to prevent double triggers from touch devices\n\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function _onMouseDown(e) {\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function _onTouchEnd(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      this.mainTouchId = null;\n\n      var eventTypePrefix = this._getEventPrefix();\n\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      var _this = this;\n\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n\n      this._willAddMouseDown = setTimeout(function () {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function _onMouseUp(e) {\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function _onMouseMove(e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function _onResize() {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function _shouldRender(target) {\n      var activeObject = this._activeObject;\n\n      if (!!activeObject !== !!target || activeObject && target && activeObject !== target) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      } else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function __onMouseUp(e) {\n      var target,\n          transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          shouldRender = false,\n          isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n\n      this._cacheTransformEventData(e);\n\n      target = this._target;\n\n      this._handleEvent(e, 'up:before'); // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n\n        this._resetTransformEventData();\n\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._setCursorFromEvent(e, target);\n\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n\n      this._groupSelector = null;\n      this._currentTransform = null; // reset the target information about which corner is selected\n\n      target && (target.__corner = 0);\n\n      if (shouldRender) {\n        this.requestRenderAll();\n      } else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function _simpleEventHandler(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets\n      };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n\n      if (!targets) {\n        return target;\n      }\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function _handleEvent(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets,\n        button: button || LEFT_CLICK,\n        isClick: isClick || false,\n        pointer: this._pointer,\n        absolutePointer: this._absolutePointer,\n        transform: this._currentTransform\n      };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function _finalizeCurrentTransform(e) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n        e: e,\n        target: target,\n        transform: transform\n      };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n\n          this._fire(eventName, options);\n        }\n\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function _addEventOptions(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function _onMouseDownInDrawingMode(e) {\n      this._isCurrentlyDrawing = true;\n\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, {\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function _onMouseMoveInDrawingMode(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e: e,\n          pointer: pointer\n        });\n      }\n\n      this.setCursor(this.freeDrawingCursor);\n\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function _onMouseUpInDrawingMode(e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({\n        e: e,\n        pointer: pointer\n      });\n\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function __onMouseDown(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'down:before');\n\n      var target = this._target; // if right click just fire events\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      } // ignore if some object is being transformed at this moment\n\n\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer; // save pointer for check in __onMouseUp event\n\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      } else if (shouldGroup) {\n        this._handleGrouping(e, target);\n\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n\n      this._handleEvent(e, 'down'); // we must renderAll so that we update the visuals\n\n\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function _resetTransformEventData() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function _cacheTransformEventData(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function _beforeTransform(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t\n      }); // determine if it's a drag or rotate case\n\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function __onMouseMove(e) {\n      this._handleEvent(e, 'move:before');\n\n      this._cacheTransformEventData(e);\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector; // We initially clicked in an empty area, so we draw a box for multiple selection\n\n      if (groupSelector) {\n        pointer = this._pointer;\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n        this.renderTop();\n      } else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n\n        this._setCursorFromEvent(e, target);\n\n        this._fireOverOutEvents(target, e);\n      } else {\n        this._transformObject(e);\n      }\n\n      this._handleEvent(e, 'move');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function _fireOverOutEvents(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover'\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function _fireEnterLeaveEvents(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter'\n      });\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function fireSyntheticInOutEvents(target, e, config) {\n      var inOpt,\n          outOpt,\n          oldTarget = this[config.targetName],\n          outFires,\n          inFires,\n          targetChanged = oldTarget !== target,\n          canvasEvtIn = config.canvasEvtIn,\n          canvasEvtOut = config.canvasEvtOut;\n\n      if (targetChanged) {\n        inOpt = {\n          e: e,\n          target: target,\n          previousTarget: oldTarget\n        };\n        outOpt = {\n          e: e,\n          target: oldTarget,\n          nextTarget: target\n        };\n        this[config.targetName] = target;\n      }\n\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function __onMouseWheel(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'wheel');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function _transformObject(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function _performTransformAction(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n        target: transform.target,\n        e: e,\n        transform: transform,\n        pointer: pointer\n      };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      } else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      } else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      } else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      } else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      } else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      } else {\n        actionPerformed = this._translateObject(x, y);\n\n        if (actionPerformed) {\n          this._fire('moving', options);\n\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function _fire(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function _beforeScaleTransform(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target); // Switch from a normal resize to center-based\n\n\n        if (centerTransform && (transform.originX !== 'center' || transform.originY !== 'center') || // Switch from center-based resize to normal one\n        !centerTransform && transform.originX === 'center' && transform.originY === 'center') {\n          this._resetCurrentTransform();\n\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function _onScale(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      } else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function _isUniscalePossible(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function _setCursorFromEvent(e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ? this._activeObject : null,\n          // only show proper corner when group selection is not active\n      corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      } else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function getCornerCursor(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      } else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      } else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      } else {\n        return this.defaultCursor;\n      }\n    },\n    actionIsDisabled: function actionIsDisabled(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      } else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      } else if (corner === 'mtr') {\n        return target.lockRotation;\n      } else {\n        return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function _getRotatedCornerCursor(corner, target, e) {\n      var n = Math.round(target.angle % 360 / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n\n      n += cursorOffset[corner];\n\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      } // normalize n to be from 0 to 7\n\n\n      n %= 8;\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n(function () {\n  var min = Math.min,\n      max = Math.max;\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function _shouldGroup(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function _handleGrouping(e, target) {\n      var activeObject = this._activeObject; // avoid multi select when shift click on a corner\n\n      if (activeObject.__corner) {\n        return;\n      }\n\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true); // if even object is not found or we are on activeObjectCorner, bail out\n\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      } else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function _updateActiveSelection(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      } else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function _createActiveSelection(target, e) {\n      var currentActives = this.getActiveObjects(),\n          group = this._createGroup(target);\n\n      this._hoveredTarget = group;\n\n      this._setActiveObject(group, e);\n\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function _createGroup(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower ? [this._activeObject, target] : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function _groupSelectedObjects(e) {\n      var group = this._collectObjects(e),\n          aGroup; // do not create group for 1 element only\n\n\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      } else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function _collectObjects(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2; // we iterate reverse order to collect top first in case of click.\n\n      for (var i = this._objects.length; i--;) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n          group.push(currentObject); // only add one object if it's a click\n\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function (object) {\n          return !object.onSelect({\n            e: e\n          });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function _maybeGroupObjects(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      this.setCursor(this.defaultCursor); // clear selection and current transformation\n\n      this._groupSelector = null;\n    }\n  });\n})();\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function toDataURL(options) {\n      options || (options = {});\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function toCanvasElement(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || {};\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function loadFromDatalessJSON(json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function loadFromJSON(json, callback, reviver) {\n    if (!json) {\n      return;\n    } // serialize if it wasn't already\n\n\n    var serialized = typeof json === 'string' ? JSON.parse(json) : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        } else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function __setupCanvas(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n\n    enlivenedObjects.forEach(function (obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove; // remove parts i cannot set as options\n\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay; // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n\n    this._setOptions(serialized);\n\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function _setBgOverlay(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function cbIfLoaded() {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function __setBgOverlay(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function (enlivedObject) {\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    } else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function () {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function _enlivenObjects(objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function _toDataURL(format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function _toDataURLWithMultiplier(format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function clone(callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function (clone) {\n      clone.loadFromJSON(data, function () {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function cloneWithoutData(callback) {\n    var el = fabric.util.createCanvasElement();\n    el.width = this.width;\n    el.height = this.height;\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function () {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    } else {\n      callback && callback(clone);\n    }\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n\n\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type: 'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX: 'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY: 'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top: 0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left: 0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width: 0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height: 0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX: false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY: false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity: 1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle: 0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX: 0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY: 0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize: 13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners: true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding: 0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor: 'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray: null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor: 'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor: null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle: 'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray: null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill: 'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule: 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor: '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth: 1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap: 'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin: 'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit: 4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving: 0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor: 1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix: null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit: 0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable: true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented: true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible: true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls: true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders: true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint: true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset: 40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo: null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX: false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY: false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation: false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX: false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY: false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling: false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX: false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY: false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip: false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport: false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching: objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache: false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache: true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform: false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty: true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst: 'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' + 'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' + 'skewX skewY fillRule paintFirst clipPath strokeUniform').split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: ('fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' + ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath').split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function _createCacheCanvas() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n\n      this._updateCacheCanvas(); // if canvas gets created, is empty, so dirty.\n\n\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function _limitCacheSize(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width,\n          height = dims.height,\n          max = fabric.maxCacheSideLimit,\n          min = fabric.minCacheSideLimit;\n\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n\n        if (height < min) {\n          dims.height = min;\n        }\n\n        return dims;\n      }\n\n      var ar = width / height,\n          limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function _getCacheCanvasDimensions() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n      dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function _updateCacheCanvas() {\n      var targetCanvas = this.canvas;\n\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width,\n          height = dims.height,\n          drawingWidth,\n          drawingHeight,\n          zoomX = dims.zoomX,\n          zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0,\n          additionalHeight = 0,\n          shouldResizeCanvas = false;\n\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        } else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\n        this._cacheContext.scale(zoomX, zoomY);\n\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function setOptions(options) {\n      this._setOptions(options);\n\n      this._initGradient(options.fill, 'fill');\n\n      this._initGradient(options.stroke, 'stroke');\n\n      this._initClipping(options);\n\n      this._initPattern(options.fill, 'fill');\n\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function transform(ctx) {\n      var m;\n\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      } else {\n        m = this.calcOwnMatrix();\n      }\n\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          object = {\n        type: this.type,\n        version: fabric.version,\n        originX: this.originX,\n        originY: this.originY,\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\n        fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n        stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n        strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n        strokeLineCap: this.strokeLineCap,\n        strokeDashOffset: this.strokeDashOffset,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n        flipX: this.flipX,\n        flipY: this.flipY,\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n        shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n        visible: this.visible,\n        clipTo: this.clipTo && String(this.clipTo),\n        backgroundColor: this.backgroundColor,\n        fillRule: this.fillRule,\n        paintFirst: this.paintFirst,\n        globalCompositeOperation: this.globalCompositeOperation,\n        transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n      };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function _removeDefaultValues(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function (prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' && Object.prototype.toString.call(prototype[prop]) === '[object Array]'; // basically a check for [] === []\n\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function getObjectScaling() {\n      var scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function getTotalObjectScaling() {\n      var scale = this.getObjectScaling(),\n          scaleX = scale.scaleX,\n          scaleY = scale.scaleY;\n\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function getObjectOpacity() {\n      var opacity = this.opacity;\n\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function _set(key, value) {\n      var shouldConstrainValue = key === 'scaleX' || key === 'scaleY',\n          isChanged = this[key] !== value,\n          groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      } else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      } else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      } else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function setOnGroup() {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function getViewportTransform() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function isNotVisible() {\n      return this.opacity === 0 || this.width === 0 && this.height === 0 && this.strokeWidth === 0 || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      ctx.save();\n\n      this._setupCompositeOperation(ctx);\n\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n\n      this._setOpacity(ctx);\n\n      this._setShadow(ctx, this);\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n\n      this.clipTo && fabric.util.clipContext(this, ctx);\n\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      } else {\n        this._removeCacheCanvas();\n\n        this.dirty = false;\n        this.drawObject(ctx);\n\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({\n            propertySet: 'cacheProperties'\n          });\n        }\n      }\n\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n    renderCache: function renderCache(options) {\n      options = options || {};\n\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({\n          propertySet: 'cacheProperties'\n        });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function _removeCacheCanvas() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function hasStroke() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function hasFill() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function needsItsOwnCache() {\n      if (this.paintFirst === 'stroke' && this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n\n      if (this.clipPath) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function willDrawShadow() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function drawClipPathOnCache(ctx) {\n      var path = this.clipPath;\n      ctx.save(); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      } else {\n        ctx.globalCompositeOperation = 'destination-in';\n      } //ctx.scale(1 / 2, 1 / 2);\n\n\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function drawObject(ctx, forClipping) {\n      var originalFill = this.fill,\n          originalStroke = this.stroke;\n\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n\n        this._setClippingProperties(ctx);\n      } else {\n        this._renderBackground(ctx);\n\n        this._setStrokeStyles(ctx, this);\n\n        this._setFillStyles(ctx, this);\n      }\n\n      this._render(ctx);\n\n      this._drawClipPath(ctx);\n\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n    _drawClipPath: function _drawClipPath(ctx) {\n      var path = this.clipPath;\n\n      if (!path) {\n        return;\n      } // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n\n\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({\n        forClipping: true\n      });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function drawCacheOnCanvas(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function isCacheDirty(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      } else {\n        if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged('cacheProperties')) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function _renderBackground(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      var dim = this._getNonTransformedDimensions();\n\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y); // if there is background color no other shadows\n      // should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function _setOpacity(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      } else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n    _setStrokeStyles: function _setStrokeStyles(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n      }\n    },\n    _setFillStyles: function _setFillStyles(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n      }\n    },\n    _setClippingProperties: function _setClippingProperties(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function _setLineDash(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      } // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\n\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        alternative && alternative(ctx);\n      }\n\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function (value) {\n          return value * ctx.lineWidth;\n        }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function _renderControls(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options,\n          drawBorders,\n          drawControls;\n      styleOverride = styleOverride || {};\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      } else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function _setShadow(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow,\n          canvas = this.canvas,\n          scaling,\n          multX = canvas && canvas.viewportTransform[0] || 1,\n          multY = canvas && canvas.viewportTransform[3] || 1;\n\n      if (shadow.nonScaling) {\n        scaling = {\n          scaleX: 1,\n          scaleY: 1\n        };\n      } else {\n        scaling = this.getObjectScaling();\n      }\n\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function _removeShadow(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function _applyPatternGradientTransform(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return {\n          offsetX: 0,\n          offsetY: 0\n        };\n      }\n\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      } else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n\n      return {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function _renderPaintInOrder(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n\n        this._renderFill(ctx);\n      } else {\n        this._renderFill(ctx);\n\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render()\n    /* ctx */\n    {},\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function _renderFill(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n\n      this._applyPatternGradientTransform(ctx, this.fill);\n\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      } else {\n        ctx.fill();\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function _renderStroke(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\n      if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        this._applyPatternForTransformedGradient(ctx, this.stroke);\n      } else {\n        this._applyPatternGradientTransform(ctx, this.stroke);\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function _applyPatternForTransformedGradient(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(),\n          pCtx,\n          retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling,\n          height = dims.y / this.scaleY / retinaScaling;\n\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath();\n      pCtx.moveTo(0, 0);\n      pCtx.lineTo(width, 0);\n      pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height);\n      pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(dims.zoomX / this.scaleX / retinaScaling, dims.zoomY / this.scaleY / retinaScaling);\n\n      this._applyPatternGradientTransform(pCtx, filler);\n\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(retinaScaling * this.scaleX / dims.zoomX, retinaScaling * this.scaleY / dims.zoomY);\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function _findCenterFromElement() {\n      return {\n        x: this.left + this.width / 2,\n        y: this.top + this.height / 2\n      };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function _assignTransformMatrixProps() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function _removeTransformMatrix(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n\n      this.transformMatrix = null;\n\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function clone(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      } else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function cloneAsImage(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function toCanvasElement(options) {\n      options || (options = {});\n      var utils = fabric.util,\n          origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow,\n          abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n      boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow,\n          scaling,\n          shadowOffset = {\n        x: 0,\n        y: 0\n      },\n          shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n\n        if (shadow.nonScaling) {\n          scaling = {\n            scaleX: 1,\n            scaleY: 1\n          };\n        } else {\n          scaling = this.getObjectScaling();\n        }\n\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX);\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY);\n      }\n\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false\n      });\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords(); // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function toDataURL(options) {\n      options || (options = {});\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function isType(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function complexity() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function toJSON(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.4.0\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function setGradient(property, options) {\n      options || (options = {});\n      var gradient = {\n        colorStops: []\n      };\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n      gradient.gradientUnits = options.gradientUnits || 'pixels';\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function setPatternFill(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function setShadow(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function setColor(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function rotate(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function centerH() {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function viewportCenterH() {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function centerV() {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function viewportCenterV() {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function center() {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function viewportCenter() {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function getLocalPointer(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function _setupCompositeOperation(ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n  extend(fabric.Object.prototype, fabric.Observable);\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function (className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function (patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n\n\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n    left: -0.5,\n    center: 0,\n    right: 0.5\n  },\n      originYOffset = {\n    top: -0.5,\n    center: 0,\n    bottom: 0.5\n  };\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function translateToGivenOrigin(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX,\n          offsetY,\n          dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      } else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      } else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      } else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      } else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function translateToCenterPoint(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function translateToOriginPoint(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function getCenterPoint() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function getPointByOrigin(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function toLocalPoint(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p,\n          p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined') {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      } else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function setPositionByOrigin(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function adjustPosition(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom,\n          offsetTo; //TODO: this function does not consider mixed situation like top, center.\n\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      } else {\n        offsetFrom = this.originX - 0.5;\n      }\n\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      } else {\n        offsetTo = to - 0.5;\n      }\n\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function _setOriginToCenter() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n      var center = this.getCenterPoint();\n      this.originX = 'center';\n      this.originY = 'center';\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function _resetOrigin() {\n      var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function _getLeftTopCoords() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n})();\n\n(function () {\n  function _getCoords(coords) {\n    return [new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y)];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function getCoords(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return _getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function intersectsWithRect(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function intersectsWithObject(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n      return intersection.status === 'Intersection' || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function isContainedWithinObject(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0,\n          lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function isContainedWithinRect(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n      return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function containsPoint(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords),\n          xPoints = this._findCrossPoints(point, lines); // if xPoints is odd then point is inside the object\n\n\n      return xPoints !== 0 && xPoints % 2 === 1;\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function isOnScreen(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate),\n          point;\n\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      } // no points on screen, check intersection with absolute coordinates\n\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function _containsCenterOfCanvas(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = {\n        x: (pointTL.x + pointBR.x) / 2,\n        y: (pointTL.y + pointBR.y) / 2\n      };\n\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function isPartiallyOnScreen(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function _getImageLines(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function _findCrossPoints(point, lines) {\n      var b1,\n          b2,\n          a1,\n          a2,\n          xi,\n          // yi,\n      xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey]; // optimisation 1: line below point. no cross\n\n        if (iLine.o.y < point.y && iLine.d.y < point.y) {\n          continue;\n        } // optimisation 2: line above point. no cross\n\n\n        if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n          continue;\n        } // optimisation 3: vertical line case\n\n\n        if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n          xi = iLine.o.x; // yi = point.y;\n        } // calculate the intersection point\n        else {\n            b1 = 0;\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n            a1 = point.y - b1 * point.x;\n            a2 = iLine.o.y - b2 * iLine.o.x;\n            xi = -(a1 - a2) / (b1 - b2); // yi = a1 + b1 * xi;\n          } // dont count xi < point.x cases\n\n\n        if (xi >= point.x) {\n          xcount += 1;\n        } // optimisation 4: specific for square images\n\n\n        if (xcount === 2) {\n          break;\n        }\n      }\n\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function getBoundingRect(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function getScaledWidth() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function getScaledHeight() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function _constrainScale(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        } else {\n          return this.minScaleLimit;\n        }\n      } else if (value === 0) {\n        return 0.0001;\n      }\n\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function scale(value) {\n      this._set('scaleX', value);\n\n      this._set('scaleY', value);\n\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function scaleToWidth(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function scaleToHeight(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function calcCoords(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2,\n          h = dim.y / 2,\n          tl = transformPoint({\n        x: -w,\n        y: -h\n      }, finalMatrix),\n          tr = transformPoint({\n        x: w,\n        y: -h\n      }, finalMatrix),\n          bl = transformPoint({\n        x: -w,\n        y: h\n      }, finalMatrix),\n          br = transformPoint({\n        x: w,\n        y: h\n      }, finalMatrix);\n\n      if (!absolute) {\n        var padding = this.padding,\n            angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle),\n            sin = fabric.util.sin(angle),\n            cosP = cos * padding,\n            sinP = sin * padding,\n            cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n\n        var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      } // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n\n      var coords = {\n        // corners\n        tl: tl,\n        tr: tr,\n        br: br,\n        bl: bl\n      };\n\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb; // rotating point\n\n        coords.mtr = mtr;\n      }\n\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function setCoords(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      } // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\n\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function _calcRotateMatrix() {\n      return fabric.util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function _calcTranslateMatrix() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n    transformMatrixKey: function transformMatrixKey(skipGroup) {\n      var sep = '_',\n          prefix = '';\n\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      }\n\n      ;\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function calcTransformMatrix(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n\n      var key = this.transformMatrixKey(),\n          cache = this.matrixCache || (this.matrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this.calcOwnMatrix();\n\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function calcOwnMatrix() {\n      var key = this.transformMatrixKey(true),\n          cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var tMatrix = this._calcTranslateMatrix();\n\n      this.translateX = tMatrix[4];\n      this.translateY = tMatrix[5];\n      cache.key = key;\n      cache.value = fabric.util.composeMatrix(this);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\n     * not including or including flipX, flipY to emulate the flipping boolean\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _calcDimensionsTransformMatrix: function _calcDimensionsTransformMatrix(skewX, skewY, flipping) {\n      return fabric.util.calcDimensionsMatrix({\n        skewX: skewX,\n        skewY: skewY,\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n      });\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function _getNonTransformedDimensions() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return {\n        x: w,\n        y: h\n      };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function _getTransformedDimensions(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX,\n          dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      } else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      } else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n\n      var points = [{\n        x: -dimX,\n        y: -dimY\n      }, {\n        x: dimX,\n        y: -dimY\n      }, {\n        x: -dimX,\n        y: dimY\n      }, {\n        x: dimX,\n        y: dimY\n      }],\n          transformMatrix = fabric.util.calcDimensionsMatrix({\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY\n      }),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function _finalizeDimensions(width, height) {\n      return this.strokeUniform ? {\n        x: width + this.strokeWidth,\n        y: height + this.strokeWidth\n      } : {\n        x: width,\n        y: height\n      };\n    },\n\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function _calculateCurrentDimensions() {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function sendToBack() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    } else {\n      this.canvas.sendToBack(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function bringToFront() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    } else {\n      this.canvas.bringToFront(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function sendBackwards(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    } else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function bringForward(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    } else {\n      this.canvas.bringForward(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function moveTo(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    } else {\n      this.canvas.moveTo(this, index);\n    }\n\n    return this;\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    } else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    } else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function getSvgStyles(skipShadow) {\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n      return [stroke, 'stroke-width: ', strokeWidth, '; ', 'stroke-dasharray: ', strokeDashArray, '; ', 'stroke-linecap: ', strokeLineCap, '; ', 'stroke-dashoffset: ', strokeDashOffset, '; ', 'stroke-linejoin: ', strokeLineJoin, '; ', 'stroke-miterlimit: ', strokeMiterLimit, '; ', fill, 'fill-rule: ', fillRule, '; ', 'opacity: ', opacity, ';', filter, visibility].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function getSvgSpanStyles(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ? 'font-family: ' + (style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1 ? '\\'' + style.fontFamily + '\\'' : style.fontFamily) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + -style.deltaY + '; ' : '';\n\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, deltaY, useWhiteSpace ? 'white-space: pre; ' : ''].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function getSvgTextDecoration(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') + (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function getSvgFilter() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function getSvgCommons() {\n      return [this.id ? 'id=\"' + this.id + '\" ' : '', this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : ''].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function getSvgTransform(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform + (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function getSvgTransformMatrix() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n    _setSVGBg: function _setSVGBg(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push('\\t\\t<rect ', this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function _createBaseClipPathSVGMarkup(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [this.getSvgTransform(true, additionalTransform), this.getSvgCommons()].join(''),\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function _createBaseSVGMarkup(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke,\n          fill = this.fill,\n          shadow = this.shadow,\n          commonPieces,\n          markup = [],\n          clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + clipPath.toClipPathSVG(reviver) + '</clipPath>\\n';\n      }\n\n      if (absoluteClipPath) {\n        markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n      }\n\n      markup.push('<g ', this.getSvgTransform(false), !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '', ' >\\n');\n      commonPieces = [styleInfo, vectorEffect, noStyle ? '' : this.addPaintOrder(), ' ', additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : ''].join('');\n      objectMarkup[index] = commonPieces;\n\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    addPaintOrder: function addPaintOrder() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function () {\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n  /*\n    Depends on `stateProperties`\n  */\n\n  function saveProps(origin, destination, props) {\n    var tmpObj = {},\n        deep = true;\n    props.forEach(function (prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    } else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue),\n          key;\n\n      if (!currentValue || typeof currentValue !== 'object' || !firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i]; // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n\n        if (key === 'canvas') {\n          continue;\n        }\n\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function hasStateChanged(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function saveState(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n\n      saveProps(this, destination, this[propertySet]);\n\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function setupState(options) {\n      options = options || {};\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = {};\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function _findTargetCorner(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n\n      for (var i in this.oCoords) {\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') && (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner); // debugging\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({\n          x: ex,\n          y: ey\n        }, lines);\n\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function _setCornerCoords() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n\n      /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\n      /* 0.707106 stands for sqrt(2)/2 */\n      cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x,\n          y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function drawSelectionBackground(ctx) {\n      if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n        return this;\n      }\n\n      ctx.save();\n\n      var center = this.getCenterPoint(),\n          wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function drawBorders(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n        var rotateHeight = -height / 2;\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function drawBordersInGroup(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.composeMatrix({\n        scaleX: options.scaleX,\n        scaleY: options.scaleY,\n        skewX: options.skewX\n      }),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function drawControls(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ? styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null); // top-left\n\n\n      this._drawControl('tl', ctx, methodName, left, top, styleOverride); // top-right\n\n\n      this._drawControl('tr', ctx, methodName, left + width, top, styleOverride); // bottom-left\n\n\n      this._drawControl('bl', ctx, methodName, left, top + height, styleOverride); // bottom-right\n\n\n      this._drawControl('br', ctx, methodName, left + width, top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n        // middle-top\n        this._drawControl('mt', ctx, methodName, left + width / 2, top, styleOverride); // middle-bottom\n\n\n        this._drawControl('mb', ctx, methodName, left + width / 2, top + height, styleOverride); // middle-right\n\n\n        this._drawControl('mr', ctx, methodName, left + width, top + height / 2, styleOverride); // middle-left\n\n\n        this._drawControl('ml', ctx, methodName, left, top + height / 2, styleOverride);\n      } // middle-top-rotate\n\n\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function _drawControl(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n\n      var size = this.cornerSize,\n          stroke = !this.transparentCorners && this.cornerStrokeColor;\n\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n\n          if (stroke) {\n            ctx.stroke();\n          }\n\n          break;\n\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function isControlVisible(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function setControlVisible(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function setControlsVisibility(options) {\n      options || (options = {});\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function _getControlsVisibility() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function onDeselect() {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function onSelect() {// implemented by sub-classes, as needed.\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function fxCenterObjectH(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete = callbacks.onComplete || empty,\n        _onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('left', value);\n\n        _this.requestRenderAll();\n\n        _onChange();\n      },\n      onComplete: function onComplete() {\n        object.setCoords();\n\n        _onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function fxCenterObjectV(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete2 = callbacks.onComplete || empty,\n        _onChange2 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('top', value);\n\n        _this.requestRenderAll();\n\n        _onChange2();\n      },\n      onComplete: function onComplete() {\n        object.setCoords();\n\n        _onComplete2();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function fxRemove(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete3 = callbacks.onComplete || empty,\n        _onChange3 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('opacity', value);\n\n        _this.requestRenderAll();\n\n        _onChange3();\n      },\n      onComplete: function onComplete() {\n        _this.remove(object);\n\n        _onComplete3();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function animate() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [],\n          prop,\n          skipCallbacks;\n\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    } else {\n      this._animate.apply(this, arguments);\n    }\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function _animate(property, to, options, skipCallbacks) {\n    var _this = this,\n        propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = {};\n    } else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    } else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function () {\n        return options.abort.call(_this);\n      },\n      onChange: function onChange(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        } else {\n          _this.set(property, value);\n        }\n\n        if (skipCallbacks) {\n          return;\n        }\n\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function onComplete(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = {\n    x1: 1,\n    x2: 1,\n    y1: 1,\n    y2: 1\n  },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n\n\n  fabric.Line = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Line.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function initialize(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function _setWidthHeight(options) {\n      options || (options = {});\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n      this.left = 'left' in options ? options.left : this._getLeftToOriginX();\n      this.top = 'top' in options ? options.top : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originX',\n      axis1: 'x1',\n      axis2: 'x2',\n      dimension: 'width'\n    }, {\n      // possible values of origin\n      nearest: 'left',\n      center: 'center',\n      farthest: 'right'\n    }),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originY',\n      axis1: 'y1',\n      axis2: 'y2',\n      dimension: 'height'\n    }, {\n      // possible values of origin\n      nearest: 'top',\n      center: 'center',\n      farthest: 'bottom'\n    }),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth; // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var p = this.calcLinePoints();\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function _findCenterFromElement() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function _getNonTransformedDimensions() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function calcLinePoints() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = xMult * this.width * 0.5,\n          y1 = yMult * this.height * 0.5,\n          x2 = xMult * this.width * -0.5,\n          y2 = yMult * this.height * -0.5;\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var p = this.calcLinePoints();\n      return ['<line ', 'COMMON_PARTS', 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n\n  fabric.Line.fromElement = function (element, callback, options) {\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n\n  fabric.Line.fromObject = function (object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    }\n\n    ;\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n\n\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n    return function () {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + 0.5 * this.get(dimension);\n\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n\n\n  fabric.Circle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Circle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var svgString,\n          x = 0,\n          y = 0,\n          angle = (this.endAngle - this.startAngle) % (2 * pi);\n\n      if (angle === 0) {\n        svgString = ['<circle ', 'COMMON_PARTS', 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" />\\n'];\n      } else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = ['<path d=\"M ' + startX + ' ' + startY, ' A ' + this.radius + ' ' + this.radius, ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY, '\" ', 'COMMON_PARTS', ' />\\n'];\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n      ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function getRadiusX() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function getRadiusY() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function setRadius(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n\n  fabric.Circle.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n  /**\n   * @private\n   */\n\n\n  function isValidRadius(attributes) {\n    return 'radius' in attributes && attributes.radius >= 0;\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n\n\n  fabric.Circle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n\n\n  fabric.Triangle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Triangle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [-widthBy2 + ' ' + heightBy2, '0 ' + -heightBy2, widthBy2 + ' ' + heightBy2].join(',');\n      return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n  fabric.Triangle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      piBy2 = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n\n\n  fabric.Ellipse = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Ellipse.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      switch (key) {\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function getRx() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function getRy() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      return ['<ellipse ', 'COMMON_PARTS', 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(0, 0, this.rx, 0, piBy2, false);\n      ctx.restore();\n\n      this._renderPaintInOrder(ctx);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n\n  fabric.Ellipse.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n\n\n  fabric.Ellipse.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n\n\n  fabric.Rect = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Rect.prototype */\n  {\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options);\n\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function _initRxRy() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      } else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n\n      /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n      k = 1 - 0.5522847498;\n      ctx.beginPath();\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var x = -this.width / 2,\n          y = -this.height / 2;\n      return ['<rect ', 'COMMON_PARTS', 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.rx, '\" ry=\"', this.ry, '\" width=\"', this.width, '\" height=\"', this.height, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Rect.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n    parsedAttributes.height = parsedAttributes.height || 0;\n    parsedAttributes.width = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n\n\n  fabric.Rect.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n\n\n  fabric.Polyline = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Polyline.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function initialize(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n\n      this._setPositionDimensions(options);\n    },\n    _setPositionDimensions: function _setPositionDimensions(options) {\n      var calcDim = this._calcDimensions(options),\n          correctLeftTop;\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin({\n          x: calcDim.left - this.strokeWidth / 2,\n          y: calcDim.top - this.strokeWidth / 2\n        }, 'left', 'top', this.originX, this.originY);\n      }\n\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function _calcDimensions() {\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = maxX - minX,\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var points = [],\n          diffX = this.pathOffset.x,\n          diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',', toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' ');\n      }\n\n      return ['<' + this.type + ' ', 'COMMON_PARTS', 'points=\"', points.join(''), '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function commonRender(ctx) {\n      var point,\n          len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var p1, p2;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function complexity() {\n      return this.get('points').length;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polyline.fromElementGenerator = function (_class) {\n    return function (element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n\n      options || (options = {});\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polyline.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n\n\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline,\n  /** @lends fabric.Polygon.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polygon.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n    m: 2,\n    l: 2,\n    h: 1,\n    v: 1,\n    c: 6,\n    s: 4,\n    q: 4,\n    t: 2,\n    a: 7\n  },\n      repeatedCommands = {\n    m: 'l',\n    M: 'L'\n  };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n\n\n  fabric.Path = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Path.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function initialize(path, options) {\n      options = options || {};\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n      this.path = fromArray ? path // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n      : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function _renderPathCommands(ctx) {\n      var current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(x + current[1] + l, // x1\n            y + current[2] + t, // y1\n            controlX + l, // x2\n            controlY + t, // y2\n            tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function _render(ctx) {\n      this._renderPathCommands(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Path (' + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function (item) {\n          return item.slice();\n        })\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n\n      if (o.sourcePath) {\n        delete o.path;\n      }\n\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var path = this.path.map(function (path) {\n        return path.join(' ');\n      }).join(' ');\n      return ['<path ', 'COMMON_PARTS', 'd=\"', path, '\" stroke-linecap=\"round\" ', '/>\\n'];\n    },\n    _getOffsetTransform: function _getOffsetTransform() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' + toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function complexity() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function _parsePath() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while (match = re.exec(coordsStr)) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        } else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function _calcDimensions() {\n      var aX = [],\n          aY = [],\n          current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], // x1\n            y + current[2], // y1\n            controlX, // x2\n            controlY, // y2\n            tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Path.fromObject = function (object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    } else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n\n\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n\n  fabric.Path.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n\n\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection,\n  /** @lends fabric.Group.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = []; // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint; // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        } // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n\n\n        center || this._calcBounds();\n\n        this._updateObjectsCoords(center);\n\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      } else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function _updateObjectsACoords() {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function _updateObjectsCoords(center) {\n      var center = center || this.getCenterPoint();\n\n      for (var i = this._objects.length; i--;) {\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function _updateObjectCoords(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true,\n          skipAbsolute = true;\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function addWithUpdate(object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n\n      if (object) {\n        this._objects.push(object);\n\n        object.group = this;\n\n        object._set('canvas', this.canvas);\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function removeWithUpdate(object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n      this.remove(object);\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function _onObjectAdded(object) {\n      this.dirty = true;\n      object.group = this;\n\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function _onObjectRemoved(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function _set(key, value) {\n      var i = this._objects.length;\n\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n\n      var objsToObject = this._objects.map(function (obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n\n        var _obj = obj.toObject(propertiesToInclude);\n\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      var objsToObject,\n          sourcePath = this.sourcePath;\n\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      } else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function render(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function willDrawShadow() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function isOnACache() {\n      return this.ownCaching || this.group && this.group.isOnACache();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function drawObject(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function isCacheDirty(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n\n      if (!this.statefullCache) {\n        return false;\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX,\n                y = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function _restoreObjectsState() {\n      this._objects.forEach(this._restoreObjectState, this);\n\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function realizeTransform(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function _restoreObjectState(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function destroy() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function (object) {\n        object.set('dirty', true);\n      });\n\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function toActiveSelection() {\n      if (!this.canvas) {\n        return;\n      }\n\n      var objects = this._objects,\n          canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function (object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function ungroupOnCanvas() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function setObjectsCoords() {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n      this.forEachObject(function (object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function _calcBounds(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o,\n          prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0,\n          iLen = this._objects.length,\n          j,\n          jLen = props.length,\n          ignoreZoom = true;\n\n      for (; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function _getBounds(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0,\n          left = minXY.x || 0,\n          width = maxXY.x - minXY.x || 0,\n          height = maxXY.y - minXY.y || 0;\n      this.width = width;\n      this.height = height;\n\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({\n          x: left,\n          y: top\n        }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function _toSVG(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function getSvgStyles() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ? 'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [opacity, this.getSvgFilter(), visibility].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, {\n        reviver: reviver\n      });\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n\n  fabric.Group.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n\n\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group,\n  /** @lends fabric.ActiveSelection.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function toGroup() {\n      var objects = this._objects.concat();\n\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function (object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n\n      if (!this.canvas) {\n        return newGroup;\n      }\n\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function onDeselect() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function isOnACache() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function _renderControls(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || {};\n\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n\n      childrenOverride.forActiveSelection = true;\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n\n      ctx.restore();\n    }\n  });\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n\n  fabric.ActiveSelection.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = {};\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n\n\n  fabric.Image = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Image.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function initialize(element, options) {\n      options || (options = {});\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function getElement() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function setElement(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      } // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n\n\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function removeTexture(key) {\n      var backend = fabric.filterBackend;\n\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function dispose() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function getOriginalSize() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function _stroke(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      var w = this.width / 2,\n          h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.save();\n\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var filters = [];\n      this.filters.forEach(function (filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(this.callSuper('toObject', ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)), {\n        src: this.getSrc(),\n        filters: filters\n      });\n\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function hasCrop() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var svgString = [],\n          imageMarkup = [],\n          strokeSvg,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          clipPath = '';\n\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', '</clipPath>\\n');\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, // we're essentially moving origin of transformation from top/left corner to the center of the shape\n      // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n      // so that object's center aligns with container's left/top\n      '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = ['\\t<rect ', 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n'];\n        this.fill = origFill;\n      }\n\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      } else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function getSrc(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        } else {\n          return element.src;\n        }\n      } else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function setSrc(src, callback, options) {\n      fabric.util.loadImage(src, function (img) {\n        this.setElement(img, options);\n\n        this._setWidthHeight();\n\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n    applyResizeFilters: function applyResizeFilters() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n\n      if (this.group) {\n        this.set('dirty', true);\n      }\n\n      if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey + '_filtered' : this.cacheKey,\n          sourceWidth = elementToFilter.width,\n          sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters([filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function applyFilters(filters) {\n      filters = filters || this.filters || [];\n      filters = filters.filter(function (filter) {\n        return filter && !filter.isNeutralState();\n      });\n      this.set('dirty', true); // needs to clear out or WEBGL will not resize correctly\n\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      } else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight); // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n\n\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n\n      if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n\n      this._stroke(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      return this.needsItsOwnCache();\n    },\n    _renderFill: function _renderFill(ctx) {\n      var elementToDraw = this._element,\n          w = this.width,\n          h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2,\n          y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function _needsResize() {\n      var scale = this.getTotalObjectScaling();\n      return scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY;\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function _resetWidthHeight() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function _initElement(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function _initConfig(options) {\n      options || (options = {});\n      this.setOptions(options);\n\n      this._setWidthHeight(options);\n\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function _initFilters(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function (enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      } else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function _setWidthHeight(options) {\n      options || (options = {});\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function parsePreserveAspectRatioAttribute() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width,\n          rHeight = this._element.height,\n          scaleX = 1,\n          scaleY = 1,\n          offsetLeft = 0,\n          offsetTop = 0,\n          cropX = 0,\n          cropY = 0,\n          offset,\n          pWidth = this.width,\n          pHeight = this.height,\n          parsedAttributes = {\n        width: pWidth,\n        height: pHeight\n      };\n\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n\n          offset = (pHeight - rHeight * scaleY) / 2;\n\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n\n          offset = rHeight - pHeight / scaleY;\n\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      } else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n  /**\n   * Alias for getSrc\n   * @static\n   */\n\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n\n  fabric.Image.fromObject = function (_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function (img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n\n      fabric.Image.prototype._initFilters.call(object, object.filters, function (filters) {\n        object.filters = filters || [];\n\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function (resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n\n\n  fabric.Image.fromURL = function (url, callback, imgOptions) {\n    fabric.util.loadImage(url, function (img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n\n\n  fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n\n  fabric.Image.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function _getAngleValueForStraighten() {\n    var angle = this.angle % 360;\n\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function straighten() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function fxStraighten(callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete4 = callbacks.onComplete || empty,\n        _onChange4 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        _this.rotate(value);\n\n        _onChange4();\n      },\n      onComplete: function onComplete() {\n        _this.setCoords();\n\n        _onComplete4();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function straightenObject(object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function fxStraightenObject(object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n(function () {\n  'use strict';\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n\n  function testPrecision(gl, precision) {\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n\n\n  fabric.isWebglSupported = function (tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false; // eslint-disable-next-line\n\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n\n      for (var i = 0; i < 3; i++) {\n        if (testPrecision(gl, precisions[i])) {\n          fabric.webGlPrecision = precisions[i];\n          break;\n        }\n\n        ;\n      }\n    }\n\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n  /**\n   * WebGL filter backend.\n   */\n\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  }\n\n  ;\n  WebglFilterBackend.prototype =\n  /** @lends fabric.WebglFilterBackend.prototype */\n  {\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function setupGLContext(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height); // eslint-disable-next-line\n\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function chooseFastestCopyGLTo2DMethod(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined',\n          canUseImageData;\n\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      } catch (e) {\n        canUseImageData = false;\n      } // eslint-disable-next-line no-undef\n\n\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined'; // eslint-disable-next-line no-undef\n\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement(); // eslint-disable-next-line no-undef\n\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      } else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function createWebGLCanvas(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false\n      },\n          gl = canvas.getContext('webgl', glOptions);\n\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n\n      if (!gl) {\n        return;\n      }\n\n      gl.clearColor(0, 0, 0, 0); // this canvas can fire webglcontextlost and webglcontextrestored\n\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function applyFilters(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function (filter) {\n        filter && filter.applyTo(pipelineState);\n      });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function dispose() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function clearWebGLCaches() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function createTexture(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function getCachedTexture(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      } else {\n        var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function evictCachesForKey(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function captureGPUInfo() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n\n      var gl = this.gl,\n          gpuInfo = {\n        renderer: '',\n        vendor: ''\n      };\n\n      if (!gl) {\n        return gpuInfo;\n      }\n\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    }\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width,\n      height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4; // eslint-disable-next-line no-undef\n\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes); // eslint-disable-next-line no-undef\n\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n(function () {\n  'use strict';\n\n  var noop = function noop() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n  /**\n   * Canvas 2D filter backend.\n   */\n\n  function Canvas2dFilterBackend() {}\n\n  ;\n  Canvas2dFilterBackend.prototype =\n  /** @lends fabric.Canvas2dFilterBackend.prototype */\n  {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function applyFilters(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this\n      };\n      filters.forEach(function (filter) {\n        filter.applyTo(pipelineState);\n      });\n\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    }\n  };\n})();\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\n\n\nfabric.Image = fabric.Image || {};\nfabric.Image.filters = fabric.Image.filters || {};\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass(\n/** @lends fabric.Image.filters.BaseFilter.prototype */\n{\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n  vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n  fragmentSource: 'precision highp float;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform sampler2D uTexture;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function initialize(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function setOptions(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function createProgram(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n\n    if (fabric.webGlPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(/precision highp float/g, 'precision ' + fabric.webGlPrecision + ' float');\n    }\n\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Vertex shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(vertexShader));\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Fragment shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(fragmentShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function getAttributeLocations(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition')\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function getUniformLocations()\n  /* gl, program */\n  {\n    // in case i do not need any special uniform i need to return an empty object\n    return {};\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function sendAttributeData(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n  _setupFrameBuffer: function _setupFrameBuffer(options) {\n    var gl = options.context,\n        width,\n        height;\n\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n  _swapTextures: function _swapTextures(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function isNeutralState()\n  /* options */\n  {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return _class[main] === this[main];\n      }\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function applyTo(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n\n      this.applyToWebGL(options);\n\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function retrieveShader(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function applyToWebGL(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n  bindAdditionalTexture: function bindAdditionalTexture(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture); // reset active texture to 0 as usual\n\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  unbindAdditionalTexture: function unbindAdditionalTexture(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  getMainParameter: function getMainParameter() {\n    return this[this.mainParameter];\n  },\n  setMainParameter: function setMainParameter(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function sendUniformData()\n  /* gl, uniformLocations */\n  {// Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function createHelpLayer(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function toObject() {\n    var object = {\n      type: this.type\n    },\n        mainP = this.mainParameter;\n\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function (object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.ColorMatrix = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.ColorMatrix.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform mat4 uColorMatrix;\\n' + 'uniform vec4 uConstants;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color *= uColorMatrix;\\n' + 'color += uConstants;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r,\n          g,\n          b,\n          a,\n          i,\n          colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        } else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18]],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Brightness = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Brightness.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBrightness;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += uBrightness;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function applyTo2d(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          brightness = Math.round(this.brightness * 255);\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Convolute = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Convolute.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_3_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_5_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_5_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_7_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_7_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_9_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_9_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}'\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function retrieveShader(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0,\n          r,\n          g,\n          b,\n          a,\n          dstOff,\n          scx,\n          scy,\n          srcOff,\n          wt,\n          x,\n          y,\n          cx,\n          cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4; // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n\n          r = 0;\n          g = 0;\n          b = 0;\n          a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide; // eslint-disable-next-line max-depth\n\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt; // eslint-disable-next-line max-depth\n\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          } else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Grayscale = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Grayscale.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n    fragmentSource: {\n      average: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float average = (color.r + color.b + color.g) / 3.0;\\n' + 'gl_FragColor = vec4(average, average, average, color.a);\\n' + '}',\n      lightness: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}',\n      luminosity: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}'\n    },\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          value,\n          mode = this.mode;\n\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        } else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        } else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function isNeutralState() {\n      return false;\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Invert = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Invert.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uInvert;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'if (uInvert == 1) {\\n' + 'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' + '} else {\\n' + 'gl_FragColor = color;\\n' + '}\\n' + '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length;\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function isNeutralState() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Noise = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Noise.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uStepH;\\n' + 'uniform float uNoise;\\n' + 'uniform float uSeed;\\n' + 'varying vec2 vTexCoord;\\n' + 'float rand(vec2 co, float seed, float vScale) {\\n' + 'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      if (this.noise === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          noise = this.noise,\n          rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        rand = (0.5 - Math.random()) * noise;\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Pixelate = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Pixelate.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n    blocksize: 4,\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBlocksize;\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'float blockW = uBlocksize * uStepW;\\n' + 'float blockH = uBlocksize * uStepW;\\n' + 'int posX = int(vTexCoord.x / blockW);\\n' + 'int posY = int(vTexCoord.y / blockH);\\n' + 'float fposX = float(posX);\\n' + 'float fposY = float(posY);\\n' + 'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' + 'vec4 color = texture2D(uTexture, squareCoords);\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index,\n          i,\n          j,\n          r,\n          g,\n          b,\n          a,\n          _i,\n          _j,\n          _iLen,\n          _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n          index = i * 4 * jLen + j * 4;\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = _i * 4 * jLen + _j * 4;\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function isNeutralState() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.RemoveColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.RemoveColor.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uLow;\\n' + 'uniform vec4 uHigh;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + 'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' + 'gl_FragColor.a = 0.0;\\n' + '}\\n' + '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          distance = this.distance * 255,\n          r,\n          g,\n          b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n          highC = [source[0] + distance, source[1] + distance, source[2] + distance];\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1],\n          highC = [source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  var matrices = {\n    Brownie: [0.59970, 0.34553, -0.27082, 0, 0.186, -0.03770, 0.86095, 0.15059, 0, -0.1449, 0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0],\n    Vintage: [0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0, 0.02926, 0.04660, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0],\n    Kodachrome: [1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0, 0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0],\n    Technicolor: [1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0, -0.27589, -0.23110, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0],\n    Polaroid: [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0],\n    Sepia: [0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131, 0, 0, 0, 0, 0, 1, 0],\n    BlackWhite: [1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix,\n    /** @lends fabric.Image.filters.Sepia.prototype */\n    {\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blend.prototype */\n  {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' + 'gl_FragColor.r *= 2.0 * uColor.r;\\n' + '} else {\\n' + 'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' + '}\\n' + 'if (uColor.g < 0.5) {\\n' + 'gl_FragColor.g *= 2.0 * uColor.g;\\n' + '} else {\\n' + 'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' + '}\\n' + 'if (uColor.b < 0.5) {\\n' + 'gl_FragColor.b *= 2.0 * uColor.b;\\n' + '} else {\\n' + 'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' + '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' + 'gl_FragColor.rgb += uColor.rgb;\\n'\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function buildSource(mode) {\n      return 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'gl_FragColor = color;\\n' + 'if (color.a > 0.0) {\\n' + this.fragmentSource[mode] + '}\\n' + '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode,\n          shaderSource;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          tr,\n          tg,\n          tb,\n          r,\n          g,\n          b,\n          source,\n          alpha1 = 1 - this.alpha;\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n\n          case 'overlay':\n            data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n            data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n            data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'exclusion':\n            data[i] = tr + r - 2 * tr * r / 255;\n            data[i + 1] = tg + g - 2 * tg * g / 255;\n            data[i + 2] = tb + b - 2 * tb * b / 255;\n            break;\n\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.BlendImage.prototype */\n  {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n    vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'uniform mat3 uTransformMatrix;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.rgba *= color2.rgba;\\n' + 'gl_FragColor = color;\\n' + '}',\n      mask: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.a = color2.a;\\n' + 'gl_FragColor = color;\\n' + '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    applyToWebGL: function applyToWebGL(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n    createTexture: function createTexture(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function calculateMatrix() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data,\n          iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr,\n          tg,\n          tb,\n          ta,\n          r,\n          g,\n          b,\n          a,\n          canvas1,\n          context,\n          image = this.image,\n          blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      } else {\n        context.clearRect(0, 0, width, height);\n      }\n\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n\n  fabric.Image.filters.BlendImage.fromObject = function (object, callback) {\n    fabric.Image.fromObject(object.image, function (image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pow = Math.pow,\n      floor = Math.floor,\n      sqrt = Math.sqrt,\n      abs = Math.abs,\n      round = Math.round,\n      sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Resize = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Resize.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var filterWindow = this.getFilterWindow(),\n          cacheKey = this.type + '_' + filterWindow;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    getFilterWindow: function getFilterWindow() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n    getTaps: function getTaps() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes),\n          scale = this.tempScale,\n          filterWindow = this.getFilterWindow(),\n          taps = new Array(filterWindow);\n\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function generateShader(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP,\n          filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n      offsets.forEach(function (offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n    fragmentSourceTOP: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function applyTo(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceWidth = options.destinationWidth;\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceHeight = options.destinationHeight;\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    isNeutralState: function isNeutralState() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n    lanczosCreate: function lanczosCreate(lobes) {\n      return function (x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n\n        x *= Math.PI;\n        var xx = x / lobes;\n        return sin(x) / x * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n      var oW = imageData.width,\n          oH = imageData.height,\n          dW = round(oW * scaleX),\n          dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function sliceByTwo(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5,\n          doneW = false,\n          doneH = false,\n          stepW = oW * mult,\n          stepH = oH * mult,\n          resources = fabric.filterBackend.resources,\n          tmpCanvas,\n          ctx,\n          sX = 0,\n          sY = 0,\n          dX = oW,\n          dY = 0;\n\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n\n      tmpCanvas = resources.sliceByTwo;\n\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        } else {\n          stepW = dW;\n          doneW = true;\n        }\n\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        } else {\n          stepH = dH;\n          doneH = true;\n        }\n\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function lanczosResize(options, oW, oH, dW, dH) {\n      function process(u) {\n        var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0;\n          red = 0;\n          green = 0;\n          blue = 0;\n          alpha = 0;\n\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n\n            fX = floor(1000 * abs(i - center.x));\n\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = {};\n            }\n\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n\n              fY = floor(1000 * abs(j - center.y));\n\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n\n              weight = cacheLanc[fX][fY];\n\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        } else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX,\n          rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = {},\n          center = {},\n          icenter = {};\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function bilinearFiltering(options, oW, oH, dW, dH) {\n      var a,\n          b,\n          c,\n          d,\n          x,\n          y,\n          i,\n          j,\n          xDiff,\n          yDiff,\n          chnl,\n          color,\n          offset = 0,\n          origPix,\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1),\n          img = options.imageData,\n          pixels = img.data,\n          destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function hermiteFastResize(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX,\n          ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData,\n          data = img.data,\n          img2 = options.ctx.createImageData(dW, dH),\n          data2 = img2.data;\n\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4,\n              weight = 0,\n              weights = 0,\n              weightsAlpha = 0,\n              gxR = 0,\n              gxG = 0,\n              gxB = 0,\n              gxA = 0,\n              centerY = (j + 0.5) * ratioH;\n\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW,\n                w0 = dy * dy;\n\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n\n              if (w > 1 && w < -1) {\n                continue;\n              } //hermite filter\n\n\n              weight = 2 * w * w * w - 3 * w * w + 1;\n\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW); //alpha\n\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight; //colors\n\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n\n            }\n          }\n\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Contrast = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Contrast.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uContrast;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' + 'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' + 'gl_FragColor = color;\\n' + '}',\n    contrast: 0,\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function applyTo2d(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          i,\n          len,\n          data = imageData.data,\n          len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Saturation = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Saturation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uSaturation;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float rgMax = max(color.r, color.g);\\n' + 'float rgbMax = max(rgMax, color.b);\\n' + 'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' + 'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' + 'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' + 'gl_FragColor = color;\\n' + '}',\n    saturation: 0,\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          len = data.length,\n          adjust = -this.saturation,\n          i,\n          max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Blur = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blur.prototype */\n  {\n    type: 'Blur',\n\n    /*\n    'gl_FragColor = vec4(0.0);',\n    'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n    */\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n' + 'const float nSamples = 15.0;\\n' + 'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' + 'float random(vec3 scale) {\\n' +\n    /* use the fragment position for a different seed per-pixel */\n    'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = vec4(0.0);\\n' + 'float total = 0.0;\\n' + 'float offset = random(v3offset);\\n' + 'for (float t = -nSamples; t <= nSamples; t++) {\\n' + 'float percent = (t + offset - 0.5) / nSamples;\\n' + 'float weight = 1.0 - abs(percent);\\n' + 'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' + 'total += weight;\\n' + '}\\n' + 'gl_FragColor = color / total;\\n' + '}',\n\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n    mainParameter: 'blur',\n    applyTo: function applyTo(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = true;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = false;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    applyTo2d: function applyTo2d(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n    simpleBlur: function simpleBlur(options) {\n      var resources = options.filterBackend.resources,\n          canvas1,\n          canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random,\n          percent,\n          j,\n          i,\n          blur = this.blur * 0.06 * 0.5; // load first canvas\n\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function chooseRightDelta() {\n      var blurScale = 1,\n          delta = [0, 0],\n          blur;\n\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      } else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n\n      blur = blurScale * this.blur * 0.12;\n\n      if (this.horizontal) {\n        delta[0] = blur;\n      } else {\n        delta[1] = blur;\n      }\n\n      return delta;\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Gamma = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Gamma.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec3 uGamma;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec3 correction = (1.0 / uGamma);\\n' + 'color.r = pow(color.r, correction.r);\\n' + 'color.g = pow(color.g, correction.g);\\n' + 'color.b = pow(color.b, correction.b);\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.rgb *= color.a;\\n' + '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          gamma = this.gamma,\n          len = data.length,\n          rInv = 1 / gamma[0],\n          gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2],\n          i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.gVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.bVals = new Uint8Array(256);\n      } // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n\n\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n\n  filters.Composed = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Composed.prototype */\n  {\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function applyTo(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function (filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function toObject() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function (filter) {\n          return filter.toObject();\n        })\n      });\n    },\n    isNeutralState: function isNeutralState() {\n      return !this.subFilters.some(function (filter) {\n        return !filter.isNeutralState();\n      });\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n\n  fabric.Image.filters.Composed.fromObject = function (object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function (filter) {\n      return new fabric.Image.filters[filter.type](filter);\n    }),\n        instance = new fabric.Image.filters.Composed({\n      subFilters: subFilters\n    });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.HueRotation = createClass(filters.ColorMatrix,\n  /** @lends fabric.Image.filters.HueRotation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n    calculateMatrix: function calculateMatrix() {\n      var rad = this.rotation * Math.PI,\n          cos = fabric.util.cos(rad),\n          sin = fabric.util.sin(rad),\n          aThird = 1 / 3,\n          aThirdSqtSin = Math.sqrt(aThird) * sin,\n          OneMinusCos = 1 - cos;\n      this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function isNeutralState(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function applyTo(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n\n\n  fabric.Text = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: ['fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'text', 'charSpacing', 'textAlign', 'styles'],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize: 40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight: 'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily: 'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline: false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline: false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough: false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign: 'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle: 'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight: 1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: -0.35 // baseline-shift factor (upwards)\n\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: 0.11 // baseline-shift factor (downwards)\n\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor: '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult: 1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing: 0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: ['stroke', 'strokeWidth', 'fill', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'underline', 'overline', 'linethrough', 'deltaY', 'textBackgroundColor'],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function initialize(text, options) {\n      this.styles = options ? options.styles || {} : {};\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function getMeasuringContext() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext('2d');\n      }\n\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function _splitText() {\n      var newLines = this._splitTextIntoLines(this.text);\n\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function initDimensions() {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this._splitText();\n\n      this._clearCache();\n\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function enlargeSpaces() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            } else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function isEndOfWrapping(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function missingNewlineOffset() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function toString() {\n      return '#<fabric.Text (' + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function _getCacheCanvasDimensions() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      this._setTextStyles(ctx);\n\n      this._renderTextLinesBackground(ctx);\n\n      this._renderTextDecoration(ctx, 'underline');\n\n      this._renderText(ctx);\n\n      this._renderTextDecoration(ctx, 'overline');\n\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function _renderText(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n\n        this._renderTextFill(ctx);\n      } else {\n        this._renderTextFill(ctx);\n\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function _setTextStyles(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function calcTextWidth() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function _renderTextLine(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function _renderTextLinesBackground(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n\n      var lineTopOffset = 0,\n          heightOfLine,\n          lineLeftOffset,\n          originalFill = ctx.fillStyle,\n          line,\n          lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0,\n          boxWidth = 0,\n          charBox,\n          currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n        }\n\n        lineTopOffset += heightOfLine;\n      }\n\n      ctx.fillStyle = originalFill; // if there is text background color no\n      // other shadows should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function getFontCache(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = {};\n      }\n\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = {};\n      }\n\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function _applyCharStyles(method, ctx, lineIndex, charIndex, styleDeclaration) {\n      this._setFillStyles(ctx, styleDeclaration);\n\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function _measureChar(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle),\n          fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle),\n          couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration,\n          width,\n          coupleWidth,\n          previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE,\n          kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext(); // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n\n        this._setTextStyles(ctx, charStyle, true);\n      }\n\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      return {\n        width: width * fontMultiplier,\n        kernedWidth: kernedWidth * fontMultiplier\n      };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function getHeightOfChar(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function measureLine(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function _measureLine(lineIndex) {\n      var width = 0,\n          i,\n          grapheme,\n          line = this._textLines[lineIndex],\n          prevGrapheme,\n          graphemeInfo,\n          numOfSpaces = 0,\n          lineBounds = new Array(line.length);\n      this.__charBounds[lineIndex] = lineBounds;\n\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      } // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n\n\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return {\n        width: width,\n        numOfSpaces: numOfSpaces\n      };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function _getGraphemeBox(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {},\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width,\n          charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY\n      };\n\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function getHeightOfLine(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n      // emptylines\n      maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function calcTextHeight() {\n      var lineHeight,\n          height = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n      }\n\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function _getLeftOffset() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function _getTopOffset() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function _renderTextCommon(ctx, method) {\n      ctx.save();\n\n      var lineHeights = 0,\n          left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n\n        this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n\n        lineHeights += heightOfLine;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function _renderTextFill(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function _renderTextStroke(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray);\n\n      ctx.beginPath();\n\n      this._renderTextCommon(ctx, 'strokeText');\n\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function _renderChars(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n\n        ctx.restore();\n        return;\n      }\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function _renderChar(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function setSuperscript(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function setSubscript(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function _setScript(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline\n      };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function _hasStyleChanged(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function _hasStyleChangedForSvg(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function _getLineLeftOffset(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function _clearCache() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function _shouldClearDimensionCache() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function getLineWidth(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width,\n          line = this._textLines[lineIndex],\n          lineInfo;\n\n      if (line === '') {\n        width = 0;\n      } else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n    _getWidthOfCharSpacing: function _getWidthOfCharSpacing() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function getValueOfPropertyAt(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function _renderTextDecoration(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n\n      var heightOfLine,\n          size,\n          _size,\n          lineLeftOffset,\n          dy,\n          _dy,\n          line,\n          lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          top,\n          boxStart,\n          boxWidth,\n          charBox,\n          currentDecoration,\n          maxHeight,\n          currentFill,\n          lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth - charSpacing, this.fontSize / 15);\n        topOffset += heightOfLine;\n      } // if there is text background color no\n      // other shadows should be casted\n\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function _getFontDeclaration(styleObject, forMeasuring) {\n      var style = styleObject || this,\n          family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined || family.indexOf('\\'') > -1 || family.indexOf(',') > -1 || family.indexOf('\"') > -1 || fontIsGeneric ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [// node-canvas needs \"weight style\", while browsers need \"style weight\"\n      // verify if this can be fixed in JSDOM\n      fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px', fontFamily].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function _splitTextIntoLines(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n\n      newText.pop();\n      return {\n        _unwrappedLines: newLines,\n        lines: lines,\n        graphemeText: newText,\n        graphemeLines: newLines\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var additionalProperties = ['text', 'fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'underline', 'overline', 'linethrough', 'textAlign', 'textBackgroundColor', 'charSpacing'].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function set(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      } else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function complexity() {\n      return 1;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Text.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n\n      delete options.textDecoration;\n    }\n\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = ''; // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    } else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n\n\n  fabric.Text.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function isEmptyStyles(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function styleHas(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        0: this.styles[lineIndex]\n      }; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function cleanStyle(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      var obj = this.styles,\n          stylesCount = 0,\n          letterCount,\n          stylePropertyValue,\n          allStyleObjectPropertiesMatch = true,\n          graphemeCount = 0,\n          styleObject; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        letterCount = 0; // eslint-disable-next-line\n\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            } else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          } else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          } else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      } // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function removeStyle(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n\n      var obj = this.styles,\n          line,\n          lineNum,\n          charNum;\n\n      for (lineNum in obj) {\n        line = obj[lineNum];\n\n        for (charNum in line) {\n          delete line[charNum][property];\n\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function _extendStyles(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function get2DCursorLocation(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function getSelectionStyles(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      var styles = [];\n\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function getStyleAtPosition(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function setSelectionStyles(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n\n\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function _getStyleDeclaration(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n\n      if (!lineStyle) {\n        return null;\n      }\n\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function getCompleteStyleDeclaration(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || {},\n          styleObject = {},\n          prop;\n\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function _setStyleDeclaration(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function _deleteStyleDeclaration(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function _getLineStyle(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function _setLineStyle(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function _deleteLineStyle(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n(function () {\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n\n\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function initialize(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function setSelectionStart(index) {\n      index = Math.max(index, 0);\n\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function setSelectionEnd(index) {\n      index = Math.min(index, this.text.length);\n\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function _updateAndFire(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n\n        this[property] = index;\n      }\n\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function _fireSelectionChanged() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', {\n        target: this\n      });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function initDimensions() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx); // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n\n      this.cursorOffsetCache = {};\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function clearContextTop(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var ctx = this.canvas.contextTop,\n          v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\n      this._clearTextArea(ctx);\n\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function renderCursorOrSelection() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n\n      this.clearContextTop(true);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      } else {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n    _clearTextArea: function _clearTextArea(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4,\n          height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function _getCursorBoundaries(position) {\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function _getCursorBoundariesOffsets(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function renderCursor(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top + dy, cursorWidth, charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function renderSelection(boundaries, ctx) {\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0,\n            boxStart = 0,\n            boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        } else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          } else {\n            var charSpacing = this._getWidthOfCharSpacing();\n\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n\n        realLineHeight = lineHeight;\n\n        if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n          lineHeight /= this.lineHeight;\n        }\n\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n        } else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n        }\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function getCurrentCharFontSize() {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function getCurrentCharColor() {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function _getCurrentCharIndex() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return {\n        l: cursorPosition.lineIndex,\n        c: charIndex\n      };\n    }\n  });\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n\n  fabric.IText.fromObject = function (object, callback) {\n    parseDecoration(object);\n\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n(function () {\n  var clone = fabric.util.object.clone;\n  fabric.util.object.extend(fabric.IText.prototype,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function initBehavior() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n    onDeselect: function onDeselect() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function initAddedHandler() {\n      var _this = this;\n\n      this.on('added', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n\n            _this._initCanvasHandlers(canvas);\n          }\n\n          canvas._iTextInstances = canvas._iTextInstances || [];\n\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n    initRemovedHandler: function initRemovedHandler() {\n      var _this = this;\n\n      this.on('removed', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function _initCanvasHandlers(canvas) {\n      canvas._mouseUpITextHandler = function () {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function (obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function _removeCanvasHandlers(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function _tick() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function _animateCursor(obj, targetOpacity, duration, completeMethod) {\n      var tickState;\n      tickState = {\n        isAborted: false,\n        abort: function abort() {\n          this.isAborted = true;\n        }\n      };\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function onComplete() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function onChange() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function abort() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function _onTickComplete() {\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n\n      this._cursorTimeout1 = setTimeout(function () {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function initDelayedCursor(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function () {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function abortCursorAnimation() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n      this._currentCursorOpacity = 0; // to clear just itext area we need to transform the context\n      // it may not be worth it\n\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function selectAll() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function getSelectedText() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function findWordBoundaryLeft(startFrom) {\n      var offset = 0,\n          index = startFrom - 1; // remove space before cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function findWordBoundaryRight(startFrom) {\n      var offset = 0,\n          index = startFrom; // remove space after cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function findLineBoundaryLeft(startFrom) {\n      var offset = 0,\n          index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function findLineBoundaryRight(startFrom) {\n      var offset = 0,\n          index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function searchWordBoundary(selectionStart, direction) {\n      var index = this._reSpace.test(this._text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char = this._text[index],\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this._text.length) {\n        index += direction;\n        _char = this._text[index];\n      }\n\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function selectWord(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n\n      /* search backwards */\n      newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function selectLine(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function enterEditing(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n\n      this._updateTextarea();\n\n      this._saveEditingProps();\n\n      this._setEditingProps();\n\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n\n      this.fire('editing:entered');\n\n      this._fireSelectionChanged();\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.fire('text:editing:entered', {\n        target: this\n      });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n    exitEditingOnOthers: function exitEditingOnOthers(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function (obj) {\n          obj.selected = false;\n\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function initMouseMoveHandler() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function mouseMoveHandler(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n\n      if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n        return;\n      }\n\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      } else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n\n        this._fireSelectionChanged();\n\n        this._updateTextarea();\n\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function _setEditingProps() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function fromStringToGraphemeSelection(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function fromGraphemeToStringSelection(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function _updateTextarea() {\n      this.cursorOffsetCache = {};\n\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function updateFromTextArea() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      this.cursorOffsetCache = {};\n      this.text = this.hiddenTextarea.value;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function updateTextareaPosition() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function _calcTextareaPosition() {\n      if (!this.canvas) {\n        return {\n          x: 1,\n          y: 1\n        };\n      }\n\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n        x: boundaries.left + leftOffset,\n        y: boundaries.top + boundaries.topOffset + charHeight\n      },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n\n      if (p.y < 0) {\n        p.y = 0;\n      }\n\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      } // add canvas offset on document\n\n\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n      return {\n        left: p.x + 'px',\n        top: p.y + 'px',\n        fontSize: charHeight + 'px',\n        charHeight: charHeight\n      };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function _saveEditingProps() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function _restoreEditingProps() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function exitEditing() {\n      var isTextChanged = this._textBeforeEdit !== this.text;\n      this.selected = false;\n      this.isEditing = false;\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n\n      this._restoreEditingProps();\n\n      this._currentCursorOpacity = 0;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', {\n          target: this\n        });\n        isTextChanged && this.canvas.fire('object:modified', {\n          target: this\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function _removeExtraneousStyles() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function removeStyleFromTo(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i,\n          styleObj;\n\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        } // step2 move the trailing of lineEnd to lineStart if needed\n\n\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = {});\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        } // step3 detects lines will be completely removed.\n\n\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        } // step4 shift remaining lines.\n\n\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      } else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n\n          var diff = charEnd - charStart,\n              numericChar,\n              _char;\n\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function shiftLineStyles(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n    restartCursorIfNeeded: function restartCursorIfNeeded() {\n      if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function insertNewlineStyleObject(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      } // we clone styles of all chars\n      // after cursor onto the current line\n\n\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index]; // remove lines from the previous line since they're on a new line now\n\n          delete this.styles[lineIndex][index];\n        }\n      }\n\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      } else {\n        delete this.styles[lineIndex + qty];\n      } // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n\n\n      while (qty > 1) {\n        qty--;\n\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = {\n            0: clone(copiedStyle[qty])\n          };\n        } else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = {\n            0: clone(currentCharStyle)\n          };\n        } else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function insertCharStyleObject(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n\n      var currentLineStyles = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n      quantity || (quantity = 1); // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex]; // only delete the style if there was nothing moved there\n\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this._forceClearCache = true;\n\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n\n        return;\n      }\n\n      if (!currentLineStyles) {\n        return;\n      }\n\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function insertNewStyleBlock(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0],\n          linesLength = 0;\n\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        } else {\n          addedLines[linesLength]++;\n        }\n      }\n\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n\n      linesLength && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        } else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      } // we use i outside the loop to get it like linesLength\n\n\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function setSelectionStartEndWithShift(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        } else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n\n        this.selectionStart = newSelection;\n      } else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        } else {\n          this.selectionStart = newSelection;\n        }\n      } else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        } else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n\n        this.selectionEnd = newSelection;\n      }\n    },\n    setSelectionInBoundaries: function setSelectionInBoundaries() {\n      var length = this.text.length;\n\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      } else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      } else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function initDoubleClickSimulation() {\n    // for double click\n    this.__lastClickTime = +new Date(); // for triple click\n\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function onMouseDown(options) {\n    if (!this.canvas) {\n      return;\n    }\n\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n  isTripleClick: function isTripleClick(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function _stopEvent(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function initCursorSelectionHandlers() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function initClicks() {\n    this.on('mousedblclick', function (options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function (options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function _mouseDownHandler(options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function _mouseDownHandlerBefore(options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function initMousedownHandler() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function initMouseupHandler() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function mouseUpHandler(options) {\n    this.__isMousedown = false;\n\n    if (!this.editable || this.group || options.transform && options.transform.actionPerformed || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function setCursorByClick(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart,\n        end = this.selectionEnd;\n\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function getSelectionStartFromPointer(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width; // i removed something about flipX here, check.\n\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      } else {\n        break;\n      }\n    }\n\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function _getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset; // if object is horizontally flipped, mirror cursor location from the end\n\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function initHiddenTextarea() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n\n    var style = this._calcTextareaPosition(); // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n\n\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' + ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9: 'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n  onClick: function onClick() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function onKeyDown(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function onKeyUp(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function onInput(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n\n    if (!this.isEditing) {\n      return;\n    } // decisions about style changes.\n\n\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText,\n        insertedText,\n        charDiff = nextCharCount - charCount;\n\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      this.updateFromTextArea();\n      this.fire('changed');\n\n      if (this.canvas) {\n        this.canvas.fire('text:changed', {\n          target: this\n        });\n        this.canvas.requestRenderAll();\n      }\n\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      } else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      } else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      } else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      } else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n\n    this.updateFromTextArea();\n    this.fire('changed');\n\n    if (this.canvas) {\n      this.canvas.fire('text:changed', {\n        target: this\n      });\n      this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function onCompositionStart() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function onCompositionEnd() {\n    this.inCompositionMode = false;\n  },\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function onCompositionUpdate(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    } else {\n      fabric.copiedTextStyle = null;\n    }\n\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function paste() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function _getClipboardData(e) {\n    return e && e.clipboardData || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function _getWidthBeforeCursor(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n        bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function getDownCursorOffset(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex; // if on last line, down cursor goes to end of line\n\n\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function _getSelectionForOffset(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function getUpCursorOffset(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1); // return a negative offset\n\n\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function _getIndexOnLine(lineIndex, width) {\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        charWidth,\n        foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    } // reached end\n\n\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function moveCursorDown(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function moveCursorUp(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function _moveCursorUpOrDown(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function moveCursorWithShift(offset) {\n    var newSelection = this._selectionDirection === 'left' ? this.selectionStart + offset : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function moveCursorWithoutShift(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function moveCursorLeft(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function _move(e, prop, direction) {\n    var newValue;\n\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function _moveLeft(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function _moveRight(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function moveCursorLeftWithoutShift(e) {\n    var change = true;\n    this._selectionDirection = 'left'; // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function moveCursorLeftWithShift(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function moveCursorRight(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function _moveCursorLeftOrRight(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    } else {\n      actionName += 'outShift';\n    }\n\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function moveCursorRightWithShift(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function moveCursorRightWithoutShift(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function removeChars(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n\n    this.removeStyleFromTo(start, end);\n\n    this._text.splice(start, end - start);\n\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function insertChars(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function _toSVG() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        noStyle: true,\n        withShadow: true\n      });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function _getSVGLeftTopOffsets() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function _wrapSVGTextAndBg(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [textAndBg.textBgRects.join(''), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : '', this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : '', this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : '', this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : '', textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : '', 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >', textAndBg.textSpans.join(''), '</text>\\n'];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function _getSVGTextAndBg(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset,\n          lineOffset; // bounding-box background\n\n      this._setSVGBg(textBgRects); // text and text-background\n\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function _createTextCharSpan(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY,\n          dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n\n      return ['<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan, fillStyles, '>', fabric.util.string.escapeXml(_char), '</tspan>'].join('');\n    },\n    _setSVGTextLineText: function _setSVGTextLineText(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || {};\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n    _pushTextBgRect: function _pushTextBgRect(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push('\\t\\t<rect ', this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n    },\n    _setSVGTextLineBg: function _setSVGTextLineBg(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox,\n          currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function _getFillAttributes(value) {\n      var fillColor = value && typeof value === 'string' ? new fabric.Color(value) : '';\n\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function _getSVGLineTopOffset(lineIndex) {\n      var lineTopOffset = 0,\n          lastHeight = 0;\n\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function getSvgStyles(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function initDimensions() {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n\n      this._clearCache(); // clear dynamicMinWidth as it will be different after we re-wrap line\n\n\n      this.dynamicMinWidth = 0; // wrap lines\n\n      this._styleMap = this._generateStyleMap(this._splitText()); // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      } // clear cache and re-calculate height\n\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function _generateStyleMap(textInfo) {\n      var realLineCount = 0,\n          realLineCharCount = 0,\n          charCount = 0,\n          map = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        } else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = {\n          line: realLineCount,\n          offset: realLineCharCount\n        };\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function styleHas(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function isEmptyStyles(lineIndex) {\n      var offset = 0,\n          nextLineIndex = lineIndex + 1,\n          nextOffset,\n          obj,\n          shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n\n      obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function _getStyleDeclaration(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (!map) {\n          return null;\n        }\n\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function _setStyleDeclaration(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function _deleteStyleDeclaration(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function _getLineStyle(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function _setLineStyle(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function _wrapText(lines, desiredWidth) {\n      var wrapped = [],\n          i;\n      this.isWrapping = true;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function _measureWord(word, lineIndex, charOffset) {\n      var width = 0,\n          prevGrapheme,\n          skipLeft = true;\n      charOffset = charOffset || 0;\n\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function _wrapLine(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n      words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0; // fix a difference between split and graphemeSplit\n\n      if (words.length === 0) {\n        words.push([]);\n      }\n\n      desiredWidth -= reservedSpace;\n\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        } else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n\n        line = line.concat(word);\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false; // keep track of largest word\n\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function isEndOfWrapping(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function missingNewlineOffset(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function _splitTextIntoLines(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n    getMinWidth: function getMinWidth() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n    _removeExtraneousStyles: function _removeExtraneousStyles() {\n      var linesToKeep = {};\n\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n\n  fabric.Textbox.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inputRange = require('./input-range/input-range');\n\nvar _inputRange2 = _interopRequireDefault(_inputRange);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\n\nexports.default = _inputRange2.default;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _captialize = require('./captialize');\n\nObject.defineProperty(exports, 'captialize', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_captialize).default;\n  }\n});\n\nvar _clamp = require('./clamp');\n\nObject.defineProperty(exports, 'clamp', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_clamp).default;\n  }\n});\n\nvar _distanceTo = require('./distance-to');\n\nObject.defineProperty(exports, 'distanceTo', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_distanceTo).default;\n  }\n});\n\nvar _isDefined = require('./is-defined');\n\nObject.defineProperty(exports, 'isDefined', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isDefined).default;\n  }\n});\n\nvar _isNumber = require('./is-number');\n\nObject.defineProperty(exports, 'isNumber', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isNumber).default;\n  }\n});\n\nvar _isObject = require('./is-object');\n\nObject.defineProperty(exports, 'isObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isObject).default;\n  }\n});\n\nvar _length = require('./length');\n\nObject.defineProperty(exports, 'length', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_length).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\n\n\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined; // Use Reflect if exists\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype); // use symbols if support is provided\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key); // Only methods need binding\n\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\n\n\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  } // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n\n\n  var definingProperty = false;\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Label;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\n\n\nfunction Label(props) {\n  var labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n  return _react2.default.createElement('span', {\n    className: props.classNames[props.type + 'Label']\n  }, _react2.default.createElement('span', {\n    className: props.classNames.labelContainer\n  }, labelValue));\n}\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\n\n\nLabel.propTypes = {\n  children: _propTypes2.default.node.isRequired,\n  classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n  formatLabel: _propTypes2.default.func,\n  type: _propTypes2.default.string.isRequired\n};\nmodule.exports = exports['default'];","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _valueTransformer = require('./value-transformer');\n\nvar valueTransformer = _interopRequireWildcard(_valueTransformer);\n\nvar _defaultClassNames = require('./default-class-names');\n\nvar _defaultClassNames2 = _interopRequireDefault(_defaultClassNames);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nvar _rangePropType = require('./range-prop-type');\n\nvar _rangePropType2 = _interopRequireDefault(_rangePropType);\n\nvar _valuePropType = require('./value-prop-type');\n\nvar _valuePropType2 = _interopRequireDefault(_valuePropType);\n\nvar _slider = require('./slider');\n\nvar _slider2 = _interopRequireDefault(_slider);\n\nvar _track = require('./track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _utils = require('../utils');\n\nvar _keyCodes = require('./key-codes');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\n\n\nvar InputRange = (_class = function (_React$Component) {\n  _inherits(InputRange, _React$Component);\n\n  _createClass(InputRange, null, [{\n    key: 'propTypes',\n\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n    get: function get() {\n      return {\n        allowSameValues: _propTypes2.default.bool,\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string),\n        disabled: _propTypes2.default.bool,\n        draggableTrack: _propTypes2.default.bool,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _rangePropType2.default,\n        minValue: _rangePropType2.default,\n        name: _propTypes2.default.string,\n        onChangeStart: _propTypes2.default.func,\n        onChange: _propTypes2.default.func.isRequired,\n        onChangeComplete: _propTypes2.default.func,\n        step: _propTypes2.default.number,\n        value: _valuePropType2.default\n      };\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {Object}\n     */\n\n  }, {\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        allowSameValues: false,\n        classNames: _defaultClassNames2.default,\n        disabled: false,\n        maxValue: 10,\n        minValue: 0,\n        step: 1\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {boolean} [props.allowSameValues]\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} [props.classNames]\n     * @param {boolean} [props.disabled = false]\n     * @param {Function} [props.formatLabel]\n     * @param {number|Range} [props.maxValue = 10]\n     * @param {number|Range} [props.minValue = 0]\n     * @param {string} [props.name]\n     * @param {string} props.onChange\n     * @param {Function} [props.onChangeComplete]\n     * @param {Function} [props.onChangeStart]\n     * @param {number} [props.step = 1]\n     * @param {number|Range} props.value\n     */\n\n  }]);\n\n  function InputRange(props) {\n    _classCallCheck(this, InputRange);\n    /**\n     * @private\n     * @type {?number}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (InputRange.__proto__ || Object.getPrototypeOf(InputRange)).call(this, props));\n\n    _this.startValue = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.node = null;\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n    _this.trackNode = null;\n    /**\n     * @private\n     * @type {bool}\n     */\n\n    _this.isSliderDragging = false;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.lastKeyMoved = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(InputRange, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return the CSS class name of the component\n     * @private\n     * @return {string}\n     */\n\n  }, {\n    key: 'getComponentClassName',\n    value: function getComponentClassName() {\n      if (!this.props.disabled) {\n        return this.props.classNames.inputRange;\n      }\n\n      return this.props.classNames.disabledInputRange;\n    }\n    /**\n     * Return the bounding rect of the track\n     * @private\n     * @return {ClientRect}\n     */\n\n  }, {\n    key: 'getTrackClientRect',\n    value: function getTrackClientRect() {\n      return this.trackNode.getClientRect();\n    }\n    /**\n     * Return the slider key closest to a point\n     * @private\n     * @param {Point} position\n     * @return {string}\n     */\n\n  }, {\n    key: 'getKeyByPosition',\n    value: function getKeyByPosition(position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n      if (this.isMultiValue()) {\n        var distanceToMin = (0, _utils.distanceTo)(position, positions.min);\n        var distanceToMax = (0, _utils.distanceTo)(position, positions.max);\n\n        if (distanceToMin < distanceToMax) {\n          return 'min';\n        }\n      }\n\n      return 'max';\n    }\n    /**\n     * Return all the slider keys\n     * @private\n     * @return {string[]}\n     */\n\n  }, {\n    key: 'getKeys',\n    value: function getKeys() {\n      if (this.isMultiValue()) {\n        return ['min', 'max'];\n      }\n\n      return ['max'];\n    }\n    /**\n     * Return true if the difference between the new and the current value is\n     * greater or equal to the step amount of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasStepDifference',\n    value: function hasStepDifference(values) {\n      var currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      return (0, _utils.length)(values.min, currentValues.min) >= this.props.step || (0, _utils.length)(values.max, currentValues.max) >= this.props.step;\n    }\n    /**\n     * Return true if the component accepts a min and max value\n     * @private\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isMultiValue',\n    value: function isMultiValue() {\n      return (0, _utils.isObject)(this.props.value);\n    }\n    /**\n     * Return true if the range is within the max and min value of the component\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isWithinRange',\n    value: function isWithinRange(values) {\n      if (this.isMultiValue()) {\n        return values.min >= this.props.minValue && values.max <= this.props.maxValue && this.props.allowSameValues ? values.min <= values.max : values.min < values.max;\n      }\n\n      return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n    }\n    /**\n     * Return true if the new value should trigger a render\n     * @private\n     * @param {Range} values\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'shouldUpdate',\n    value: function shouldUpdate(values) {\n      return this.isWithinRange(values) && this.hasStepDifference(values);\n    }\n    /**\n     * Update the position of a slider\n     * @private\n     * @param {string} key\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePosition',\n    value: function updatePosition(key, position) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n      positions[key] = position;\n      this.lastKeyMoved = key;\n      this.updatePositions(positions);\n    }\n    /**\n     * Update the positions of multiple sliders\n     * @private\n     * @param {Object} positions\n     * @param {Point} positions.min\n     * @param {Point} positions.max\n     * @return {void}\n     */\n\n  }, {\n    key: 'updatePositions',\n    value: function updatePositions(positions) {\n      var values = {\n        min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n        max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect())\n      };\n      var transformedValues = {\n        min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n        max: valueTransformer.getStepValueFromValue(values.max, this.props.step)\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Update the value of a slider\n     * @private\n     * @param {string} key\n     * @param {number} value\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValue',\n    value: function updateValue(key, value) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      values[key] = value;\n      this.updateValues(values);\n    }\n    /**\n     * Update the values of multiple sliders\n     * @private\n     * @param {Range|number} values\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateValues',\n    value: function updateValues(values) {\n      if (!this.shouldUpdate(values)) {\n        return;\n      }\n\n      this.props.onChange(this.isMultiValue() ? values : values.max);\n    }\n    /**\n     * Increment the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'incrementValue',\n    value: function incrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] + this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Decrement the value of a slider by key name\n     * @private\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'decrementValue',\n    value: function decrementValue(key) {\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var value = values[key] - this.props.step;\n      this.updateValue(key, value);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Stop listening to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Stop listening to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * Handle any \"mousemove\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderDrag',\n    value: function handleSliderDrag(event, key) {\n      var _this2 = this;\n\n      if (this.props.disabled) {\n        return;\n      }\n\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      this.isSliderDragging = true;\n      requestAnimationFrame(function () {\n        return _this2.updatePosition(key, position);\n      });\n    }\n    /**\n     * Handle any \"mousemove\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackDrag',\n    value: function handleTrackDrag(event, prevEvent) {\n      if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n        return;\n      }\n\n      var _props = this.props,\n          maxValue = _props.maxValue,\n          minValue = _props.minValue,\n          _props$value = _props.value,\n          max = _props$value.max,\n          min = _props$value.min;\n      var position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n      var prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n      var prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n      var prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n      var offset = prevStepValue - stepValue;\n      var transformedValues = {\n        min: min - offset,\n        max: max - offset\n      };\n      this.updateValues(transformedValues);\n    }\n    /**\n     * Handle any \"keydown\" event received by the slider\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {string} key\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleSliderKeyDown',\n    value: function handleSliderKeyDown(event, key) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case _keyCodes.LEFT_ARROW:\n        case _keyCodes.DOWN_ARROW:\n          event.preventDefault();\n          this.decrementValue(key);\n          break;\n\n        case _keyCodes.RIGHT_ARROW:\n        case _keyCodes.UP_ARROW:\n          event.preventDefault();\n          this.incrementValue(key);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Handle any \"mousedown\" event received by the track\n     * @private\n     * @param {SyntheticEvent} event\n     * @param {Point} position\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTrackMouseDown',\n    value: function handleTrackMouseDown(event, position) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      var _props2 = this.props,\n          maxValue = _props2.maxValue,\n          minValue = _props2.minValue,\n          _props2$value = _props2.value,\n          max = _props2$value.max,\n          min = _props2$value.min;\n      event.preventDefault();\n      var value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n      var stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n      if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n        this.updatePosition(this.getKeyByPosition(position), position);\n      }\n    }\n    /**\n     * Handle the start of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionStart',\n    value: function handleInteractionStart() {\n      if (this.props.onChangeStart) {\n        this.props.onChangeStart(this.props.value);\n      }\n\n      if (this.props.onChangeComplete && !(0, _utils.isDefined)(this.startValue)) {\n        this.startValue = this.props.value;\n      }\n    }\n    /**\n     * Handle the end of any mouse/touch event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleInteractionEnd',\n    value: function handleInteractionEnd() {\n      if (this.isSliderDragging) {\n        this.isSliderDragging = false;\n      }\n\n      if (!this.props.onChangeComplete || !(0, _utils.isDefined)(this.startValue)) {\n        return;\n      }\n\n      if (this.startValue !== this.props.value) {\n        this.props.onChangeComplete(this.props.value);\n      }\n\n      this.startValue = null;\n    }\n    /**\n     * Handle any \"keydown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.handleInteractionStart(event);\n    }\n    /**\n     * Handle any \"keyup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyUp',\n    value: function handleKeyUp(event) {\n      this.handleInteractionEnd(event);\n    }\n    /**\n     * Handle any \"mousedown\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"mouseup\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * Handle any \"touchstart\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      this.handleInteractionStart(event);\n      this.addDocumentTouchEndListener();\n    }\n    /**\n     * Handle any \"touchend\" event received by the component\n     * @private\n     * @param {SyntheticEvent} event\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd(event) {\n      this.handleInteractionEnd(event);\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * Return JSX of sliders\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderSliders',\n    value: function renderSliders() {\n      var _this3 = this;\n\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      var keys = this.props.allowSameValues && this.lastKeyMoved === 'min' ? this.getKeys().reverse() : this.getKeys();\n      return keys.map(function (key) {\n        var value = values[key];\n        var percentage = percentages[key];\n        var _props3 = _this3.props,\n            maxValue = _props3.maxValue,\n            minValue = _props3.minValue;\n\n        if (key === 'min') {\n          maxValue = values.max;\n        } else {\n          minValue = values.min;\n        }\n\n        var slider = _react2.default.createElement(_slider2.default, {\n          ariaLabelledby: _this3.props.ariaLabelledby,\n          ariaControls: _this3.props.ariaControls,\n          classNames: _this3.props.classNames,\n          formatLabel: _this3.props.formatLabel,\n          key: key,\n          maxValue: maxValue,\n          minValue: minValue,\n          onSliderDrag: _this3.handleSliderDrag,\n          onSliderKeyDown: _this3.handleSliderKeyDown,\n          percentage: percentage,\n          type: key,\n          value: value\n        });\n\n        return slider;\n      });\n    }\n    /**\n     * Return JSX of hidden inputs\n     * @private\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'renderHiddenInputs',\n    value: function renderHiddenInputs() {\n      var _this4 = this;\n\n      if (!this.props.name) {\n        return [];\n      }\n\n      var isMultiValue = this.isMultiValue();\n      var values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n      return this.getKeys().map(function (key) {\n        var value = values[key];\n        var name = isMultiValue ? '' + _this4.props.name + (0, _utils.captialize)(key) : _this4.props.name;\n        return _react2.default.createElement('input', {\n          key: key,\n          type: 'hidden',\n          name: name,\n          value: value\n        });\n      });\n    }\n    /**\n     * @ignore\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var componentClassName = this.getComponentClassName();\n      var values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n      var percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n      return _react2.default.createElement('div', {\n        'aria-disabled': this.props.disabled,\n        ref: function ref(node) {\n          _this5.node = node;\n        },\n        className: componentClassName,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'min'\n      }, this.props.minValue), _react2.default.createElement(_track2.default, {\n        classNames: this.props.classNames,\n        draggableTrack: this.props.draggableTrack,\n        ref: function ref(trackNode) {\n          _this5.trackNode = trackNode;\n        },\n        percentages: percentages,\n        onTrackDrag: this.handleTrackDrag,\n        onTrackMouseDown: this.handleTrackMouseDown\n      }, this.renderSliders()), _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'max'\n      }, this.props.maxValue), this.renderHiddenInputs());\n    }\n  }]);\n\n  return InputRange;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleSliderDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackDrag', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackDrag'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleSliderKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleSliderKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTrackMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTrackMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleInteractionEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleInteractionEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype)), _class);\nexports.default = InputRange;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getPercentageFromPosition = getPercentageFromPosition;\nexports.getValueFromPosition = getValueFromPosition;\nexports.getValueFromProps = getValueFromProps;\nexports.getPercentageFromValue = getPercentageFromValue;\nexports.getPercentagesFromValues = getPercentagesFromValues;\nexports.getPositionFromValue = getPositionFromValue;\nexports.getPositionsFromValues = getPositionsFromValues;\nexports.getPositionFromEvent = getPositionFromEvent;\nexports.getStepValueFromValue = getStepValueFromValue;\n\nvar _utils = require('../utils');\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\n\n\nfunction getPercentageFromPosition(position, clientRect) {\n  var length = clientRect.width;\n  var sizePerc = position.x / length;\n  return sizePerc || 0;\n}\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\n\n\nfunction getValueFromPosition(position, minValue, maxValue, clientRect) {\n  var sizePerc = getPercentageFromPosition(position, clientRect);\n  var valueDiff = maxValue - minValue;\n  return minValue + valueDiff * sizePerc;\n}\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\n\n\nfunction getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return _extends({}, props.value);\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value\n  };\n}\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\n\n\nfunction getPercentageFromValue(value, minValue, maxValue) {\n  var validValue = (0, _utils.clamp)(value, minValue, maxValue);\n  var valueDiff = maxValue - minValue;\n  var valuePerc = (validValue - minValue) / valueDiff;\n  return valuePerc || 0;\n}\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\n\n\nfunction getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue)\n  };\n}\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\n\n\nfunction getPositionFromValue(value, minValue, maxValue, clientRect) {\n  var length = clientRect.width;\n  var valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  var positionValue = valuePerc * length;\n  return {\n    x: positionValue,\n    y: 0\n  };\n}\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\n\n\nfunction getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect)\n  };\n}\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\n\n\nfunction getPositionFromEvent(event, clientRect) {\n  var length = clientRect.width;\n\n  var _ref = event.touches ? event.touches[0] : event,\n      clientX = _ref.clientX;\n\n  return {\n    x: (0, _utils.clamp)(clientX - clientRect.left, 0, length),\n    y: 0\n  };\n}\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\n\n\nfunction getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = captialize;\n/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\n\nfunction captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clamp;\n/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = distanceTo;\n/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\n\nfunction distanceTo(pointA, pointB) {\n  var xDiff = Math.pow(pointB.x - pointA.x, 2);\n  var yDiff = Math.pow(pointB.y - pointA.y, 2);\n  return Math.sqrt(xDiff + yDiff);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDefined;\n/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumber;\n/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = isObject;\n/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = length;\n/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\n\nfunction length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\n\nvar DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value'\n};\nexports.default = DEFAULT_CLASS_NAMES;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rangePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction rangePropType(props) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n\n  if (!(0, _utils.isNumber)(minValue) || !(0, _utils.isNumber)(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = valuePropType;\n\nvar _utils = require('../utils');\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\n\n\nfunction valuePropType(props, propName) {\n  var maxValue = props.maxValue,\n      minValue = props.minValue;\n  var value = props[propName];\n\n  if (!(0, _utils.isNumber)(value) && (!(0, _utils.isObject)(value) || !(0, _utils.isNumber)(value.min) || !(0, _utils.isNumber)(value.max))) {\n    return new Error('\"' + propName + '\" must be a number or a range object');\n  }\n\n  if ((0, _utils.isNumber)(value) && (value < minValue || value > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n\n  if ((0, _utils.isObject)(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error('\"' + propName + '\" must be in between \"minValue\" and \"maxValue\"');\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _label = require('./label');\n\nvar _label2 = _interopRequireDefault(_label);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Slider = (_class = function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  _createClass(Slider, null, [{\n    key: 'propTypes',\n\n    /**\n     * Accepted propTypes of Slider\n     * @override\n     * @return {Object}\n     * @property {Function} ariaLabelledby\n     * @property {Function} ariaControls\n     * @property {Function} className\n     * @property {Function} formatLabel\n     * @property {Function} maxValue\n     * @property {Function} minValue\n     * @property {Function} onSliderDrag\n     * @property {Function} onSliderKeyDown\n     * @property {Function} percentage\n     * @property {Function} type\n     * @property {Function} value\n     */\n    get: function get() {\n      return {\n        ariaLabelledby: _propTypes2.default.string,\n        ariaControls: _propTypes2.default.string,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        formatLabel: _propTypes2.default.func,\n        maxValue: _propTypes2.default.number,\n        minValue: _propTypes2.default.number,\n        onSliderDrag: _propTypes2.default.func.isRequired,\n        onSliderKeyDown: _propTypes2.default.func.isRequired,\n        percentage: _propTypes2.default.number.isRequired,\n        type: _propTypes2.default.string.isRequired,\n        value: _propTypes2.default.number.isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {string} [props.ariaLabelledby]\n     * @param {string} [props.ariaControls]\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Function} [props.formatLabel]\n     * @param {number} [props.maxValue]\n     * @param {number} [props.minValue]\n     * @param {Function} props.onSliderKeyDown\n     * @param {Function} props.onSliderDrag\n     * @param {number} props.percentage\n     * @param {number} props.type\n     * @param {number} props.value\n     */\n\n  }]);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    _this.node = null;\n    return _this;\n  }\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n\n\n  _createClass(Slider, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.removeDocumentTouchEndListener();\n      this.removeDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @return {Object}\n     */\n\n  }, {\n    key: 'getStyle',\n    value: function getStyle() {\n      var perc = (this.props.percentage || 0) * 100;\n      var style = {\n        position: 'absolute',\n        left: perc + '%'\n      };\n      return style;\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * Listen to touchmove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchMoveListener',\n    value: function addDocumentTouchMoveListener() {\n      this.removeDocumentTouchMoveListener();\n      this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * Listen to touchend event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentTouchEndListener',\n    value: function addDocumentTouchEndListener() {\n      this.removeDocumentTouchEndListener();\n      this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchMoveListener',\n    value: function removeDocumentTouchMoveListener() {\n      this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentTouchEndListener',\n    value: function removeDocumentTouchEndListener() {\n      this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown() {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart() {\n      this.addDocumentTouchEndListener();\n      this.addDocumentTouchMoveListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchMove',\n    value: function handleTouchMove(event) {\n      this.props.onSliderDrag(event, this.props.type);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd() {\n      this.removeDocumentTouchMoveListener();\n      this.removeDocumentTouchEndListener();\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      this.props.onSliderKeyDown(event, this.props.type);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = this.getStyle();\n      return _react2.default.createElement('span', {\n        className: this.props.classNames.sliderContainer,\n        ref: function ref(node) {\n          _this2.node = node;\n        },\n        style: style\n      }, _react2.default.createElement(_label2.default, {\n        classNames: this.props.classNames,\n        formatLabel: this.props.formatLabel,\n        type: 'value'\n      }, this.props.value), _react2.default.createElement('div', {\n        'aria-labelledby': this.props.ariaLabelledby,\n        'aria-controls': this.props.ariaControls,\n        'aria-valuemax': this.props.maxValue,\n        'aria-valuemin': this.props.minValue,\n        'aria-valuenow': this.props.value,\n        className: this.props.classNames.slider,\n        draggable: 'false',\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        role: 'slider',\n        tabIndex: '0'\n      }));\n    }\n  }]);\n\n  return Slider;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchEnd', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchEnd'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleKeyDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleKeyDown'), _class.prototype)), _class);\nexports.default = Slider;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _desc, _value, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n/**\n * @ignore\n */\n\n\nvar Track = (_class = function (_React$Component) {\n  _inherits(Track, _React$Component);\n\n  _createClass(Track, null, [{\n    key: 'propTypes',\n\n    /**\n     * @override\n     * @return {Object}\n     * @property {Function} children\n     * @property {Function} classNames\n     * @property {Boolean} draggableTrack\n     * @property {Function} onTrackDrag\n     * @property {Function} onTrackMouseDown\n     * @property {Function} percentages\n     */\n    get: function get() {\n      return {\n        children: _propTypes2.default.node.isRequired,\n        classNames: _propTypes2.default.objectOf(_propTypes2.default.string).isRequired,\n        draggableTrack: _propTypes2.default.bool,\n        onTrackDrag: _propTypes2.default.func,\n        onTrackMouseDown: _propTypes2.default.func.isRequired,\n        percentages: _propTypes2.default.objectOf(_propTypes2.default.number).isRequired\n      };\n    }\n    /**\n     * @param {Object} props\n     * @param {InputRangeClassNames} props.classNames\n     * @param {Boolean} props.draggableTrack\n     * @param {Function} props.onTrackDrag\n     * @param {Function} props.onTrackMouseDown\n     * @param {number} props.percentages\n     */\n\n  }]);\n\n  function Track(props) {\n    _classCallCheck(this, Track);\n    /**\n     * @private\n     * @type {?Component}\n     */\n\n\n    var _this = _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this, props));\n\n    _this.node = null;\n    _this.trackDragEvent = null;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n\n\n  _createClass(Track, [{\n    key: 'getClientRect',\n    value: function getClientRect() {\n      return this.node.getBoundingClientRect();\n    }\n    /**\n     * @private\n     * @return {Object} CSS styles\n     */\n\n  }, {\n    key: 'getActiveTrackStyle',\n    value: function getActiveTrackStyle() {\n      var width = (this.props.percentages.max - this.props.percentages.min) * 100 + '%';\n      var left = this.props.percentages.min * 100 + '%';\n      return {\n        left: left,\n        width: width\n      };\n    }\n    /**\n     * Listen to mousemove event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseMoveListener',\n    value: function addDocumentMouseMoveListener() {\n      this.removeDocumentMouseMoveListener();\n      this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * Listen to mouseup event\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'addDocumentMouseUpListener',\n    value: function addDocumentMouseUpListener() {\n      this.removeDocumentMouseUpListener();\n      this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseMoveListener',\n    value: function removeDocumentMouseMoveListener() {\n      this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'removeDocumentMouseUpListener',\n    value: function removeDocumentMouseUpListener() {\n      this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event) {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      if (this.trackDragEvent !== null) {\n        this.props.onTrackDrag(event, this.trackDragEvent);\n      }\n\n      this.trackDragEvent = event;\n    }\n    /**\n     * @private\n     * @return {void}\n     */\n\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      if (!this.props.draggableTrack) {\n        return;\n      }\n\n      this.removeDocumentMouseMoveListener();\n      this.removeDocumentMouseUpListener();\n      this.trackDragEvent = null;\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(event) {\n      var clientX = event.touches ? event.touches[0].clientX : event.clientX;\n      var trackClientRect = this.getClientRect();\n      var position = {\n        x: clientX - trackClientRect.left,\n        y: 0\n      };\n      this.props.onTrackMouseDown(event, position);\n\n      if (this.props.draggableTrack) {\n        this.addDocumentMouseMoveListener();\n        this.addDocumentMouseUpListener();\n      }\n    }\n    /**\n     * @private\n     * @param {SyntheticEvent} event - User event\n     */\n\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      event.preventDefault();\n      this.handleMouseDown(event);\n    }\n    /**\n     * @override\n     * @return {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var activeTrackStyle = this.getActiveTrackStyle();\n      return _react2.default.createElement('div', {\n        className: this.props.classNames.track,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        ref: function ref(node) {\n          _this2.node = node;\n        }\n      }, _react2.default.createElement('div', {\n        style: activeTrackStyle,\n        className: this.props.classNames.activeTrack\n      }), this.props.children);\n    }\n  }]);\n\n  return Track;\n}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseUp', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseUp'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleMouseDown', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMouseDown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleTouchStart', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleTouchStart'), _class.prototype)), _class);\nexports.default = Track;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** @ignore */\n\nvar DOWN_ARROW = exports.DOWN_ARROW = 40;\n/** @ignore */\n\nvar LEFT_ARROW = exports.LEFT_ARROW = 37;\n/** @ignore */\n\nvar RIGHT_ARROW = exports.RIGHT_ARROW = 39;\n/** @ignore */\n\nvar UP_ARROW = exports.UP_ARROW = 38;"],"sourceRoot":""}