{"version":3,"sources":["containers/Products/linkProductBigcommerce.jsx","containers/Products/index.jsx"],"names":["LinkProductBigcommerce","state","products","linkedProducts","inputErrors","loading","search","Form","getInstance","Object","assertThisInitialized","_this","fields","views","getLinkedProducts","props","dispatch","promize_customizer_id","setData","bigCommerceProduct","response","data","isFetching","status","setState","isError","linkProduct","onChange","e","id","lineked","console","log","target","checked","push","web_product_id","domain_id","app","DOMAIN_ID","filter","obj","unLinkProduct","ids","promize_customizer_products_id","handleChange","key","defineProperty","value","nextProps","this","signedPayload","signed_payload","_this2","_this$state","product","name","toLowerCase","indexOf","react_default","a","createElement","className","Search","length","colSpan","map","index","linked","find","width","src","primary_image","tiny_url","switchtoggle","assign","fieldName","spanLabel","first","second","checkValue","NoRecord","onClick","currentComponent","show","Component","connect","Products","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayRows","bind","initialState","grid","Grid","url","actionType","PRODUCTS","method","filters","searchVal","getRecords","productRows","colspan","promize_customizer_name","statusUpdate","PRODUCT_STATUS_UPDATE","modelName","PKey","params","PLATFORM","title","react_router_dom","to","table","delete","handleToogleModal","idKey","PRODUCT_DELETE","_this3","Table","ref","instance","pageTitle","addButton","managementType","PRODUCT","rowDelete","productDelete","sortType","handleColSorting","linkProductBigcommerce","productStatus"],"mappings":"mRAYMA,6MAIFC,MAAQ,CACJC,SAAU,GACVC,eAAgB,GAChBC,YAAa,GACbC,SAAS,EACTC,OAAQ,MAEZA,OAASC,IAAKC,YAALC,OAAAC,EAAA,EAAAD,CAAAE,GACC,GACN,SAACC,KAED,SAACC,KAED,MAyBJC,kBAAoB,WAChBH,EAAKI,MAAMC,SAASF,YAAkB,CAClCG,sBAAuBN,EAAKI,MAAME,4BAM1CC,QAAU,SAAAH,GACN,GAAIA,EAAMI,mBAAoB,CAC1B,IAAMC,EAAWL,EAAMI,mBAAmBC,SACtCA,IAAaT,EAAKI,MAAMI,mBAAmBC,UACvCA,EAASC,QACJN,EAAMI,mBAAmBG,YAAcF,EAASG,QAA8B,MAApBH,EAASG,OACpEZ,EAAKa,SAAS,CAAEtB,SAAUkB,EAASC,MAAQ,MAErCN,EAAMI,mBAAmBG,YAAcP,EAAMI,mBAAmBM,SACtEd,EAAKa,SAAS,CAAEtB,SAAU,MAK1C,GAAIa,EAAMZ,eAAgB,CACtB,IAAMiB,EAAWL,EAAMZ,eAAeiB,SAClCA,IAAaT,EAAKI,MAAMZ,eAAeiB,UACnCA,EAASC,QACJN,EAAMZ,eAAemB,YAAcF,EAASG,QAA8B,MAApBH,EAASG,OAChEZ,EAAKa,SAAS,CAAErB,eAAgBiB,EAASC,MAAQ,GAAGhB,SAAS,KAGvDU,EAAMZ,eAAemB,YAAcP,EAAMZ,eAAesB,SAC9Dd,EAAKa,SAAS,CAAErB,eAAgB,MAKhD,GAAIY,EAAMW,YAAa,CACnB,IAAMN,EAAWL,EAAMW,YAAYN,SAC/BA,IAAaT,EAAKI,MAAMW,YAAYN,UAChCA,IACKL,EAAMW,YAAYJ,YAAcF,EAASG,QAA8B,MAApBH,EAASG,QAC7DZ,EAAKG,wBAWzBa,SAAW,SAACC,EAAGC,EAAIC,GACfC,QAAQC,IAAIrB,EAAKI,MAAME,uBADI,IAErBd,EAAmBQ,EAAKV,MAAxBE,eACFyB,EAAEK,OAAOC,SACT/B,EAAegC,KAAK,CAChBC,eAAgBP,IAEpBlB,EAAKa,SAAS,CAAEnB,SAAS,IACzBM,EAAKI,MAAMC,SAASU,YAAY,CAC5BU,eAAgBP,EAChBZ,sBAAuBN,EAAKI,MAAME,sBAClCoB,UAAWC,IAAIC,eAGnBpC,EAAiBA,EAAeqC,OAAO,SAAUC,GAC7C,OAAOA,EAAIL,iBAAmBP,IAElClB,EAAKI,MAAMC,SAAS0B,YAAc,CAC9BC,IAAK,CAACb,EAAQc,mCAElBjC,EAAKa,SAAS,CAAEnB,SAAS,KAE7BM,EAAKa,SAAS,CAAErB,sBAEpB0C,aAAe,SAACjB,EAAGkB,GACfnC,EAAKa,SAALf,OAAAsC,EAAA,EAAAtC,CAAA,GAAiBqC,EAAMlB,EAAEK,OAAOe,OAAS,+FAhGnBC,GACtBC,KAAKhC,QAAQ+B,+CAOb,IAAIE,EAAgB,gWAEhBD,KAAKnC,MAAMC,SAASG,YAAmB,CACnCiC,eAAgBD,KAEpBD,KAAKpC,qDAwFJ,IAAAuC,EAAAH,KAAAI,EACsBJ,KAAKjD,MAA1BC,EADDoD,EACCpD,SAAUI,EADXgD,EACWhD,OAOhB,OANIA,IACAJ,EAAWA,EAASsC,OAAO,SAACe,GAExB,OAA+C,IADpCA,EAAQC,KAAKC,cACZC,QAAQpD,EAAOmD,kBAG5BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,8BAKRF,EAAAC,EAAAC,cAAA,OAAKC,UAAwD,YACzDH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIpC,SAAU,SAACC,GAAQyB,EAAKR,aAAajB,EAAG,WACxCoB,MAAO1C,IAEVJ,EAAS8D,OAAS,GAAKL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCAAkCjC,GAAG,YAC1E8B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAII,QAAQ,KAAZ,gBACAN,EAAAC,EAAAC,cAAA,oBAGRF,EAAAC,EAAAC,cAAA,aACK3D,EAASgE,IAAI,SAAC7C,EAAM8C,GACjB,IAAIC,EAASf,EAAKpD,MAAME,eAAekE,KAAK,SAAA3C,GAAW,OAAIA,EAAYU,gBAAkBf,EAAKQ,KAC9F,OAAO8B,EAAAC,EAAAC,cAAA,MAAIf,IAAKqB,GACZR,EAAAC,EAAAC,cAAA,MAAIS,MAAM,QAAOX,EAAAC,EAAAC,cAAA,OAAKU,IAAKlD,EAAKmD,cAAcC,YAC9Cd,EAAAC,EAAAC,cAAA,UACKxC,EAAKmC,MAEVG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACa,EAAA,EAADjE,OAAAkE,OAAA,GAAmBtB,EAAKtC,MAAxB,CACIiC,QAAQoB,EACRQ,UAAW,SACX/C,GAAIR,EAAKQ,GACTF,SAAU,SAACC,GAAQyB,EAAK1B,SAASC,EAAGP,EAAKQ,GAAIuC,IAC7CS,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,aAQzD7E,EAAS8D,OAAS,GAAKL,EAAAC,EAAAC,cAACoB,EAAA,EAAD,OAE7BtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgCoB,QAAS,SAAAtD,GAAC,OAAIyB,EAAKtC,MAAMoE,iBAAiB3D,SAAS,CAAEE,YAAa,CAAE0D,MAAM,OAA5H,mBAnLiBC,aAyLtBC,cAAQ,SAACrF,GACpB,MAAO,CACHkB,mBAAoBlB,EAAMkB,mBAC1BhB,eAAgBF,EAAME,eACtBuB,YAAazB,EAAMyB,cAJZ4D,CAMZtF,UChMGuF,cAEF,SAAAA,EAAYxE,GAAO,IAAAJ,EAAA,OAAAF,OAAA+E,EAAA,EAAA/E,CAAAyC,KAAAqC,IACf5E,EAAAF,OAAAgF,EAAA,EAAAhF,CAAAyC,KAAAzC,OAAAiF,EAAA,EAAAjF,CAAA8E,GAAAI,KAAAzC,KAAMnC,KACD6E,YAAcjF,EAAKiF,YAAYC,KAAjBpF,OAAAC,EAAA,EAAAD,CAAAE,IACnBA,EAAKV,MAAQU,EAAKmF,eAClBnF,EAAKoF,KAAOC,IAAKxF,YAAY,CAAE2E,iBAAiB1E,OAAAC,EAAA,EAAAD,CAAAE,GAAOsF,IAAK,kBAAmBC,WAAYC,IAAUC,OAAQ,SAJ9FzF,8EAOf,MAAO,CACH0F,QAAS,CACLhE,UAAWa,KAAKnC,MAAMuB,IAAIC,UAC1B+D,UAAW,IAEfpG,SAAU,GACVwB,YAAa,CACT0D,MAAM,gDAMdlC,KAAK6C,KAAKQ,6CAGNxF,GACJ,IAAMK,EAAWL,EAAMb,SAASkB,SAC5BA,IAAa8B,KAAKnC,MAAMb,SAASkB,UAC7BA,EAASC,QACJN,EAAMb,SAASoB,YAAcF,EAASG,QAA8B,MAApBH,EAASG,OAC1D2B,KAAK1B,SAAS,CAAEtB,SAAUkB,EAASC,MAAQ,MAErCN,EAAMb,SAASoB,YAAcP,EAAMb,SAASuB,SAClDyB,KAAK1B,SAAS,CAAEtB,SAAU,4CAM5B,IAAAmD,EAAAH,KACJhD,EAAWgD,KAAKjD,MAAMC,SACxBsG,EAAc7C,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAU3D,WAAY4B,KAAKnC,MAAMb,SAASoB,WAAYmF,QAAQ,OA0BhF,OAzBIvG,EAAS8D,OAAS,IAClBwC,EAActG,EAASgE,IAAI,SAACX,EAASY,GACjC,IAAI5C,EAA4B,GAAlBgC,EAAQhC,OACtB,OAAOoC,EAAAC,EAAAC,cAAA,MAAIf,IAAKqB,GACZR,EAAAC,EAAAC,cAAA,UAAKN,EAAQmD,yBACb/C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACa,EAAA,EAADjE,OAAAkE,OAAA,GAAmBtB,EAAKtC,MAAxB,CACIiC,MAAOzB,EACPqD,UAAW,SACX/C,GAAI0B,EAAQtC,sBACZU,SAAU,SAACC,GAAQyB,EAAK0C,KAAKY,aAAa,CAAEV,IAAK,sBAAuBC,WAAYU,IAAuBC,UAAW,qBAAsBC,KAAM,wBAAyBC,OAAQxD,GAAW3B,IAC9LiD,UAAW,CAAEC,MAAO,SAAUC,OAAQ,YACtCC,WAAY,CAAEF,OAAO,EAAMC,QAAQ,OAG3CpB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACM,eAAhBxB,IAAI0E,UAA6BrD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAemD,MAAM,eAAe/B,QAAS,SAAAtD,GAAC,OAAIyB,EAAK7B,SAAS,CAAEE,YAAa,CAAE0D,MAAM,EAAMnE,sBAAuBsC,EAAQtC,2BAA4B0C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACzNH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASpD,UAAU,eAAeqD,GAAI,iBAAmB5D,EAAQtC,uBAAuB0C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBmD,MAAM,kBAC9HtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBoB,QAAS,SAACtD,GAAD,OAAOyB,EAAK+D,MAAMC,OAAOC,kBAAkB,CAAEzF,GAAI0B,EAAQtC,sBAAuBsG,MAAO,MAAOtB,IAAK,eAAgBY,UAAW,qBAAsBC,KAAM,wBAAyBZ,WAAYsB,KAAkB5F,IAAIqF,MAAM,UAAStD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAM1S0C,oDAGevD,GACtBC,KAAKhC,QAAQ+B,oCAER,IAAAwE,EAAAvE,KACL,OAAOS,EAAAC,EAAAC,cAAC6D,EAAA,EAADjH,OAAAkE,OAAA,CACHgD,IAAK,SAAAC,GAAcH,EAAKL,MAAQQ,IAC5B1E,KAAKnC,MAAWmC,KAAKjD,MAFtB,CAGH4H,UAAU,WACVC,UACInE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASpD,UAAU,0BAA0BqD,GAAG,gBAC5CxD,EAAAC,EAAAC,cAAA,YAAO,QAGfkE,eAAgBC,IAChBjC,KAAM7C,KAAK6C,KACX1E,KAAM6B,KAAKnC,MAAMb,SACjB+H,UAAW/E,KAAKnC,MAAMmH,gBAGtBvE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAyCjC,GAAG,YACzD8B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAYZ,KAAK6C,KAAKoC,SAAoC,OAAtBjF,KAAK6C,KAAKoC,SAAqB,eAAiB,eAAkB,UAAWjD,QAAS,SAACtD,GAAD,OAAO6F,EAAK1B,KAAKqC,iBAAiBxG,KAAhK,gBACA+B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aACKX,KAAK0C,gBAGb1C,KAAKjD,MAAMyB,YAAY0D,MAAwB,eAAhB9C,IAAI0E,UAA6BrD,EAAAC,EAAAC,cAACwE,EAAD,CAAwBpH,sBAAuBiC,KAAKjD,MAAMyB,YAAYT,sBAAuBkE,iBAAkBjC,eArGrKmC,aA0GRC,sBAAQ,SAACrF,GACpB,MAAO,CACHqI,cAAerI,EAAMqI,cACrBJ,cAAejI,EAAMiI,cACrBhI,SAAUD,EAAMC,WAJToF,CAMZC","file":"static/js/23.43e642a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport toastr from 'toastr';\nimport Cookies from 'js-cookie';\nimport Form from '../../utility/Form';\nimport Search from '../../components/form/Search'\nimport Input from '../../components/form/input'\nimport Switchtoggle from '../../components/form/switchtoggle';\nimport NoRecord from '../../components/grid/NoRecord';\nimport { bigCommerceProduct, getLinkedProducts, linkProduct, unLinkProduct } from '../../actions/checklogin';\nimport { app } from '../../config/app';\n\nclass LinkProductBigcommerce extends Component {\n    /**\n     * State\n     */\n    state = {\n        products: [],\n        linkedProducts: [],\n        inputErrors: {},\n        loading: false,\n        search: ''\n    }\n    search = Form.getInstance(\n        this, {},\n        (fields) => {\n        },\n        (views) => {\n        },\n        {}\n    );\n    /**\n     * Componet will Receive Props\n     * @param {object} nextProps \n     */\n    componentWillReceiveProps(nextProps) {\n        this.setData(nextProps)\n    }\n    /**\n     * componet Did Mount\n     */\n    componentDidMount() {\n        //let signedPayload = Cookies.get('signed_payload')\n        let signedPayload = 'eyJ1c2VyIjp7ImlkIjoxMzk0NDQ4LCJlbWFpbCI6InNhbmdlZXRoYWxAZGNrYXAuY29tIn0sIm93bmVyIjp7ImlkIjoxMzk0NDQ4LCJlbWFpbCI6InNhbmdlZXRoYWxAZGNrYXAuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvNDYwM3BkbTMwYSIsInN0b3JlX2hhc2giOiI0NjAzcGRtMzBhIiwidGltZXN0YW1wIjoxNTcwNzAxODE5Ljc0Mzc0MDZ9.N2ViNTRmZTc1M2FjNDA0OTUyNWZlYmI2MjM4ZWUzZDAxNWE3NDE0M2E1MTI1YjBhMDM2NGE0NDkyNzBiZTBjZQ=='\n        if (signedPayload) {\n            this.props.dispatch(bigCommerceProduct({\n                signed_payload: signedPayload,\n            }))\n            this.getLinkedProducts()\n        } else {\n            toastr.warning(\"Sorry Can't link the product\")\n        }\n\n    }\n    getLinkedProducts = () => {\n        this.props.dispatch(getLinkedProducts({\n            promize_customizer_id: this.props.promize_customizer_id\n        }))\n    }\n    /**\n     * set Data\n     */\n    setData = props => {\n        if (props.bigCommerceProduct) {\n            const response = props.bigCommerceProduct.response;\n            if (response !== this.props.bigCommerceProduct.response) {\n                if (response.data) {\n                    if (!props.bigCommerceProduct.isFetching && response.status && response.status === 200) {\n                        this.setState({ products: response.data || [] });\n                    }\n                    else if (!props.bigCommerceProduct.isFetching && props.bigCommerceProduct.isError) {\n                        this.setState({ products: [] });\n                    }\n                }\n            }\n        }\n        if (props.linkedProducts) {\n            const response = props.linkedProducts.response;\n            if (response !== this.props.linkedProducts.response) {\n                if (response.data) {\n                    if (!props.linkedProducts.isFetching && response.status && response.status === 200) {\n                        this.setState({ linkedProducts: response.data || [],loading: false });\n                        \n                    }\n                    else if (!props.linkedProducts.isFetching && props.linkedProducts.isError) {\n                        this.setState({ linkedProducts: [] });\n                    }\n                }\n            }\n        }\n        if (props.linkProduct) {\n            const response = props.linkProduct.response;\n            if (response !== this.props.linkProduct.response) {\n                if (response) {\n                    if (!props.linkProduct.isFetching && response.status && response.status === 200) {\n                        this.getLinkedProducts()\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * onChange Handler\n     */\n    onChange = (e, id, lineked) => {\n        console.log(this.props.promize_customizer_id)\n        let { linkedProducts } = this.state\n        if (e.target.checked) {\n            linkedProducts.push({\n                web_product_id: id\n            })\n            this.setState({ loading: true })\n            this.props.dispatch(linkProduct({\n                web_product_id: id,\n                promize_customizer_id: this.props.promize_customizer_id,\n                domain_id: app.DOMAIN_ID\n            }))\n        } else {\n            linkedProducts = linkedProducts.filter(function (obj) {\n                return obj.web_product_id !== id;\n            });\n            this.props.dispatch(unLinkProduct({\n                ids: [lineked.promize_customizer_products_id]\n            }))\n            this.setState({ loading: true })\n        }\n        this.setState({ linkedProducts })\n    }\n    handleChange = (e, key) => {\n        this.setState({ [key]: e.target.value || '' })\n    }\n    /** \n     * React render function\n    */\n    render() {\n        let { products, search } = this.state\n        if (search) {\n            products = products.filter((product) => {\n                let name = product.name.toLowerCase()\n                return name.indexOf(search.toLowerCase()) !== -1\n            })\n        }\n        return <div className=\"promize-modal-cover\">\n            <div className=\"promize-modal modal-md\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Link Product\n                        </span>\n                    </h3>\n                </div>\n                <div className={\"promize-modal-body \" + this.state.loading ? \"disabled\" : \"\"}>\n                    <Search\n                        onChange={(e) => { this.handleChange(e, 'search') }}\n                        value={search}\n                    />\n                    {products.length > 0 && <table className=\"promize-table table-hover mt-15\" id=\"fixTable\">\n                        <thead>\n                            <tr>\n                                <th colSpan=\"2\">Product Name</th>\n                                <th>Link</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((data, index) => {\n                                let linked = this.state.linkedProducts.find(linkProduct => linkProduct.web_product_id == data.id)\n                                return <tr key={index}>\n                                    <td width=\"40px\"><img src={data.primary_image.tiny_url} /></td>\n                                    <td >\n                                        {data.name}\n                                    </td>\n                                    <td>\n                                        <Switchtoggle  {...this.props}\n                                            value={(linked ? true : false)}\n                                            fieldName={'status'}\n                                            id={data.id}\n                                            onChange={(e) => { this.onChange(e, data.id, linked) }}\n                                            spanLabel={{ first: 'Active', second: 'InActive' }}\n                                            checkValue={{ first: true, second: false }}\n                                        />\n                                    </td>\n                                </tr>\n                            })}\n\n                        </tbody>\n                    </table>}\n                    {!products.length > 0 && <NoRecord />}\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary m-0\" onClick={e => this.props.currentComponent.setState({ linkProduct: { show: false } })}>Close</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default connect((state) => {\n    return {\n        bigCommerceProduct: state.bigCommerceProduct,\n        linkedProducts: state.linkedProducts,\n        linkProduct: state.linkProduct\n    };\n})(LinkProductBigcommerce);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Switchtoggle from '../../components/form/switchtoggle';\nimport { NavLink } from 'react-router-dom';\nimport Grid from '../../utility/grid';\nimport Table from '../../components/grid/Table';\nimport NoRecord from '../../components/grid/NoRecord';\nimport LinkProductBigcommerce from './linkProductBigcommerce'\nimport { app } from '../../config/app'\nimport { PRODUCTS, PRODUCT, PRODUCT_DELETE, PRODUCT_STATUS_UPDATE } from \"../../utility/constants\";\n\nclass Products extends Component {\n\n    constructor(props) {\n        super(props);\n        this.displayRows = this.displayRows.bind(this);\n        this.state = this.initialState();\n        this.grid = Grid.getInstance({ currentComponent: this, url: 'getProductLists', actionType: PRODUCTS, method: 'POST' });\n    }\n    initialState() {\n        return {\n            filters: {\n                domain_id: this.props.app.DOMAIN_ID,\n                searchVal: '',\n            },\n            products: [],\n            linkProduct: {\n                show: false\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.grid.getRecords();\n    }\n\n    setData(props) {\n        const response = props.products.response;\n        if (response !== this.props.products.response) {\n            if (response.data) {\n                if (!props.products.isFetching && response.status && response.status === 200) {\n                    this.setState({ products: response.data || [] });\n                }\n                else if (!props.products.isFetching && props.products.isError) {\n                    this.setState({ products: [] });\n                }\n            }\n        }\n    }\n\n    displayRows() {\n        const products = this.state.products;\n        let productRows = <NoRecord isFetching={this.props.products.isFetching} colspan=\"10\" />\n        if (products.length > 0) {\n            productRows = products.map((product, index) => {\n                var status = (product.status == 1) ? true : false;\n                return <tr key={index}>\n                    <td>{product.promize_customizer_name}</td>\n                    <td>\n                        <Switchtoggle  {...this.props}\n                            value={status}\n                            fieldName={'status'}\n                            id={product.promize_customizer_id}\n                            onChange={(e) => { this.grid.statusUpdate({ url: \"changeProductStatus\", actionType: PRODUCT_STATUS_UPDATE, modelName: \"promize_customizer\", PKey: \"promize_customizer_id\", params: product }, e) }}\n                            spanLabel={{ first: 'Active', second: 'InActive' }}\n                            checkValue={{ first: true, second: false }}\n                        />\n                    </td>\n                    <td>\n                        <div className=\"table-actions\">\n                            {app.PLATFORM == \"bigcommerce\" && <button className=\"btn-tbl link\" title=\"Link Product\" onClick={e => this.setState({ linkProduct: { show: true, promize_customizer_id: product.promize_customizer_id } })}><i className=\"fa fa-link\"></i></button>}\n                            <NavLink className=\"btn-tbl edit\" to={\"products/edit/\" + product.promize_customizer_id}><i className=\"fa fa-pencil-alt\" title=\"Edit Product\"></i></NavLink>\n                            <button className=\"btn-tbl delete\" onClick={(e) => this.table.delete.handleToogleModal({ id: product.promize_customizer_id, idKey: 'ids', url: 'deleteRecord', modelName: \"promize_customizer\", PKey: \"promize_customizer_id\", actionType: PRODUCT_DELETE }, e)} title=\"Delete\"><i className=\"fa fa-trash-alt\"></i></button>\n                        </div>\n                    </td>\n                </tr>\n            })\n        }\n        return productRows;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setData(nextProps);\n    }\n    render() {\n        return <Table\n            ref={instance => { this.table = instance; }}\n            {...this.props} {...this.state}\n            pageTitle=\"Products\"\n            addButton={\n                <NavLink className=\"btn btn-promize-primary\" to=\"products/add\">\n                    <span>{\"Add\"}</span>\n                </NavLink>\n            }\n            managementType={PRODUCT}\n            grid={this.grid}\n            data={this.props.products}\n            rowDelete={this.props.productDelete}\n        >\n\n            <table className=\"promize-table table-hover table-action\" id=\"fixTable\">\n                <thead>\n                    <tr>\n                        <th className={(this.grid.sortType) ? ((this.grid.sortType == 'ASC') ? \"sorting-asec\" : \"sorting-desc\") : \"sorting\"} onClick={(e) => this.grid.handleColSorting(e)}>Product Name</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.displayRows()}\n                </tbody>\n            </table>\n            {this.state.linkProduct.show && app.PLATFORM == 'bigcommerce' && <LinkProductBigcommerce promize_customizer_id={this.state.linkProduct.promize_customizer_id} currentComponent={this} />}\n        </Table>\n    }\n}\n\nexport default connect((state) => {\n    return {\n        productStatus: state.productStatus,\n        productDelete: state.productDelete,\n        products: state.products,\n    };\n})(Products);\n"],"sourceRoot":""}