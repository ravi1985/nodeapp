{"version":3,"sources":["components/form/Search.jsx","actions/products/index.jsx","containers/Products/Forms.jsx","components/productimize/FabricFunction.jsx","components/form/SetOptionPosition.jsx","components/form/SetTabPosition.jsx","components/form/SetBoundary.jsx","containers/Products/Attribute/Options.jsx","containers/Products/Attribute/Cliparts.jsx","containers/Products/Attribute/Image.jsx","containers/Products/Attribute/Text.jsx","components/form/inputMultple.jsx","containers/Products/subTab.jsx","containers/Products/tab.jsx","containers/Products/sectionForm.jsx","containers/Products/add.jsx","assets/images/no-data.png"],"names":["Search","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","type","value","this","props","onChange","placeholder","name","Component","get","id","types","concat","PRODUCT","PENDING","FULFILLED","REJECTED","method","url","data","payload","receiveType","save","Object","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","modelName","idKey","promize_customizer_id","saveSection","promize_section_id","SECTION","saveTab","promize_tab_id","created_date","updated_date","TAB","updateBulkRecord","saveSubTab","promize_sub_tab_id","SUB_TAB","deleteRecord","saveTabAttribute","promize_tab_attribute_id","TAB_ATTRIBUTE","saveTabAttributeValues","promize_tab_attribute_values_id","TAB_ATTRIBUTE_VALUES","saveTabAttributeTextValues","linkTabAttributeValues","TAB_ATTRIBUTE_VALUES_LIST","linkTabAttributeClipartValues","uploadBaseImage","file","typeName","formData","FormData","append","IMAGE_UPLOAD","requestBodyType","uploadTabImage","uploadTabThumbnailImage","TAB_THUMBNAIL_IMAGE","initialState","fields","domain_id","app","DOMAIN_ID","promize_customizer_name","status","model_image","overlay_image","overlay_position","inputErrors","isEdit","validation","Forms","_this","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","closePopup","e","preventDefault","setState","popup","delete","deleteView","state","views","view_name","image_url","file_name","handleClickOutside","bind","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","$","show","hide","newObj","assign","updateView","saveView","hideAddViewPopup","toastr","error","target","imageUpload","response","handleUploadedImage","document","addEventListener","removeEventListener","event","classList","contains","removeClass","addClass","path","index","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","style","display","_components_form_input__WEBPACK_IMPORTED_MODULE_12__","fieldName","labelName","handleViewNameChange","_components_files_ImageUpload__WEBPACK_IMPORTED_MODULE_15__","dataName","imageType","header","onClick","handleUploadView","src","noImages","_this3","Fragment","onSubmit","form","handleProductSubmit","showAddViewPopup","length","displayNoImage","map","key","openImageOptions","title","handleEdit","APP_IMAGE_BASE_URL","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","_components_form_SubmitButton__WEBPACK_IMPORTED_MODULE_13__","text","product","addView","_components_design_Popup__WEBPACK_IMPORTED_MODULE_17__","submitButton","cancel","connect","FabricFunction","canvas","classCallCheck","_objects","_","find","SetOptionPosition","_controlPoints","possibleConstructorReturn","getPrototypeOf","position","left","top","width","height","scaleX","scaleY","angle","controlPoints","cornerSize","hasControls","borderColor","cornerColor","cornerStyle","transparentCorners","defineProperty","currentView","fabricFunction","getInstance","optionView","optionViewPosition","modelImage","tabAttributeValueData","setOptionPosition","option_images","JSON","parse","option_position","handleInputChange","assertThisInitialized","addBaseImage","addOptionImage","positionChangeCallback","_this$state","baseImage","fabric","Canvas","selection","controlsAboveOverlay","centeredScaling","allowTouchScrolling","on","productimizeType","animate","renderAll","setCanvas","modelId","image","ele","promize_images_id","setOptionImage","callBack","clear","Image","fromURL","baseImageObject","set","selectable","setHeight","setWidth","originX","originY","add","findByName","warning","uploadedImage","_this$state2","currnetModelImage","_optionViewPosition$c","uploadedImageObject","objectSpread","lockUniScaling","opacity","_this$state3","obj","_this$state4","boundReact","getBoundingRect","x","y","getScaledWidth","getScaledHeight","lockScaling","_this3$state","complete","trigger","_this$state5","object","parseInt","changeCanvasData","xpos","ypos","_this$state6","actualWidth","ratio","actualHeight","_this$state7","onComplete","setCoords","_this4","_this4$state","promize_images","optionData","changeView","_this$state8","updateTabAttributeValues","stringify","success","_this$state9","optionImageObj","remove","_this5","optionViewImageId","values","react_default","active","indexOf","_this6","_this7","_this8","form_input","inputType","disabled","js_default","maxValue","minValue","handleInputRangeChange","onChangeComplete","_this9","thumbnail","canvasControls","prevView","nextView","deleteButton","imageCollection","submit","SetTabPosition","tabData","setTabPosition","tabImages","tabImagesPosition","tab_images","tab_images_position","addTabImage","isFetching","isError","handleTabImage","setTabImage","_tabImagesPosition$cu","updateTabImages","tabImageObj","ImageUpload","imageForm","SetBoundary","boundaryposition","overlay","clipRect","Rect","fill","addBoundary","setBoundary","tab_attribute","boundary_position","tempObj","rect","addOverlayImage","rectRed","imageWidth","imageHeight","hasRotatingPoint","clipPath","promize_tab_text_attribute_values_id","promize_tab_image_attribute_values_id","promize_tab_clipart_attribute_values_id","Options","toggle","promize_attribute_values","tab_attribute_values","tab_attribute_data_values","attribute_name","deleteAttributeFromTab","promize_attribute_id","tab_id","class","keys","promize_attribute_values_id","img_data","image_type","push","option_name","option_code","alt","option_sku","option_price","openSetOptionPositionPopup","Cliparts","clipartList","getAssociatedClipart","promize_attribute_clipart_values","promize_domain_clipart_category_id","split","dispatch","clipart","isEmpty","tab_clipart_values","openSetBoundaryPopup","promize_attribute_clipart_values_id","clipart_images","promize_clipart_category_images","clipartImg","promize_product_clipart_image","noData","clipart_name","promize_attribute_image_values","tab_image_values","promize_attribute_image_values_id","image_name","image_price","image_sku","image_format","max_upload_size","min_upload_size","Text","fontSizes","fonts","fontColors","getAllFontSizes","getAllFonts","getAllFontColors","fontsList","font_id","fontsizes","font_size_id","fontcolors","promize_font_color_id","promize_attribute_text_values","tab_text_values","promize_attribute_text_values_id","font_ids","font_size_ids","font_color_ids","default_font_family","font_name","font","default_font_size","font_size","default_color","font_color_name","InputMultple","message","classValidation","classNameCheck","htmlFor","step","inputStep","data-type","dataType","data-name","onBlur","blurEventListner","handleFieldsChange","data-validation-name","maxLength","rows","input","React","Subtab","highlight","onDragOver","ev","dataTransfer","dropEffect","onDragLeave","onDrop","sectIndex","tabIndex","_this$props","subTabIndex","parentTabData","tab_style","draggable","onDragStart","onSubTabDragStart","onSubTabDragOver","onSubTabDrop","tab_name","actionButtons","handleFieldBlur","handleFieldChange","SimpleSelect","onChangeHandler","productDetails","optionText","enableEmptyOptionText","default_view","tab_layer_no","switchtoggle","tab_required","spanLabel","first","second","checkValue","handleSwitchChange","is_default_tab","inputMultple","tab_description","setDate","setCurrentTab","tabThumbnailImages","tab_icon","radioButton","label","handleStyleFieldBlur","handleStyleFieldChange","tabAttributeData","tab_attribute_data_image_values","tab_attribute_data_text_values","tab_attribute_data_clipart_values","attribute_type","Attribute_Options","default_option","Attribute_Cliparts","Attribute_Text","Attribute_Image","Tabs","getTabContent","Products_subTab","hightlight","subTabHide","displayTab","openTab","tabs","indexVal","sorted_sub_tabs","promize_sub_tabs","sort","b","sort_id","is_sub_tab","onTabDragStart","onTabDragOver","onTabDragEnter","onTabDrop","promize_tab_attributes","onAttributeDragStart","onAttributeDragOver","onAttributeDrop","promize_tab_clipart_attribute_values","promize_tab_text_attribute_values","promize_tab_image_attribute_values","subTabData","subTab","child_tab_id","sectionvalidation","section_name","SectionForms","setRef","ref","sectionRefs","content","deleteAttributeFromTabFn","deleteIndex","selectedTab","tab_attributes","tab_attr","ids","getAttribute","item","reorder","setData","effectAllowed","dropIndex","getData","attributes","addAttributeToTab","startIndex","othertabs","tabsObject","tabState","list","orderedTabs","reorderTabInSection","Obj","orderedAttributes","reorderAttributeInTab","reorderSubTabInTab","deleteTabFromsectionFn","parentTabId","filter","editSection","keyData","sectionX","getBoundingClientRect","sectionWrapperX","refs","sectionEdit","sections","section_id","section","saveSectionEdit","sectionDelete","sectionDeletefn","sectionIndex","activeSectionId","tab","image_color_settings","tab_thumbnail","selectedTabs","selectedSubTabs","currnetTabId","searchText","Form","tabImage","console","log","promize_sections","promize_tabs","tab_index","attribute","attr_index","promize_attribute","attributeData","promize_tab_attribute_values","tab_attr_value","tab_text_attribute_values","tab_image_attribute_values","createTab","saveSectionToState","saveTabToState","saveTabAttributeToState","saveTabAttributeValuesList","getAllAttributes","new","_this$refs","sectionContainer","sectionAddBtn","sectionContainerBoundBox","sectionAddBtnBoundBox","sectionWrapperWidth","newProps","records","parent_tab_id","saveSubTabToState","tabAttribute","tabAttributevalueslist","tabAttributevalues","tabThumbnailImage","saveTabImage","sectionData","sectionsData","undefined","o","tabAttributeValues","tab_attr_index","text_data","text_index","img_index","clip_data","clip_index","tabdata","subtabs","sub_tabs","selectedsub_tabs","includes","closeTabSelectionPopup","endIndex","result","Array","from","counter","_result$splice","splice","removed","slicedToArray","_result$splice3","_result$splice5","subTabs","checked","checkedVal","_this10","openTabSelectionPopup","openSetTabPositionPopup","deleteTabFromsection","_this11","CheckBox","currentComponent","dataList","selectedSubtab","addSubTabToTab","Products_tab","displayNoData","selectedTabsList","activeSection","_this12","tabsArray","entries","addSection","tabKey","addSelectedtab","icon","_this13","toLowerCase","react_router_dom","attributeIcon","history","_this14","saveData","form_SetOptionPosition","form_SetTabPosition","form_SetBoundary","addSectionArea","displayAttributeList","Popup","Add","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","view","generateUnqId","findIndex","n","openSection","_var_www_html_v3_productimze_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","formValidation","sectValidation","react__WEBPACK_IMPORTED_MODULE_7___default","_components_form_switchtoggle__WEBPACK_IMPORTED_MODULE_14__","_Forms__WEBPACK_IMPORTED_MODULE_11__","reset","_sectionForm__WEBPACK_IMPORTED_MODULE_12__","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/9.c8a471df.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/*Handling events with React elements is very similar to handling events on DOM elements\n    * Inside a loop it is common to want to pass an extra parameter to an event handler.\n    *the e argument representing the React event will be passed as a second argument after the ID. \n    *With an arrow function, we have to pass it explicitly, \n    *but with bind any further arguments are automatically forwarded\n    *The bind() method creates a new function that, when called, has its this keyword set to the provided value\n    *An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target\n    */\nclass Search extends Component {\n    render() {\n        return <div className=\"search-container\">\n            <input type=\"text\" value={this.props.value || ''} onChange={this.props.onChange} className=\"promize-form-control\" placeholder=\"Search.. \" name=\"searchVal\" />\n            <i className=\"fa fa-search\"></i>\n        </div>\n    }\n\n}\n\nexport default Search;","import { \n    PENDING, FULFILLED, REJECTED,\n    PRODUCT, IMAGE_UPLOAD,TAB_THUMBNAIL_IMAGE, SECTION, TAB, TAB_ATTRIBUTE,TAB_ATTRIBUTE_VALUES,TAB_ATTRIBUTE_VALUES_LIST, SUB_TAB\n} from \"../../utility/constants\";\n/**\n * get the customizer product details\n * @param {Number} id \n */\nexport function get(id){\n    const method = 'POST';\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: 'getProductWithPK/',\n        data: {\n            id\n        },\n        payload: {receiveType:'editData'}\n    }\n}\n/**\n * Create/Update the customizer product\n * @param {Object} data \n */\nexport function save(data){\n    let method = 'POST';\n    data = {\n        ...data,\n        modelName:\"promize_customizer\",\n        idKey:\"promize_customizer_id\"\n    }\n    let url = 'createRecord'\n\tif(data.promize_customizer_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${PRODUCT}_${PENDING}`, `${PRODUCT}_${FULFILLED}`, `${PRODUCT}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveSection(data){\n    data = {\n        ...data,\n        modelName:\"promize_section\",\n        idKey:\"promize_section_id\"\n    }\n\tlet method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_section_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SECTION}_${PENDING}`, `${SECTION}_${FULFILLED}`, `${SECTION}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab\",\n        idKey:\"promize_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n        delete data.created_date;\n        delete data.updated_date;\n\t}\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function updateBulkRecord(data){\n    let method = 'POST';\n    let url = 'updateBulkRecord'\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'editData'}\n    }\n}\n\nexport function saveSubTab(data){\n    data = {\n        ...data,\n        modelName:\"promize_sub_tab\",\n        idKey:\"promize_sub_tab_id\",\n    }\n    let method = 'POST';\n    let url = 'createRecord'\n\tif(data.promize_sub_tab_id){\n        method = 'PUT';\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${SUB_TAB}_${PENDING}`, `${SUB_TAB}_${FULFILLED}`, `${SUB_TAB}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function deleteRecord(data){\n    return {\n        types: [`${TAB}_${PENDING}`, `${TAB}_${FULFILLED}`, `${TAB}_${REJECTED}`],\n        method: \"DELETE\",\n        url: \"deleteRecord\",\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttribute(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute\",\n        idKey:\"promize_tab_attribute_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE}_${PENDING}`, `${TAB_ATTRIBUTE}_${FULFILLED}`, `${TAB_ATTRIBUTE}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function saveTabAttributeValues(data){\n    data = {\n        ...data,\n        modelName:\"promize_tab_attribute_values\",\n        idKey:\"promize_tab_attribute_values_id\"\n    }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data.promize_tab_attribute_values_id){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function saveTabAttributeTextValues(data){\n    // data = {\n    //     ...data,\n    //     modelName:\"promize_tab_text_attribute_values\",\n    //     idKey:\"promize_tab_text_attribute_values_id\"\n    // }\n    let method = 'POST'\n    let url = 'createRecord'\n\tif(data[data.idKey]){\n        method = 'PUT'\n        url = 'updateRecord'\n\t}\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function linkTabAttributeValues(data){\n    let method = 'POST'\n    let url = 'linkTabAttributeValues'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\nexport function linkTabAttributeClipartValues(data){\n    let method = 'POST'\n    let url = 'createBulkRecord'\n    return {\n        types: [`${TAB_ATTRIBUTE_VALUES_LIST}_${PENDING}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${FULFILLED}`, `${TAB_ATTRIBUTE_VALUES_LIST}_${REJECTED}`],\n        method: method,\n        url: url,\n        data: data,\n        payload: {receiveType:'postData'}\n    }\n}\n\nexport function uploadBaseImage(file,typeName,name){\n    /**\n     * Upload image async action creators\n     * Hanlde the Pending, Fullfilled (Success), Rejected actions\n     *\n     * @return object\n     */\n\tconst formData = new FormData();\n    formData.append('file',file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType:'FormData',\n        url: 'uploadBaseImage',\n        data: formData,\n        payload: {receiveType:'postData'}\n    }\n}\n\n\nexport function uploadTabImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${IMAGE_UPLOAD}_${PENDING}`, `${IMAGE_UPLOAD}_${FULFILLED}`, `${IMAGE_UPLOAD}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}\n\nexport function uploadTabThumbnailImage(file, typeName) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', typeName);\n    return {\n        types: [`${TAB_THUMBNAIL_IMAGE}_${PENDING}`, `${TAB_THUMBNAIL_IMAGE}_${FULFILLED}`, `${TAB_THUMBNAIL_IMAGE}_${REJECTED}`],\n        method: 'POST',\n        requestBodyType: 'FormData',\n        url: 'uploadTabImage',\n        data: formData,\n        payload: { receiveType: 'postData' }\n    }\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport toastr from 'toastr';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport Input from '../../components/form/input';\nimport { SubmitButton } from \"../../components/form/SubmitButton\";\nimport { app } from '../../config/app';\nimport ImageUpload from '../../components/files/ImageUpload';\nimport noImages from '../../assets/images/no-image.png';\nimport Popup from '../../components/design/Popup'\n\nexport function initialState() {\n    const initialState = {\n        fields:\n        {\n            \"domain_id\": app.DOMAIN_ID,\n            \"modelName\" : \"promize_customizer\",\n            \"promize_customizer_id\": \"\",\n            \"promize_customizer_name\": \"\",\n            \"status\": true,\n            \"model_image\": [],\n            \"overlay_image\" : '',\n            \"overlay_position\" : '' \n        },\n        inputErrors: {},\n        isEdit: true,\n    };\n\n    return initialState;\n}\n\nexport const validation = (props) => {\n    const rules = {\n        \"promize_customizer_name\": \"required\",\n    }\n    return rules;\n}\n\nexport const sectionValidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass Forms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            views: {\n                'view_name': '',\n                'image_url': '',\n                'file_name': ''\n            },\n        }\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    showAddViewPopup(e) {\n        e.preventDefault();\n        this.setState({views:{\n            'view_name': '',\n            'image_url': '',\n            'file_name': ''\n        }},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    hideAddViewPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover').hide();\n        const views = this.state.views;\n        const newObj = Object.assign({}, views, {\n            view_name: '',\n            image_url: '',\n            file_name: ''\n        });\n        this.setState({ views: newObj });\n    }\n    handleUploadView(e) {\n        e.preventDefault();\n        const views = this.state.views;\n        if (views.view_name && views.image_url) {\n            if(!views.id){\n                this.props.saveView(views);\n            }else{\n                this.props.updateView(views.id,views);\n            }\n            this.hideAddViewPopup(e);\n        } else {\n            toastr.error(\"Add view name and base image\");\n        }\n    }\n    handleViewNameChange(e) {\n        e.preventDefault();\n        let fields = this.state.views;\n        const newObj = Object.assign({}, fields, {\n            view_name: e.target.value\n        });\n        fields = newObj;\n        this.setState({ views: fields });\n    }\n    handleEdit(views){\n        this.setState({views},()=>{\n            $('.promize-modal-cover').show();\n        })\n    }\n    componentWillReceiveProps(props) {\n        if (props.imageUpload.response !== this.props.imageUpload.response) {\n            this.handleUploadedImage(props);\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (!event.target.classList.contains('btn-popup')) {\n            $('.portlet-dropdown-menu').removeClass('show');\n            $('.portlet-dropdown-menu').addClass('hide');\n        }\n    }\n\n    handleUploadedImage(props) {\n        const response = props.imageUpload.response;\n        if (response.status && response.status === 200) {\n            const fields = this.state.views;\n            let newObj = Object.assign({}, fields, {\n                image_url: response.file.path,\n            });\n            this.setState({ views: newObj });\n        }\n    }\n    openImageOptions(e, index) {\n        e.preventDefault();\n        $('.index-' + index).removeClass('hide');\n        $('.index-' + index).addClass('show');\n    }\n\n    addView() {\n        return (<div className=\"promize-modal-cover\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Add New View\n                        </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-form-group mt-10\">\n                        <Input {...this.props}\n                            fieldName={'view_name'}\n                            value={this.state.views.view_name}\n                            labelName={\"View Name\"}\n                            onChange={(e) => { this.handleViewNameChange(e) }}\n                            validation={true}\n                        />\n                    </div>\n                    <ImageUpload {...this.props}\n                        labelName={\"View Image\"}\n                        fieldName={'image_file'}\n                        dataName={'image_file'}\n                        validation={false}\n                        imageType={\"base_image\"}\n                        image_url={this.state.views.image_url}\n                        header={'View Image'}\n                        value={this.state.views.file_name}\n                    />\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.hideAddViewPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.handleUploadView(e) }}>Upload</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    displayNoImage() {\n        return <div className=\"promize-no-data\">\n            <img src={noImages} />\n            <p className=\"mt-10\">No Views available</p>\n        </div>\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup = (e) => {\n        e && e.preventDefault();\n        this.setState({ popup: false })\n    }\n    delete = (e, data) => {\n        let popup = {};\n        popup.title = \"Remove View\";\n        popup.content = 'Do you want to remove this view?';\n        popup.submit = () => {\n            this.props.deleteView(data.id)\n        }\n        this.setState({ popup })\n    }\n    render() {\n        return <>\n        <form onSubmit={this.props.form.handleProductSubmit} method=\"POST\">\n            <div className=\"promize-card-body\">\n                <div className=\"df\">\n                    <div className=\"wd-30\">\n                        <Input {...this.props}\n                            fieldName={'promize_customizer_name'}\n                            value={this.props.state.fields.promize_customizer_name}\n                            labelName={\"Product Name\"}\n                            validation={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"promize-card-header promize-card-innerheader\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Views</span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <button className=\"btn btn-links\" onClick={(e) => { this.showAddViewPopup(e) }}><i className=\"fa fa-plus\"></i> Add View</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-tab-option-container\">\n                    {this.props.state.fields.model_image && this.props.state.fields.model_image.length == 0 && this.displayNoImage()}\n                    {this.props.state.fields.model_image && this.props.state.fields.model_image.length > 0 &&\n                        <ul className=\"promize-tab-options\">\n                            {this.props.state.fields.model_image.map((data, index) => {\n                                return <li key={index} className=\"mr-15 mb-15\">\n                                    <div className=\"promize-tab-options-detail\">\n                                        <div className=\"promize-tab-option-header\">\n                                            <p className=\"tab-option-title\">{data.view_name}</p>\n                                            <div className=\"pormize-portlet-dropdown\">\n                                                <button className=\"btn button-dropdown\" onClick={(e) => this.openImageOptions(e, index)}><i className=\"fa fa-ellipsis-v\" ></i></button>\n                                                <div className={\"portlet-dropdown-menu index-\" + index}>\n                                                    <ul className=\"portlet-menu\">\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Edit\" onClick={e => this.handleEdit(data)}><i className=\"fa fa-pencil-alt\"></i> Edit</button></li>\n                                                        <li><button type=\"button\" className=\"btn btn-tbl btn-popup\" title=\"Delete\" onClick={e => this.delete(e, data)}><i className=\"fa fa-trash-alt\"></i> Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"tab-option-container\">\n                                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                                        </div>\n                                    </div>\n                                </li>\n                            })}\n                        </ul>}\n\n                </div>\n            </div>\n            <div className=\"promize-footer-actions\">\n                <NavLink to=\"/products\" className=\"btn btn-promize-secondary\">{\"Cancel\"}</NavLink>\n                <SubmitButton className=\"btn btn-promize-primary\" text={\"Next\"} response={this.props.product} />\n            </div>\n            {this.addView()}\n        </form>\n        {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup} />}\n        </>\n\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload,\n    };\n}\n\nexport default connect(mapStateToProps)(Forms);","import _ from 'lodash';\nclass FabricFunction{\n    static getInstance(canvas) {\n        return new FabricFunction(canvas);\n    }\n    /**\n     * Create Fabric Function\n     * \n     * @param {Fabric Canvas | Object} canvas Fabric js canvas\n     */\n    constructor(canvas){\n        this.canvas = canvas\n    }\n    setCanvas(canvas){\n        this.canvas = canvas \n    }\n    /**\n     * find the Object from the fabric canvas using the object name\n     * @param {string} name the object name\n     */\n    findByName(name){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['name', name]);\n        }\n    }\n    /**\n     * find the Object from the fabric canvas using the object id\n     * @param {string | number} id the object id\n     */\n    findById(id){\n        let {canvas} = this\n        if(canvas && canvas._objects){\n           return _.find(canvas._objects, ['id', id]);\n        }\n    }\n}\n\nexport default FabricFunction;","/**\n * Todo:\n *  - Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport toastr from 'toastr'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetOptionPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let optionView = {};\n        let optionViewPosition = {};\n        let modelImage = this.props.state.fields.model_image\n        let tabAttributeValueData = this.props.setOptionPosition.data.tabAttributeValueData\n        modelImage.map((data, index) => {\n            optionView[data.id] = \"\";\n            optionViewPosition[data.id] = \"\";\n        });\n        if (tabAttributeValueData.option_images && typeof tabAttributeValueData.option_images == \"string\") {\n            optionView = JSON.parse(tabAttributeValueData.option_images)\n        }\n        if (tabAttributeValueData.option_position && typeof tabAttributeValueData.option_position == \"string\") {\n            optionViewPosition = JSON.parse(tabAttributeValueData.option_position)\n        }\n\n        this.state.optionView = optionView\n        this.state.optionViewPosition = optionViewPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addOptionImage = this.addOptionImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, optionView, optionViewPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"optionImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (optionView[modelId]) {\n                    let option_images = this.props.setOptionPosition.data.data.option_images\n                    let image = option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id })\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            })\n        })\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addOptionImage(data) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"optionImage\")) {\n            toastr.warning(\"Option Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + data.image_url\n            let { optionView, optionViewPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = data.promize_images_id\n            optionViewPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = optionViewPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"optionImage\",\n                    name: \"optionImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the option image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setOptionImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"optionImage\",\n                name: \"optionImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, optionViewPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, optionViewPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"optionImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"optionImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, optionViewPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        optionViewPosition[index] = {\n            ...optionViewPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { optionView, optionViewPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                var option_images = this.props.setOptionPosition.data.data.promize_images ?this.props.setOptionPosition.data.data.promize_images :  this.props.setOptionPosition.data.optionData.option_images;\n                if (optionView[modelId]) {\n                   let image = option_images ? option_images.find((ele) => { return optionView[modelId] == ele.promize_images_id }) : {}\n                    let position = optionViewPosition[modelId] || \"\"\n                    this.setOptionImage(app.APP_IMAGE_BASE_URL + image.image_url, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { optionView, optionViewPosition } = this.state\n        this.props.updateTabAttributeValues({\n            promize_tab_attribute_values_id: this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_values_id,\n            promize_tab_attribute_id : this.props.setOptionPosition.data.tabAttributeValueData.promize_tab_attribute_id,\n            option_images: JSON.stringify(optionView),\n            option_position: JSON.stringify(optionViewPosition)\n        })\n        toastr.success(\"Option Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, optionView, optionViewPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            optionView[currnetModelImage.id] = \"\"\n            optionViewPosition[currnetModelImage.id] = \"\"\n            this.setState({ optionView, optionViewPosition, fields: \"\" })\n            toastr.success(\"The option image is removed\")\n            canvas.remove(optionImageObj)\n        }\n    }\n    /**\n     * Image Collection Section\n     */\n    imageCollection() {\n        let { optionView } = this.state\n        let optionViewImageId = Object.values(optionView)\n        return <div className=\"promize-image-collection\">\n            <div className=\"promize-img-coll df\">\n                <div className=\"promize-img-coll-detail wd-30\">\n                    <div className=\"promize-img-coll-title mb-10\">Image Collection</div>\n                    <div className=\"promize-img-coll-subtitle\">Some sample information about the sample images in followed detailed description,Some sample information about the sample images in followed detailed description.</div>\n                </div>\n                <div className=\"promize-coll-images-section df df-flow wd-70\">\n                    {this.props.setOptionPosition.data.data.promize_images && this.props.setOptionPosition.data.data.option_images.map((data, index) => {\n                        let active = (optionViewImageId.indexOf(data.promize_images_id) != -1 ? true : false)\n                        return <div className={\"promize-coll-images-items \" + (active ? \"disabled\" : \"\")} key={index} onClick={(e) => { active ? e.preventDefault() : this.addOptionImage(data) }}>\n                            <img src={app.APP_IMAGE_BASE_URL + data.image_url} />\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>Delete</button>\n        }\n        return '';\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Option Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <button className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></button>\n                                        <button className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></button>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    {this.props.setOptionPosition.data.data && this.imageCollection()}\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default SetOptionPosition;\n","/**\n * Todo:\n *  -  Need to merge the set Option Opition and set Tab option file common\n * \n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\nimport ImageUpload from './../files/ImageUpload'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetTabPosition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance(\"\")\n        }\n        let modelImage = this.props.state.fields.model_image\n        let tabData = this.props.setTabPosition.data.tabData\n        let tabImages = {}\n        let tabImagesPosition = {}\n        modelImage.map((data, index) => {\n            tabImages[data.id] = \"\";\n            tabImagesPosition[data.id] = \"\";\n        });\n        if (tabData.tab_images) {\n            tabImages = JSON.parse(tabData.tab_images)\n        }\n        if (tabData.tab_images_position) {\n            tabImagesPosition = JSON.parse(tabData.tab_images_position)\n        }\n\n        this.state.tabImages = tabImages\n        this.state.tabImagesPosition = tabImagesPosition\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.addBaseImage = this.addBaseImage.bind(this)\n        this.addTabImage = this.addTabImage.bind(this)\n        this.positionChangeCallback = this.positionChangeCallback.bind(this)\n    }\n    componentWillReceiveProps(props) {\n        if (!props.imageUpload.isFetching && !props.imageUpload.isError && this.props.imageUpload.isFetching !== props.imageUpload.isFetching) {\n            this.handleTabImage(props);\n        }\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, tabImages, tabImagesPosition, fabricFunction } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                positionChangeCallback(e.target)\n            }\n        });\n        canvas.on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"tabImage\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            this.addBaseImage(baseImage, () => {\n                let modelId = modelImage[currentView].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            })\n        })\n    }\n    handleTabImage(props) {\n        if (props.imageUpload && props.imageUpload.response) {\n            this.addTabImage(props.imageUpload.response.file.path)\n        }\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    addTabImage(image) {\n        let { fabricFunction } = this.state\n        if (fabricFunction.findByName(\"tabImage\")) {\n            toastr.warning(\"Tab Image Aleardy added to this view\")\n        } else {\n            let uploadedImage = app.APP_IMAGE_BASE_URL + image\n            let { tabImages, tabImagesPosition, currentView, position, controlPoints, canvas } = this.state\n            let modelImage = this.props.state.fields.model_image\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = image\n            tabImagesPosition[currnetModelImage.id] = position\n            let { scaleX, scaleY } = tabImagesPosition[currnetModelImage.id]\n            fabric.Image.fromURL(uploadedImage, function (uploadedImageObject) {\n                uploadedImageObject.set({\n                    ...controlPoints,\n                    left: canvas.width / 2,\n                    top: canvas.height / 2,\n                    scaleX,\n                    scaleY,\n                    productimizeType: \"tabImage\",\n                    name: \"tabImage\",\n                    originX: \"center\",\n                    originY: \"center\",\n                    lockUniScaling: false,\n                    opacity: 0\n                });\n                canvas.add(uploadedImageObject);\n                canvas.renderAll()\n            });\n        }\n    }\n    /**\n     * set the Tab image\n     * @param {image_url} image option image url\n     * @param {object} position option image position \n     */\n    setTabImage(image, position) {\n        let { canvas, controlPoints } = this.state\n        fabric.Image.fromURL(image, function (uploadedImageObject) {\n            uploadedImageObject.set({\n                ...controlPoints,\n                ...position,\n                productimizeType: \"tabImage\",\n                name: \"tabImage\",\n                originX: \"center\",\n                originY: \"center\",\n            });\n            canvas.add(uploadedImageObject);\n            canvas.renderAll()\n        });\n    }\n    /**\n     * call back front the fabric when scale or move the object\n     * @param {FabricObject} obj \n     */\n    positionChangeCallback(obj) {\n        let { fields, tabImagesPosition, currentView } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            left: obj.left,\n            top: obj.top,\n            scaleX: obj.scaleX,\n            scaleY: obj.scaleY,\n            angle: obj.angle,\n            width: obj.width,\n            height: obj.height,\n            lockUniScaling: obj.lockUniScaling\n        }\n        let boundReact = obj.getBoundingRect()\n        this.setState({\n            fields: {\n                ...fields,\n                x: obj.left - (boundReact.width / 2),\n                y: obj.top - (boundReact.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                angle: obj.angle,\n                scaleX: obj.scaleX,\n                scaleY: obj.scaleY\n            }, tabImagesPosition\n        })\n    }\n    /**\n     * lock the Non uniq scaling\n     */\n    lockScaling() {\n        let { fields } = this.state\n        this.setState({ fields: { ...fields, lockScaling: !fields.lockScaling } }, () => {\n            let { canvas, fabricFunction, fields } = this.state\n            let obj = fabricFunction.findByName(\"tabImage\")\n            obj.set({ lockUniScaling: fields.lockScaling })\n            canvas.renderAll()\n        })\n    }\n    /**\n     * Handle the Range input change\n     * @param {String} name Name for the field\n     * @param {String | Number} value Value of the field\n     * @param {boolean} complete Is the slide complete or note\n     */\n    handleInputRangeChange(name, value, complete) {\n        let trigger = false\n        if (complete) {\n            trigger = true\n        }\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let angle;\n        if (name == \"angle\") {\n            angle = (value !== '') ? parseInt(value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object, trigger)\n            this.setState({ fields: { ...fields } })\n        }\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange(event) {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"tabImage\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'x_position') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                x: xpos\n            }\n            let left = xpos + (object.getBoundingRect().width / 2)\n            this.changeCanvasData({ left }, object)\n        } else if ((event.target.id === 'y_position')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                y: ypos\n            }\n            let top = ypos + (object.getBoundingRect().height / 2)\n            this.changeCanvasData({ top }, object)\n        } else if ((event.target.id === 'width')) {\n            let actualWidth = object.width;\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleX = width / actualWidth\n            height = fields.height\n            scaleY = fields.scaleY\n            let ratio = scaleX / fields.scaleX\n            if (fields.lockScaling) {\n                height = fields.height * ratio\n                scaleY = fields.scaleY * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'height')) {\n            let actualHeight = object.height;\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            scaleY = height / actualHeight\n            width = fields.width\n            scaleX = fields.scaleX\n            let ratio = scaleY / fields.scaleY\n            if (fields.lockScaling) {\n                width = fields.width * ratio\n                scaleX = fields.scaleX * ratio\n            }\n            fields = {\n                ...fields,\n                width,\n                height,\n                scaleX,\n                scaleY\n            }\n            this.changeCanvasData({ scaleX, scaleY }, object)\n        } else if ((event.target.id === 'angle')) {\n            angle = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                angle: angle\n            }\n            this.changeCanvasData({ angle }, object)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let { currentView, tabImagesPosition, canvas } = this.state\n        let index = this.props.state.fields.model_image[currentView].id\n        tabImagesPosition[index] = {\n            ...tabImagesPosition[index],\n            ...data\n        }\n        object.animate(data, {\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: function () {\n                if (trigger) {\n                    canvas.trigger('object:modified', { target: object })\n                }\n            }\n        })\n        object.setCoords();\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView(index) {\n        this.setState({ currentView: index, fields: '' }, () => {\n            let { tabImages, tabImagesPosition } = this.state\n            let modelImage = this.props.state.fields.model_image\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n            this.addBaseImage(baseImage, () => {\n                var modelId = modelImage[index].id\n                if (tabImages[modelId]) {\n                    let image = tabImages[modelId]\n                    let position = tabImagesPosition[modelId] || \"\"\n                    this.setTabImage(app.APP_IMAGE_BASE_URL + image, position)\n                }\n            });\n\n        })\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e) {\n        let { tabImages, tabImagesPosition } = this.state\n        this.props.updateTabImages({\n            promize_tab_id: this.props.setTabPosition.data.tabData.promize_tab_id,\n            tab_images: JSON.stringify(tabImages),\n            tab_images_position: JSON.stringify(tabImagesPosition)\n        })\n        toastr.success(\"Tab Image Positions Updated\")\n        this.props.closePopup(e)\n    }\n    delete(e) {\n        e.preventDefault()\n        let { fabricFunction, tabImages, tabImagesPosition, currentView, canvas, fields } = this.state\n        let modelImage = this.props.state.fields.model_image\n        let tabImageObj = fabricFunction.findByName(\"tabImage\")\n        if (tabImageObj) {\n            let currnetModelImage = modelImage[currentView]\n            tabImages[currnetModelImage.id] = \"\"\n            tabImagesPosition[currnetModelImage.id] = \"\"\n            this.setState({ tabImages, tabImagesPosition, fields: \"\" })\n            toastr.success(\"The tab image is removed\")\n            canvas.remove(tabImageObj)\n        }\n    }\n    /**\n     * View Thmubnail Section\n     */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"tabImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-secondary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'x_position'}\n                    value={fields.x || 0}\n                    labelName={\"X position\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'y_position'}\n                    value={fields.y || 0}\n                    labelName={\"Y position\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n                <Input {...this.props}\n                    fieldName={'angle'}\n                    value={fields.angle || 0}\n                    labelName={\"Angle\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n                <InputRange\n                    maxValue={180}\n                    minValue={-180}\n                    disabled={fields ? false : true}\n                    value={fields.angle || 0}\n                    onChange={value => this.handleInputRangeChange('angle', value)}\n                    onChangeComplete={value => this.handleInputRangeChange('angle', value, true)} />\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div>\n            </div>\n        </React.Fragment>\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Tab Position</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"promize-stp-options\">\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                    <div className=\"df-js-center mt-20\">\n                        <div className=\"wd-25\">\n                            <div className=\"upload-image\">\n                                <ImageUpload\n                                    {...this.props}\n                                    form={this.props.imageForm}\n                                    labelName={\"Tab image\"}\n                                    fieldName={'tab_file'}\n                                    dataName={'tab_file'}\n                                    validation={false}\n                                    value={\"\"}\n                                    image_url={\"\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        imageUpload: state.imageUpload\n    };\n}\n\n\nexport default connect(mapStateToProps)(SetTabPosition);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Input from './input';\nimport { fabric } from 'fabric';\nimport FabricFunction from '../productimize/FabricFunction'\nimport { app } from \"../../config/app\"\nimport 'react-input-range/lib/css/index.css'\nimport toastr from 'toastr'\n\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\nclass SetBoundary extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            position: {\n                left: 0,\n                top: 0,\n                width: 10,\n                height: 10,\n                scaleX: 1,\n                scaleY: 1,\n                angle: 0\n            },\n            fields: '',\n            controlPoints: {\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasControls: true,\n                padding: \"3\",\n                selectable: true,\n                hasRotatingPoint: false\n            },\n            currentView: 0,\n            canvas: {},\n            fabricFunction: FabricFunction.getInstance('')\n        }\n        let boundaryposition = {};\n        let modelImage = this.props.state.fields.model_image;\n        modelImage.map((data, index) => {\n            boundaryposition[data.id] = \"\";\n        });\n        if (this.props.setBoundary.data.tab_attribute.boundary_position && typeof this.props.setBoundary.data.tab_attribute.boundary_position == \"string\") {\n            boundaryposition = JSON.parse(this.props.setBoundary.data.tab_attribute.boundary_position)\n        }\n        this.state.boundaryposition = boundaryposition\n\n    }\n    componentDidMount() {\n        let modelImage = this.props.state.fields.model_image\n        let { currentView, fabricFunction, boundaryposition } = this.state\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n        let canvas = new fabric.Canvas('canvas', {\n            selection: false,\n            controlsAboveOverlay: true,\n            centeredScaling: true,\n            allowTouchScrolling: true\n        });\n        let positionChangeCallback = this.positionChangeCallback\n        canvas.on('object:moving', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:modified', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:scaling', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                positionChangeCallback(e.target)\n            }\n        }).on('object:added', function (e) {\n            if (e.target.productimizeType && e.target.productimizeType == \"boundary\") {\n                e.target.animate(\"opacity\", 1, {\n                    onChange: canvas.renderAll.bind(canvas)\n                })\n                positionChangeCallback(e.target)\n            }\n        });\n        fabricFunction.setCanvas(canvas)\n        this.setState({\n            canvas: canvas,\n            fabricFunction: fabricFunction\n        }, () => {\n            let index = modelImage[currentView].id;\n            let position = boundaryposition[index];\n            var baseImage = app.APP_IMAGE_BASE_URL + modelImage[currentView].image_url;\n            this.addBaseImage(baseImage, () => { this.addBoundary(baseImage, position) })\n        })\n    }\n    /**\n    * call back front the fabric when scale or move the object\n    * @param {FabricObject} obj \n    */\n    positionChangeCallback = obj => {\n        let { fields, fabricFunction, currentView, canvas, boundaryposition } = this.state\n        let index = this.props.state.fields.model_image[currentView].id;\n        fields = {\n            ...fields,\n            left: obj.left,\n            top: obj.top,\n            width: obj.getScaledWidth(),\n            height: obj.getScaledHeight(),\n        }\n        boundaryposition[index] = JSON.stringify(fields)\n        let overlay = fabricFunction.findByName(\"overlay\");\n        if (overlay) {\n            var clipRect = new fabric.Rect({\n                left: obj.left - (overlay.width / 2),\n                top: obj.top - (overlay.height / 2),\n                width: obj.getScaledWidth(),\n                height: obj.getScaledHeight(),\n                fill: '',\n            });\n            overlay.set(\"clipPath\", clipRect)\n            canvas.renderAll()\n            this.setState({fields, boundaryposition})\n        }\n    }\n    addBoundary(baseImage, position) {\n        const canvas = this.state.canvas\n        let tempObj = position ? JSON.parse(position) : { left: (canvas.width - 100) / 2, top: (canvas.height - 100) / 2, width: 100, height: 100}\n        var rect = new fabric.Rect({\n            left: 0,\n            top: 0,\n            width: canvas.width,\n            height: canvas.height,\n            fill: '#777',\n            selectable: false,\n            opacity: 0.7\n        });\n        canvas.add(rect);\n        this.addOverlayImage(baseImage, () => {\n            var rectRed = new fabric.Rect({          \n                ...tempObj,\n                fill: '',\n                imageWidth: canvas.width,\n                imageHeight: canvas.height,\n                cornerSize: 12,\n                hasControls: true,\n                borderColor: '#0032cc',\n                cornerColor: '#06f',\n                cornerStyle: \"circle\",\n                transparentCorners: false,\n                hasRotatingPoint: false,\n                productimizeType: 'boundary',\n                name: \"boundaryCtrl\"\n            });\n            canvas.add(rectRed);\n            canvas.renderAll()\n        })\n    }\n    addOverlayImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            var clipRect = new fabric.Rect({\n                left: -50,\n                top: -50,\n                width: 100,\n                height: 100,\n                fill: ''\n            });\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n                clipPath: clipRect,\n                selectable: false,\n                name: \"overlay\"\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n     * add Base Image to canvas\n     * @param {object} baseImage \n     * @param {string} callBack \n     */\n    addBaseImage(baseImage, callBack) {\n        let canvas = this.state.canvas\n        canvas.clear()\n        fabric.Image.fromURL(baseImage, function (baseImageObject) {\n            baseImageObject.set({ selectable: false })\n            canvas.setHeight(baseImageObject.height);\n            canvas.setWidth(baseImageObject.width);\n            baseImageObject.set({\n                originX: \"center\",\n                originY: \"center\",\n                left: baseImageObject.width / 2,\n                top: baseImageObject.height / 2,\n            })\n            canvas.add(baseImageObject);\n            canvas.renderAll()\n            if (typeof callBack === \"function\") {\n                callBack()\n            }\n        });\n    }\n    /**\n    * View Thmubnail Section\n    */\n    thumbnail() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-opt-thumb text-center\">\n            {modelImage.length > 0 && <div>\n                <ul>\n                    {modelImage.map((data, index) => {\n                        return <li key={index} onClick={e => this.changeView(index)} className={\"thumb-itm \" + (index == currentView ? \"current-item\" : \"\")}>\n                            <img src={app.APP_IMAGE_BASE_URL + modelImage[index].image_url} />\n                            <p>{modelImage[index].view_name}</p>\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </div>\n    }\n    /**\n     * change the view\n     * @param {Number} index \n     */\n    changeView = index => {\n        let { boundaryposition, fields } = this.state\n        let modelImage = this.props.state.fields.model_image;\n        var modelId = modelImage[index].id;\n        let position = boundaryposition[modelId];\n        var baseImage = app.APP_IMAGE_BASE_URL + modelImage[index].image_url;\n        this.setState({ currentView: index, fields: '' }, () => {       \n            this.addBaseImage(baseImage, () => { \n                this.addBoundary(baseImage, position) \n            })\n        })\n    }\n    /**\n     * change the canvas values \n     * @param {object} data data to be changed\n     * @param {Fabric Canvas | object} object \n     * @param {Boolean} trigger trigger the modified event\n     */\n    changeCanvasData(data, object, trigger) {\n        let {canvas, boundaryposition, currentView } = this.state;\n        let index = this.props.state.fields.model_image[currentView].id\n        boundaryposition[index] = {\n            ...boundaryposition[index],\n            ...data\n        }\n        object.set(data)\n        canvas.trigger('object:modified', { target: object })\n        object.setCoords();\n    }\n    /**\n     * Handle the Input Change\n     * @param {HtmlEvent | object} event \n     */\n    handleInputChange = event => {\n        let { fabricFunction, fields } = this.state\n        let object = fabricFunction.findByName(\"boundaryCtrl\");\n        let xpos, ypos, scaleX, scaleY, width, height, angle;\n        if (event.target.id === 'left') {\n            xpos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                left: xpos\n            }\n            let left = xpos\n            this.changeCanvasData({ left }, object,true)\n        } else if ((event.target.id === 'top')) {\n            ypos = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                top: ypos\n            }\n            let top = ypos \n            this.changeCanvasData({ top }, object,true)\n        } else if ((event.target.id === 'width')) {\n            width = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                width: width\n            }\n            this.changeCanvasData({ width }, object,true)\n        } else if ((event.target.id === 'height')) {\n            height = (event.target.value !== '') ? parseInt(event.target.value) : 0\n            fields = {\n                ...fields,\n                height: height\n            }\n            this.changeCanvasData({ height }, object,true)\n        }\n        this.setState({ fields: { ...fields } })\n    }\n    /**\n     * Canvas Control Link X position, Y Position.....\n     */\n    canvasControls() {\n        let { fields } = this.state\n        return <React.Fragment>\n            <div className=\"promize-canvas-xy\">\n                <Input {...this.props}\n                    fieldName={'left'}\n                    value={fields.left || 0}\n                    labelName={\"Left\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'top'}\n                    value={fields.top || 0}\n                    labelName={\"Top\"}\n                    validation={false}\n                    disabled={fields ? false : true}\n                    inputType=\"number\"\n                    onChange={this.handleInputChange}\n                />\n            </div>\n            <div>\n\n            </div>\n            <div className=\"promize-canvas-hw\">\n                <Input {...this.props}\n                    fieldName={'width'}\n                    value={fields.width || 0}\n                    labelName={\"Width\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                <Input {...this.props}\n                    fieldName={'height'}\n                    value={fields.height || 0}\n                    labelName={\"Height\"}\n                    validation={false}\n                    inputType=\"number\"\n                    disabled={fields ? false : true}\n                    onChange={this.handleInputChange}\n                />\n                {/* <div className=\"prop-lock-hw\"><button className={\"btn-prop-lock \" + (fields.lockScaling ? \"locked\" : \"\")} onClick={e => this.lockScaling()}><i className=\"fa fa-link\"></i></button></div> */}\n            </div>\n        </React.Fragment>\n    }\n    deleteButton() {\n        let { fabricFunction } = this.state\n        let optionImageObj = fabricFunction.findByName(\"optionImage\")\n        if (optionImageObj) {\n            return <button className=\"btn btn-promize-primary\" onClick={(e) => this.delete(e)}>delete</button>\n        }\n        return '';\n    }\n    /**\n     * next View\n     */\n    nextView() {\n        let { currentView } = this.state\n        currentView = currentView + 1;\n        this.changeView(currentView)\n    }\n    /**\n     * previous View\n     */\n    prevView() {\n        let { currentView } = this.state\n        currentView = currentView - 1;\n        this.changeView(currentView)\n    }\n    /**\n     * Submit Event\n     * @param {HtmlEvent | Object} e \n     */\n    submit(e){ \n        let {fields, boundaryposition} = this.state;\n        if(this.props.setBoundary.data.type == 'text'){\n            this.props.updateTabAttributeValues({\n                promize_tab_text_attribute_values_id: this.props.setBoundary.data.tab_attribute.promize_tab_text_attribute_values_id,\n                boundary_position: JSON.stringify(boundaryposition),\n                modelName:\"promize_tab_text_attribute_values\",\n                idKey:\"promize_tab_text_attribute_values_id\"\n            }, \"text\")\n        }else if(this.props.setBoundary.data.type == 'image'){\n            this.props.updateTabAttributeValues({\n                promize_tab_image_attribute_values_id: this.props.setBoundary.data.tab_attribute.promize_tab_image_attribute_values_id,\n                boundary_position: JSON.stringify(boundaryposition),\n                modelName:\"promize_tab_image_attribute_values\",\n                idKey:\"promize_tab_image_attribute_values_id\"\n            }, \"text\")\n        }else if(this.props.setBoundary.data.type == 'clipart'){\n            this.props.updateTabAttributeValues({\n                promize_tab_clipart_attribute_values_id: this.props.setBoundary.data.tab_attribute.promize_tab_clipart_attribute_values_id,\n                boundary_position: JSON.stringify(boundaryposition),\n                modelName:\"promize_tab_clipart_attribute_values\",\n                idKey:\"promize_tab_clipart_attribute_values_id\"\n            }, \"text\")\n        }\n        toastr.success(\"Boundary / Default View Updated Successfully\")\n        this.props.closePopup(e)\n    }\n    render() {\n        let { currentView } = this.state\n        let modelImage = this.props.state.fields.model_image\n        return <div className=\"promize-modal-cover-set-postion\">\n            <div className=\"promize-modal modal-lg\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>Boundary / Default View</span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-view-container\">\n                        {this.thumbnail()}\n                        <div className=\"promize-option-container\">\n                            <canvas id='canvas'></canvas>\n                            <div className=\"promize-set-position df df-sp-around mt-20\">\n                                {this.canvasControls()}\n                                {this.props.state.fields.model_image.length > 1 &&\n                                    <React.Fragment>\n                                        <div className={\"promize-slide-icon promize-canvas-prev-btn \" + (currentView <= 0 ? 'disabled' : '')} onClick={e => { currentView <= 0 ? e.preventDefault() : this.prevView() }}><i className=\"fa fa-angle-left\"></i></div>\n                                        <div className={\"promize-slide-icon promize-canvas-next-btn \" + (currentView >= modelImage.length - 1 ? 'disabled' : '')} onClick={e => { currentView >= modelImage.length ? e.preventDefault() : this.nextView() }}><i className=\"fa fa-angle-right\"></i></div>\n                                    </React.Fragment>\n                                }\n                            </div>\n                        </div>\n                        <div>\n                            {this.deleteButton()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.props.closePopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => this.submit(e)}>Submit</button>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default SetBoundary;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport Switchtoggle from '../../../components/form/switchtoggle';\nimport { SimpleSelect } from '../../../components/form/SimpleSelect';\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n    render() {\n        let promize_attribute_values = this.props.promize_attribute_values\n        let tab_attribute_values = this.props.tab_attribute_values ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-cube\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i> <span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\"> <table className=\"promize-table table-options table-action\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Code</th>\n                                            <th>Image</th>\n                                            <th>Thumbnail</th>\n                                            <th>SKU</th>\n                                            <th>Price ($)</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                       {tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                            let tabAttributeValueData = tab_attribute_values[key]\n                                            let data = promize_attribute_values.find((obj) => { return obj.promize_attribute_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                            data.option_images = [];\n                                            data.promize_images.map((img_data, index) => {\n                                                if (img_data.image_type == \"option_thubnail_image\") {\n                                                } else {\n                                                    data.option_images.push(img_data)\n                                                }\n                                            })\n                                         \n                                            return <tr key={index}>\n                                                <td>{data.option_name ? data.option_name : '-'}</td>\n                                                <td>{data.option_code ? data.option_code : '-'}</td>\n                                                <td><div className=\"promize-tbl-mi-cvr\"><ul className=\"promize-milist\">\n                                                    {(data.promize_images.length > 0) && data.promize_images.map((img_data, index) => {\n                                                        if (img_data.image_type == 'option_thubnail_image') {\n                                                            return '';\n                                                        }\n                                                        return <li key={index}>\n                                                            {img_data.image_url && <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img\" alt={\" \"} />}\n                                                        </li>\n                                                    })}\n                                                    {!(data.promize_images.length > 0) && <li>{\"-\"}</li>}\n                                                </ul></div></td>\n                                                <td><div className=\"promize-tbl-mi-cvr\">\n                                                {data.promize_images.map((img_data, index) => {\n                                                    if (img_data.image_type == \"option_thubnail_image\") {\n                                                        if(img_data.image_url){ return  <img src={app.APP_IMAGE_BASE_URL + img_data.image_url} className=\"promize-tbl-img-sm\" alt={\" \"} />}\n                                                        else{\n                                                            return <div>{\"-\"}</div>\n                                                        }\n                                                    }\n                                                })}\n                                                </div>\n                                                </td>\n                                                <td>{data.option_sku ? data.option_sku : '-'}</td>\n                                                <td>{data.option_price ? data.option_price : '-'}</td>\n                                                <td>\n                                                {/* <button class=\"btn btn-tbl\"><i class=\"fa fa-pencil-alt\"></i><span class=\"promize-btn-description\">Edit</span></button> */}\n                                                <button class=\"btn btn-tbl\" onClick={(e) => { this.props.openSetOptionPositionPopup(e, { tabAttributeValueData, data }) }}><i class=\"far fa-object-group\"></i><span class=\"promize-btn-description\">Option Position</span></button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table></div>}\n        </>\n    }\n}\n\n\nexport default Options;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { app } from \"../../../config/app\"\nimport { getAllCliparts, get } from '../../../actions/cliparts';\nimport noData from '../../../assets/images/no-data.png';\nimport _ from 'lodash'\nclass Cliparts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clipartList: {},\n            toggle: false\n        }\n        this.getAssociatedClipart = this.getAssociatedClipart.bind(this)\n    }\n    componentWillMount() {\n        this.getAssociatedClipart();\n    }\n    getAssociatedClipart(id) {\n        this.props.promize_attribute_clipart_values.length > 0 && this.props.promize_attribute_clipart_values.map((data, index) => {\n            let id = data.promize_domain_clipart_category_id.split(',');\n            id.map((id, index) => {\n                this.props.dispatch(get(id));\n            })\n        })\n\n    }\n    componentWillReceiveProps(props) {\n        if (!props.clipart.isFetching && !props.clipart.isError) {\n            let clipart = props.clipart.response.data, clipartList = this.state.clipartList;\n            clipartList[clipart.promize_domain_clipart_category_id] = clipart\n            this.setState({ clipartList: clipartList });\n        }\n    }\n    render() {\n        let promize_attribute_clipart_values = this.props.promize_attribute_clipart_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values\n        let clipartList = this.state.clipartList;\n        let data = this.props.tab_clipart_values;\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-grin-hearts\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { type: \"clipart\", tab_attribute_values : tab_attribute_values, tab_attribute: data ? data[0] : [] }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    <ul className=\"promize-clipart-options\">\n                        {\n                            tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                                let tabAttributeValueData = tab_attribute_values[key]\n                                let optionData = tabAttributeValueData.promize_attribute_clipart_values_id ? tabAttributeValueData : promize_attribute_clipart_values.find((obj) => { return obj.promize_attribute_clipart_values_id == tabAttributeValueData.promize_attribute_values_id })\n                                let clip_ids = optionData.promize_domain_clipart_category_id.split(',');\n                                return clip_ids.map((id, index) => {\n                                    let clipart_images = clipartList[id];\n                                    return clipart_images && clipart_images.promize_clipart_category_images.map((data, index) => {\n                                        let clipartImg = data.promize_product_clipart_image\n                                        return <li>\n                                            <div className=\"promize-clipart-thumb\">\n                                                {clipartImg ? <img src={app.APP_IMAGE_BASE_URL + clipartImg} /> : <img src={noData} />}\n                                                <p>{data.clipart_name}</p>\n                                            </div>\n                                        </li>\n                                    })\n                                })\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clipart: state.clipart,\n    };\n}\n\nexport default connect(mapStateToProps)(Cliparts);","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggle: false\n        }\n    }\n\n    render() {\n        let promize_attribute_image_values = this.props.promize_attribute_image_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values;\n        let data = this.props.tab_image_values;\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-images\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e,  { type: \"image\", tab_attribute_values : tab_attribute_values, tab_attribute: data ? data[0] : [] }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                        </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                {\n                    tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                        let tabAttributeValueData = tab_attribute_values[key]\n                        let optionData = tabAttributeValueData.promize_attribute_image_values_id ? tabAttributeValueData : promize_attribute_image_values.find((obj) => { return obj.promize_attribute_image_values_id == tabAttributeValueData.promize_attribute_values_id })\n                        return <div className=\"promize-attribute-options\">\n                            <div><span>{\"Image Name\"}</span><span>{\":\"}</span><span>{optionData.image_name}</span></div>\n                            <div><span>{\"Image Price\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_price?optionData.image_price: '-'}</span></div>\n                            <div><span>{\"Image Sku\"}</span><span>{\":\"}</span><span className=\"promize-badge badge-primary\">{optionData.image_sku ? optionData.image_sku : '-'}</span></div>\n                            <div><span>{\"Image Format\"}</span><span>{\":\"}</span><span>{optionData.image_format}</span></div>\n                            <div><span>{\"Image Max Upload Size\"}</span><span>{\":\"}</span><span>{optionData.max_upload_size}</span></div>\n                            <div><span>{\"Image Min Upload Size\"}</span><span>{\":\"}</span><span>{optionData.min_upload_size}</span></div>\n                        </div>\n                    })\n                }\n            </div>}\n        </>\n    }\n}\n\nexport default Image;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { getAllFonts } from '../../../actions/fontfamily'\nimport { getAllFontSizes } from '../../../actions/fontsize'\nimport { getAllFontColors } from '../../../actions/fontcolor'\nclass Text extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fontSizes: {},\n            fonts: {},\n            fontColors: {},\n            toggle: false\n        }\n    }\n\n    componentWillMount() {\n        this.props.dispatch(getAllFontSizes());\n        this.props.dispatch(getAllFonts());\n        this.props.dispatch(getAllFontColors());\n    }\n\n    componentWillReceiveProps(props) {\n        if (!props.fonts.isFetching && !props.fonts.isError) {\n            let fonts = props.fonts.response.data, fontsList = {};\n            fonts.map((data, index) => {\n                fontsList[data.font_id] = data\n            })\n            this.setState({ fonts: fontsList });\n        }\n        if (!props.fontsizes.isFetching && !props.fontsizes.isError) {\n            let fontsizes = props.fontsizes.response.data, fontsList = {};\n            fontsizes.map((data, index) => {\n                fontsList[data.font_size_id] = data\n            })\n            this.setState({ fontSizes: fontsList });\n        }\n        if (!props.fontcolors.isFetching && !props.fontcolors.isError) {\n            let fontcolors = props.fontcolors.response.data, fontsList = {};\n            fontcolors.map((data, index) => {\n                fontsList[data.promize_font_color_id] = data\n            })\n            this.setState({ fontColors: fontsList });\n        }\n    }\n\n    render() {\n        let { fonts, fontSizes, fontColors } = this.state\n        let promize_attribute_text_values = this.props.promize_attribute_text_values\n        let tab_attribute_values = (this.props.tab_attribute_values && (!_.isEmpty(this.props.tab_attribute_values))) ? this.props.tab_attribute_values : this.props.tab_attribute_data_values;\n        let data = this.props.tab_text_values;\n       // console.log(\"in text\", promize_attribute_text_values, data);\n        return <>\n            <div className=\"promize-widget-header\">\n                <h3 className=\"promize-widget-title\">\n                    <div className=\"promize-widget-sub-title\">\n                        <i className=\"fa fa-font\"></i><span><b>{this.props.attribute_name}</b></span>\n                    </div>\n                </h3>\n                <div className=\"promize-widget-action df\">\n                    <ul className=\"df\">\n                        <li>\n                            <button className=\"btn btn-tbl\" onClick={(e) => { this.props.openSetBoundaryPopup(e, { type: \"text\", tab_attribute_values : tab_attribute_values, tab_attribute: data ? data[0] : [] }) }} title=\"Set Boundary\">\n                                <i className=\"fa fa-crosshairs\"></i><span class=\"promize-btn-description\"> Boundary / Default View</span>\n                            </button>\n                        </li>\n                        <li>\n                            <button className=\"btn btn-tbl\" title=\"Delete\" onClick={(e) => { this.props.deleteAttributeFromTab(e, this.props.promize_attribute_id, this.props.tab_id) }}><i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span></button>\n                        </li>\n                    </ul>\n                </div>\n                {/* <div className=\"promize-widget-drag\">\n                    <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                </div> */}\n                <div className=\"promize-widget-toggle\">\n                    <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                </div>\n            </div>\n            {this.state.toggle && <div className=\"promize-widget-body bg-grey\">\n                <div className=\"promize-tab-option-container\">\n                    {\n                        tab_attribute_values && Object.keys(tab_attribute_values).length > 0 && Object.keys(tab_attribute_values).map((key, index) => {\n                            let tabAttributeValueData = tab_attribute_values[key]\n                            let optionData = tabAttributeValueData.promize_attribute_text_values_id ? tabAttributeValueData : promize_attribute_text_values.find((obj) => { return obj.promize_attribute_text_values_id == tabAttributeValueData.promize_attribute_values_id })\n                            let font_id = optionData.font_ids.split(',');\n                            let font_size_ids = optionData.font_size_ids.split(',')\n                            let font_color_ids = optionData.font_color_ids.split(',')\n                            return (<>\n                                <div className=\"df\">\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fonts).length > 0 && optionData && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font\"}</p><span className=\"promize-text-highlight-aa\">{fonts[optionData.default_font_family].font_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10\">{\"Fonts\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fonts && font_id.map((id, index) => {\n                                                    let font = fonts[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontSizes).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Size\"}</p><span className=\"promize-text-highlight-aa\">{fontSizes[optionData.default_font_size].font_size}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Sizes\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontSizes && font_size_ids.map((id, index) => {\n                                                    let font = fontSizes[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_size}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"wd-33\">\n                                        {Object.keys(fontColors).length > 0 && <div className=\"mb-10\"><p className=\"mb-10\">{\"Default Font Color\"}</p><span className=\"promize-text-highlight-aa\">{fontColors[optionData.default_color].font_color_name}</span></div>}\n                                        <p className=\"promize-options-title mb-10   \">{\"Font Colors\"}</p>\n                                        <ul className=\"promize-text-options\">\n                                            {\n                                                fontColors && font_color_ids.map((id, index) => {\n                                                    let font = fontColors[id];\n                                                    return font && <li className=\"promize-text-highlight-aa\">{font.font_color_name}</li>\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            </>\n                            )\n                        })\n                    }\n                </div>\n            </div>}\n        </>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fonts: state.fonts,\n        fontsizes: state.fontsizes,\n        fontcolors: state.fontcolors,\n    };\n}\n\nexport default connect(mapStateToProps)(Text);","import React from 'react';\n\nclass InputMultple extends React.Component {\n\n\tclassNameCheck() {\n\t\tconst validation = this.props.form.validation(this.props.fieldName)\n\t\tconst message = validation ? this.props.state.inputErrors[this.props.fieldName].message : '';\n\t\tconst classValidation = `form-group ${validation ? 'feild-wrong' : ''} ${this.props.value && !validation ? 'feild-sucess' : ''}`\n\t\tconst className = this.props.validation ? classValidation : 'form-group';\n\t\treturn { 'className': className, 'message': message, 'validation': validation };\n\t}\n\n\tinput() {\n\t\tconst validation = this.classNameCheck();\n\t\treturn (<React.Fragment><div className=\"promize-form-group\">\n\t\t\t<label htmlFor={this.props.fieldName} className=\"promize-form-control-label\">{this.props.labelName}{this.props.validation && <sup>*</sup>}</label>\n\t\t\t<textarea className=\"promize-form-control\"\n\t\t\t\ttype={this.props.inputType ? this.props.inputType : \"text\"}\n\t\t\t\tid={this.props.fieldName}\n\t\t\t\tstep={this.props.inputStep ? this.props.inputStep : \"\"}\n\t\t\t\tdata-type={this.props.dataType || \"text\"}\n\t\t\t\tdata-name={this.props.dataName}\n\t\t\t\tplaceholder={\" \"}\n\t\t\t\tname={this.props.fieldName}\n\t\t\t\tonBlur={this.props.onBlur || this.props.form.blurEventListner}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tonChange={this.props.onChange || this.props.form.handleFieldsChange}\n\t\t\t\tvalue={this.props.value}\n\t\t\t\tdata-validation-name={this.props.labelName}\n\t\t\t\tmaxLength={this.props.maxLength}\n\t\t\t\trows=\"2\" />\n\n\t\t\t{validation['validation'] && <span className=\"promize-form-error\">{`${this.props.labelName} ` + validation['message']}</span>}\n\t\t</div></React.Fragment>);\n\t}\n\n\trender() {\n\n\t\treturn (<React.Fragment>\n\t\t\t{this.input()}\n\t\t</React.Fragment>);\n\t}\n}\n\nexport default InputMultple;\n","import React from 'react'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport RadioButton from '../../components/form/radioButton';\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\nclass Subtab extends React.Component {\n    state = {\n        toggle: false,\n        highlight: false,\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop = (e, sectIndex, tabIndex) => {\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    render() {\n        let {tabData, sectIndex, tabIndex, subTabIndex, parentTabData} = this.props\n        let {highlight} = this.state\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n\n        return <>\n            <div className={\"promize-dragable-tab-container  mb-20\"} draggable onDragStart={e => this.props.onSubTabDragStart(e, tabData, subTabIndex)} onDragOver={e => this.props.onSubTabDragOver(e)} onDrop={e => {this.props.onSubTabDrop(e, subTabIndex, sectIndex, parentTabData.promize_tab_id)}}>\n                <div className=\"promize-widget promize-subtab\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action df\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex, this.props.parentTabData)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                        <button className={\"btn \" + (this.state.toggle ? \"\" : \"toggle\")} onClick={(e) => { this.setState({ toggle: !this.state.toggle }) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {this.state.toggle && <div className={\"promize-widget-body\"}>\n                    <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                            <SimpleSelect\n                                                onChangeHandler={e => this.props.handleFieldBlur(e, 'default_view', tabIndex)}\n                                                data={this.props.productDetails.model_image ? this.props.productDetails.model_image : []}\n                                                optionText=\"view_name\"\n                                                enableEmptyOptionText = {false}\n                                                value={parseInt(tabData.default_view)}\n                                                name=\"default_view\"\n                                                labelName=\"Choose Default View\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        {<div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.tab_attribute && Object.keys(tabData.tab_attribute).length > 0 && Object.keys(tabData.tab_attribute).map((key, index) => {\n                                let tabAttributeData = tabData.tab_attribute[key]\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return <div className=\"promize-widget mb-15\" key={index}>\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_attribute_data_values={tab_attribute_data_values} {...tabAttributeData}  {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} {...this.props} tab_id={tabIndex} />}\n                                </div>\n                            })}\n                        </div>}\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from the <b>Attributes List</b></p>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Subtab","import React, { Component } from 'react'\nimport Options from './Attribute/Options'\nimport Cliparts from './Attribute/Cliparts'\nimport Image from './Attribute/Image'\nimport Text from './Attribute/Text'\nimport Input from '../../components/form/input'\nimport InputMultple from '../../components/form/inputMultple'\nimport Switchtoggle from '../../components/form/switchtoggle'\nimport ImageUpload from '../../components/files/ImageUpload'\nimport SubTab from './subTab'\nimport RadioButton from '../../components/form/radioButton';\nimport { SimpleSelect } from \"../../components/form/SimpleSelect\";\n\n\nclass Tabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hightlight: true,\n            toggle: false,\n            subTabHide: {},\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n    /**\n     * On Drag Over\n     * @param {Event | Object} ev event object from the Drag\n     */\n    onDragOver = ev => {\n      //  ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n        this.setState({ highlight: true })\n    };\n    onDragLeave = ev => {\n        this.setState({ highlight: false })\n    }\n    onDrop(e, sectIndex, tabIndex){\n        this.setState({ highlight: false })\n        this.props.onDrop(e, sectIndex, tabIndex)\n    }\n\n    getTabContent = (tabData, sectIndex, tabIndex, parentTabData, subTabIndex) => {\n        const data = {\n            tabData,\n            sectIndex,\n            tabIndex,\n            parentTabData, \n            subTabIndex\n        }\n        return <SubTab {...this.props} {...data}/>\n    }\n\n    render() {\n        const { highlight } = this.state\n        const displayTab = this.props.state.openTab\n        const tabs = this.props.state.tabs\n        let { tabData, sectIndex, tabIndex, indexVal } = this.props\n        let sorted_sub_tabs = (tabData.promize_sub_tabs && tabData.promize_sub_tabs.length) > 0 ? (tabData.promize_sub_tabs.sort((a, b)=>{\n            return a.sort_id - b.sort_id\n        })) : []\n        let style = tabData.tab_style ? JSON.parse(tabData.tab_style) :{display:1, height:50, width:50}\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <>\n            <div className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onTabDragStart(e, tabData, indexVal)} onDragOver={e => this.props.onTabDragOver(e, indexVal, sectIndex)} onDragLeave ={e=> this.props.onTabDragEnter(e, indexVal, sectIndex)} onDrop={e => {this.props.onTabDrop(e, indexVal, sectIndex)}}>\n                <div className=\"promize-widget\">\n                    <div className=\"promize-widget-header\">\n                        <h3 className=\"promize-widget-title\">\n                            {tabData.tab_name}\n                        </h3>\n                        <div className=\"promize-widget-action\">\n                            <ul className=\"df\">\n                                {this.props.actionButtons(tabData, sectIndex, tabIndex)}\n                            </ul>\n                        </div>\n                        {/* <div className=\"promize-widget-drag\">\n                            <button className=\"btn\"><i className=\"fa fa-bars\"></i></button>\n                        </div> */}\n                        <div className=\"promize-widget-toggle\">\n                            <button className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"btn\" : \"btn toggle\"} onClick={(e) => { this.props.openTab(e, tabIndex, sectIndex) }} ><i className=\"fa fa-angle-down\"></i></button>\n                        </div>\n                    </div>\n                    {<div className={((parseInt(displayTab.tabIndex) == parseInt(tabIndex)) && (parseInt(displayTab.sectIndex) == parseInt(sectIndex)) ) ? \"promize-widget-body db\" : \"promize-widget-body dn\"}>\n                        <div className=\"df df-wrap\">\n                            <div className=\"wd-70\">\n                                <div className=\"df\">\n                                    <div className=\"wd-40\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_name'}\n                                                value={tabData.tab_name}\n                                                labelName={\"Tab Name\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_name', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_name', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class=\"wd-40\">\n                                        <div class=\"mr-15\">\n                                        <SimpleSelect\n                                            onChangeHandler={e => this.props.handleFieldBlur(e, 'default_view', tabIndex)}\n                                            data={this.props.productDetails.model_image ? this.props.productDetails.model_image : []}\n                                            optionText=\"view_name\"\n                                            enableEmptyOptionText = {false}\n                                            value={parseInt(tabData.default_view)}\n                                            name=\"default_view\"\n                                            labelName=\"Choose Default View\"\n                                        />\n                                         \n                                        </div>\n                                    </div>\n                                    <div className=\"wd-20\">\n                                        <div className=\"mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'tab_layer_no'}\n                                                value={tabData.tab_layer_no}\n                                                labelName={\"Tab Layer No\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleFieldBlur(e, 'tab_layer_no', tabIndex)}\n                                                onChange={e => this.props.handleFieldChange(e, 'tab_layer_no', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wd-30\">\n                                <div className=\"df\">\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Tab Required'}\n                                            fieldName={'tab_required'}\n                                            dataName={'tab_required'}\n                                            id={\"tab_required\" + tabIndex}\n                                            value={tabData.tab_required}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'tab_required', tabIndex)}\n                                        />\n                                    </div>\n                                    <div className=\"wd-50\">\n                                        <Switchtoggle {...this.state}\n                                            className=\"toggle-aa\"\n                                            labelName={'Default Tab'}\n                                            fieldName={'is_default_tab'}\n                                            dataName={'is_default_tab'}\n                                            id={\"is_default_tab\" + tabIndex}\n                                            value={tabData.is_default_tab}\n                                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                                            checkValue={{ first: true, second: false }}\n                                            validation={false}\n                                            onChange={e => this.props.handleSwitchChange(e, 'is_default_tab', tabIndex)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"wd-100\">\n                            <div class=\"df\">\n                            <div className=\"wd-70\">\n                                <div className=\"mr-15\">\n                                    <InputMultple {...this.props}\n                                        fieldName={'tab_description'}\n                                        value={tabData.tab_description}\n                                        labelName={\"Tab Description\"}\n                                        validation={false}\n                                        onBlur={e => this.props.handleFieldBlur(e, 'tab_description', tabIndex)}\n                                        onChange={e => this.props.handleFieldChange(e, 'tab_description', tabIndex)}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"mr-15\">\n                                <ImageUpload\n                                    callBack={true}\n                                    setDate={(data) => {\n                                        this.props.setCurrentTab(data)\n                                    }}\n                                    data={tabData.promize_tab_id}\n                                    labelName={\"Tab Thumbnail\"}\n                                    fieldName={'tab_thumbnail'}\n                                    dataName={'tab_thumbnail'}\n                                    form={this.props.tabThumbnailImages}\n                                    validation={false}\n                                    imageType={\"tab_thumbnail\"}\n                                    image_url={tabData.tab_icon}\n                                    value={tabData.tab_icon}\n                                    type={'icon'}\n                                />\n                                </div>   \n                            </div>\n                        </div>\n                        </div> \n                        </div>\n                        <div className=\"wd-100\">\n                            <div className=\"df bg-grey widget-body pd-20\">\n                                <div className=\"\">\n                                    <h3 class=\"promize-widget-title\">Option Display type</h3>\n                                    <p class=\"promize-sub-content mt-5 mb-20\">Enter the tab description for the shirt pockete</p>\n                                    <RadioButton {...this.props}\n                                            labelName={' '}\n                                            fieldName={'tab_style'}\n                                            dataName={'tab_style'}\n                                            value={style.display}\n                                            checkValue={[\n                                                { label: \"Square\", value: 1 },\n                                                { label: \"Circle\", value: 2 },\n                                                { label: \"Radio\", value: 3 },\n                                                { label: \"Checkbox\", value: 4 },\n                                                { label: \"Select\", value: 5 },\n                                                { label:'Input', value:6}\n                                            ]}\n                                            validation={false}\n                                            onChange={this.props.onChangeHandler}\n                                            promize_tab_id = {tabIndex}\n                                    />\n                                    \n                                </div>\n                                <div class=\"promize-display-set\">\n                                    <div class=\"df\">\n                                        <div class=\"wd-50 mr-15\">\n                                            <Input {...this.props}\n                                                fieldName={'height'}\n                                                value={style.height}\n                                                labelName={\"Display Height\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'height', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'height', tabIndex)}\n                                            />\n                                        </div>\n                                        <div class=\"wd-50\">\n                                            <Input {...this.props}\n                                                fieldName={'width'}\n                                                value={style.width}\n                                                labelName={\"Display Width\"}\n                                                validation={false}\n                                                onBlur={e => this.props.handleStyleFieldBlur(e, 'width', tabIndex)}\n                                                onChange={e => this.props.handleStyleFieldChange(e, 'width', tabIndex)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                        <div>\n                            <div className=\"promize-attr-section mt-15\">\n                                <h3 className=\"promize-attr-title\">Attributes</h3>\n                            </div>\n                            {tabData.promize_tab_attributes && Object.keys(tabData.promize_tab_attributes).length > 0 && <> { \n                             (tabData.promize_tab_attributes).map((data, index) => {\n                                let tabAttributeData = tabData.tab_attribute[data.promize_tab_attribute_id]\n                                if (!tabAttributeData) {\n                                    return false\n                                }\n                                let tab_attribute_data_image_values = tabAttributeData.promize_attribute_image_values ? tabAttributeData.promize_attribute_image_values : ''\n                                let tab_attribute_data_text_values = tabAttributeData.promize_attribute_text_values ? tabAttributeData.promize_attribute_text_values : ''\n                                let tab_attribute_data_clipart_values = tabAttributeData.promize_attribute_clipart_values ? tabAttributeData.promize_attribute_clipart_values : ''\n                                let tab_attribute_data_values = tabAttributeData.promize_attribute_values ? tabAttributeData.promize_attribute_values : ''\n                                return   <div key={index} className={\"promize-dragable-tab-container mb-20\"} draggable onDragStart={e => this.props.onAttributeDragStart(e, tabData, (index+1))} onDragOver={e => this.props.onAttributeDragOver(e)} onDrop={e => {this.props.onAttributeDrop(e, (index+1), sectIndex, tabIndex)}}><div className=\"promize-widget mb-15\"  >\n                                    {tabAttributeData.attribute_type == \"option\" && <Options default_option={\"\"} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_values} deleteAttributeFromTab={this.props.deleteAttributeFromTab} {...tabAttributeData}  {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"clipart\" && <Cliparts default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_clipart_values} {...tabAttributeData} tab_clipart_values = {data.promize_tab_clipart_attribute_values} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"text\" && <Text default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_text_values} {...tabAttributeData} tab_text_values = {data.promize_tab_text_attribute_values} {...this.props} />}\n                                    {tabAttributeData.attribute_type == \"image\" && <Image default_option={\"\"} deleteAttributeFromTab={this.props.deleteAttributeFromTab} tab_id={tabIndex} tab_attribute_data_values={tab_attribute_data_image_values} {...tabAttributeData} tab_image_values={data.promize_tab_image_attribute_values} {...this.props} />}\n                                </div></div>\n                            })}</>}\n                        </div>\n                        <div className={\"promize-drop-attr \" + (highlight ? 'promize-highlight' : '')} onDrop ={e => { this.onDrop(e, sectIndex, tabIndex) }} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave}>\n                            <p>Drag and Drop the attribute from <b>Attributes List</b></p>\n                        </div>\n                        {tabData.promize_sub_tabs && tabData.promize_sub_tabs.length > 0 &&\n                            <div className=\"mt-15\">\n                                <div className=\"promize-attr-section\">\n                                    <h3 className=\"promize-attr-title\">Sub Tabs</h3>\n                                </div>\n                                {sorted_sub_tabs.map((subTabData, subTabIndex) => {\n                                    let subTab = tabs[subTabData.child_tab_id]\n                                    return subTab && <div className=\"sub-tab-content\" key={subTabIndex}>{this.getTabContent(subTab, sectIndex, subTabData.child_tab_id,tabData, (subTabIndex+1))}</div>\n                                })\n                                }\n                            </div>}\n                    </div>}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Tabs","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport { getAllAttributes } from '../../actions/attributes';\nimport noData from '../../assets/images/no-data.png';\nimport CheckBox from '../../components/form/CheckBox';\nimport Search from '../../components/form/Search';\nimport {SetOptionPosition, SetTabPosition, SetBoundary} from \"../../components/form\"\nimport {Link} from 'react-router-dom'\nimport Form from '../../utility/Form';\nimport Tabs from './tab.jsx';\nimport { saveSection, saveTab, saveTabAttribute, linkTabAttributeValues,saveTabAttributeValues, saveTabAttributeTextValues, uploadTabImage,uploadTabThumbnailImage,saveSubTab, linkTabAttributeClipartValues, deleteRecord, updateBulkRecord} from '../../actions/products';\nimport Input from '../../components/form/input';\nimport Popup from '../../components/design/Popup'\nexport const sectionvalidation = (props) => {\n    const rules = {\n        \"section_name\": \"required\",\n    }\n    return rules;\n}\n\nclass SectionForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popup: false,\n            editSection:{\n                show: false,\n                data: {}\n            },\n            tab_attribute:{},\n            tab_attribute_values:{},\n            tab:{\n                tab_name:'New Tab',\n                tab_description:'',\n                tab_images:'',\n                tab_images_position:'',\n                tab_layer_no: 0,\n                tab_required: 0,\n                overlay_image:'',\n                overlay_position:'',\n                image_color_settings:'',\n                tab_thumbnail:'',\n                tab_style:JSON.stringify({display:1, height:50, width:50}),\n                sort_id: 0,\n                default_view: 0,\n                is_default_tab: 0,\n                promize_attribute_values:[],\n                tab_attributes:[],\n                default_option: \"\",\n                is_sub_tab : 0,\n                status : 1\n            },\n            selectedTabs: [],\n            selectedSubTabs: [],\n            openTab: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            subTabIndex: {\n                sectIndex: '',\n                tabIndex: ''\n            },\n            setOptionPosition:{\n                show:false,\n                data:{}\n            },\n            setTabPosition: {\n                show:false,\n                data:{}\n            },\n            setBoundary: {\n                show: false,\n                data:{}\n            },\n            currnetTabId: '',\n            searchText: '',\n            activeSectionId: '',\n            highlight:false,\n            parentTabId : ''\n        }\n        this.tabImages = Form.getInstance(\n            this, {},\n             {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.tabThumbnailImages = Form.getInstance(\n            this, {},\n            {},\n            (tabImage)=>{\n                this.props.dispatch(uploadTabThumbnailImage(tabImage, 'tab_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.section = Form.getInstance(\n            this, {},\n            (fields) => {\n                console.log(\"alert\")\n            },\n            {},\n            {}\n        );\n        this.sectionRefs = {}\n        let sections = {}\n        let tabs = {};\n        this.props.productDetails && this.props.productDetails.promize_sections && this.props.productDetails.promize_sections.map((section,index)=>{\n            sections[section.promize_section_id] = {\n                ...section\n            }\n            section.promize_tabs.map((tab,tab_index)=>{\n                tabs[tab.promize_tab_id] = tab\n                tabs[tab.promize_tab_id].tab_attribute = {}\n                tab.promize_tab_attributes.map((attribute, attr_index)=>{\n                    tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attribute.promize_attribute\n                    if(attribute.promize_attribute){\n                        let attributeData = attribute.promize_attribute\n                        if(attribute.promize_tab_attribute_values){\n                            attributeData.tab_attribute_values = {}\n                            attribute.promize_tab_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_attribute_values[tab_attr_value.promize_tab_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_text_attribute_values){\n                            attributeData.tab_text_attribute_values = {}\n                            attribute.promize_tab_text_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_text_attribute_values[tab_attr_value.promize_tab_text_attribute_values_id] = tab_attr_value\n                            })\n                        }else if(attribute.promize_tab_image_attribute_values){\n                            attributeData.tab_image_attribute_values = {}\n                            attribute.promize_tab_image_attribute_values.map((tab_attr_value)=>{\n                                attributeData.tab_image_attribute_values[tab_attr_value.promize_tab_image_attribute_values_id] = tab_attr_value\n                            })\n                        }\n                        tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id] = attributeData\n                        //tabs[tab.promize_tab_id].tab_attribute[attribute.promize_tab_attribute_id].attribute = attributeData\n                    }\n                })\n            })\n        })\n        this.state.sections = sections\n        this.state.tabs = tabs\n        this.onDrop = this.onDrop.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.openSetOptionPositionPopup = this.openSetOptionPositionPopup.bind(this);\n        this.openSetBoundaryPopup = this.openSetBoundaryPopup.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.createTab = this.createTab.bind(this);\n        this.addAttributeToTab = this.addAttributeToTab.bind(this);\n        this.saveSectionToState = this.saveSectionToState.bind(this);\n        this.saveTabToState = this.saveTabToState.bind(this);\n        this.saveTabAttributeToState = this.saveTabAttributeToState.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleSwitchChange = this.handleSwitchChange.bind(this)\n        this.handleFieldBlur = this.handleFieldBlur.bind(this)\n        this.saveTabAttributeValuesList = this.saveTabAttributeValuesList.bind(this)\n        this.updateTabAttributeValues = this.updateTabAttributeValues.bind(this)\n        this.updateTabImages = this.updateTabImages.bind(this)\n        this.setCurrentTab = this.setCurrentTab.bind(this)\n        this.actionButtons = this.actionButtons.bind(this)\n        this.saveTabAttributeValues = this.saveTabAttributeValues.bind(this)\n        this.openTab = this.openTab.bind(this)\n    }\n    setRef = (ref,key) => {\n        this.sectionRefs[key] = ref;\n    };\n     \n    componentWillMount() {\n        this.props.dispatch(getAllAttributes());\n        this.props.new && this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: this.props.state.fields.promize_customizer_name,\n            sort_id:1\n        }))\n    }\n    componentDidMount(){\n        let {sectionContainer,sectionAddBtn} = this.refs;\n        if(sectionContainer && sectionAddBtn){\n            let sectionContainerBoundBox = sectionContainer.getBoundingClientRect()\n            let sectionAddBtnBoundBox = sectionAddBtn.getBoundingClientRect()\n            let sectionWrapperWidth = sectionContainerBoundBox.width - sectionAddBtnBoundBox.width\n            this.setState({sectionWrapperWidth})\n        }\n    }\n    componentWillReceiveProps(newProps){\n        let parentTabId = this.state.parentTabId;\n        if(!newProps.section.isFetching && !newProps.section.isError && this.props.section.isFetching != newProps.section.isFetching){\n            this.saveSectionToState(newProps.section.response.records,newProps.section)\n        }\n        if(newProps.tab && newProps.tab.response !== this.props.tab.response && newProps.tab.method == \"POST\" && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            if(parentTabId){\n                let obj = {\n                    parent_tab_id : parentTabId,\n                    child_tab_id : newProps.tab.response.records.promize_tab_id\n                }\n                this.setState({parentTabId : ''},()=>{\n                    this.props.dispatch(saveSubTab(obj));\n                })\n            }\n            this.saveTabToState(newProps.tab.response.records)\n        } \n        if(newProps.tab && !newProps.tab.isFetching && !newProps.tab.isError && this.props.tab.isFetching != newProps.tab.isFetching){\n            this.saveTabToState(newProps.tab.response.records)\n        }\n        if(newProps.subTab && !newProps.subTab.isFetching && !newProps.subTab.isError && this.props.subTab.isFetching != newProps.subTab.isFetching){\n            this.saveSubTabToState(newProps.subTab.response.records);\n        }\n        if(newProps.tabAttribute && !newProps.tabAttribute.isFetching && !newProps.tabAttribute.isError && this.props.tabAttribute.isFetching != newProps.tabAttribute.isFetching){\n            this.saveTabAttributeToState(newProps.tabAttribute.response.records);\n        }\n        if(newProps.tabAttributevalueslist && !newProps.tabAttributevalueslist.isFetching && !newProps.tabAttributevalueslist.isError && this.props.tabAttributevalueslist.isFetching != newProps.tabAttributevalueslist.isFetching){\n            this.saveTabAttributeValuesList(newProps.tabAttributevalueslist.response.records)\n        }\n        if(newProps.tabAttributevalues && !newProps.tabAttributevalues.isFetching && !newProps.tabAttributevalues.isError && this.props.tabAttributevalues.isFetching != newProps.tabAttributevalues.isFetching){\n            this.saveTabAttributeValues(newProps.tabAttributevalues.response.records)\n        }if(newProps.tabThumbnailImage && !newProps.tabThumbnailImage.isFetching && !newProps.tabThumbnailImage.isError && this.props.tabThumbnailImage.isFetching != newProps.tabThumbnailImage.isFetching){\n            this.saveTabImage(newProps.tabThumbnailImage.response.file)\n        }\n    }\n    /**\n     * Save Section Data to the state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSectionToState(data,sectionData){\n        let {sections} = this.state;\n        if(data){\n            let sectionsData = sections[data.promize_section_id] || {};\n            sections[data.promize_section_id] = {\n                ...sectionsData,\n                ...data\n            }\n        }\n        this.setState({sections,activeSectionId:data.promize_section_id},()=>{\n            sectionData.method && sectionData.method == \"POST\" && this.createTab({},data.promize_section_id)\n        });\n    }\n    /**\n     * save Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n        saveTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.promize_tab_id] || {};\n            tabs[data.promize_tab_id] = {...tabData,...data}\n        }\n        this.setState({tabs});\n    }\n    /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveSubTabToState(data){\n        let {tabs} = this.state;\n        if(data){\n            let tabData = tabs[data.parent_tab_id] || {};\n            if(tabData.promize_sub_tabs == undefined){\n                tabData.promize_sub_tabs = []\n            }\n            tabData.promize_sub_tabs.push(data);\n            tabs[data.parent_tab_id] = {...tabData}\n        }\n        this.setState({tabs});\n    }\n\n     /**\n     * save sub Tab to tht state\n     * @param {Object} data Data Return from the Create API\n     */\n    deleteAttributeFromTab = (e, promize_attribute_id, tab_id)=>{\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Attribute\";\n        popup.content = 'Do you want to remove this attribute?';\n        popup.submit = () => {\n            this.deleteAttributeFromTabFn(e, promize_attribute_id, tab_id)\n        }\n        this.setState({popup})\n    }\n    deleteAttributeFromTabFn = (e, promize_attribute_id, tab_id) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        let deleteIndex = 0\n        let selectedTab = {\n            ...tabs[parseInt(tab_id)]\n        }\n        let tab_attributes = tabs[parseInt(tab_id)].promize_tab_attributes || tabs[parseInt(tab_id)].tab_attribute;\n        if(tab_attributes){\n            tab_attributes.map((tab_attr, index)=>{\n                if(tab_attr.promize_attribute_id == promize_attribute_id){\n                    deleteIndex = tab_attr.promize_tab_attribute_id\n                    let obj = {\n                        ids : [tab_attr.promize_tab_attribute_id],\n                        modelName:\"promize_tab_attribute\",\n                        idKey:\"promize_tab_attribute_id\",\n                    }\n                    this.props.dispatch(deleteRecord(obj))\n                }\n            })\n        }\n       deleteIndex && delete selectedTab.tab_attribute[deleteIndex]\n        tabs[parseInt(tab_id)] = selectedTab\n        this.setState({tabs});\n    }\n    /**\n     * save tab attribute to state\n     * @param {Object} data Data Return from the Create API\n     */\n    saveTabAttributeToState(data){\n        let {tabs} = this.state;\n        if(data && data.promize_tab_attribute_id && data.promize_tab_id){\n            let tab = tabs[data.promize_tab_id] || {};\n            tab.promize_tab_attributes = tab.promize_tab_attributes || [];\n            tab.tab_attribute = tab.tab_attribute || {};\n            let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n            tab.tab_attribute[data.promize_tab_attribute_id] = {\n                ...data,\n                ...attributeData\n            }\n           tab.promize_tab_attributes.push(tab.tab_attribute[data.promize_tab_attribute_id])\n            tabs[data.promize_tab_id] = tab\n            this.setState({tabs},()=>{\n                let tabAttributeValues = []\n                let attributeData = this.props.attributes.response.data.find(o => o.promize_attribute_id === data.promize_attribute_id)\n                if(attributeData.promize_attribute_values.length > 0){\n                    attributeData.promize_attribute_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_values_id,\n                        })\n                    })\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeValues(tabAttributeValues))\n                }else if(attributeData.promize_attribute_clipart_values.length > 0){\n                    attributeData.promize_attribute_clipart_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_clipart_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_clipart_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_image_values.length > 0){\n                    attributeData.promize_attribute_image_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_image_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_image_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }else if(attributeData.promize_attribute_text_values.length > 0){\n                    attributeData.promize_attribute_text_values.map((attributeData,index)=>{\n                        tabAttributeValues.push({\n                            promize_tab_attribute_id : parseInt(data.promize_tab_attribute_id),\n                            promize_attribute_values_id : attributeData.promize_attribute_text_values_id,\n                        })\n                    })\n                    let tempObj = {\n                        data : tabAttributeValues,\n                        obj : {modelName : 'promize_tab_text_attribute_values'}\n                    }\n                    tabAttributeValues.length > 0 && this.props.dispatch(linkTabAttributeClipartValues(tempObj))\n                }\n               \n            })\n        }\n    }\n    /**\n     * save section Tab Attribute value\n     * @param {*} data return data from linkTabAttributeValues Api\n     */\n    saveTabAttributeValuesList(data){\n        let {tabs} = this.state\n        if(data){\n            let promize_tab_attribute_id = data[0].promize_tab_attribute_id;\n            Object.keys(tabs).map((key,index)=>{\n                if(tabs[key].tab_attribute && tabs[key].tab_attribute[promize_tab_attribute_id]){\n                    let tab_attribute = tabs[key].tab_attribute[promize_tab_attribute_id] || {};\n                    data.map((value,index)=>{\n                        tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                        if(value.promize_tab_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_clipart_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_clipart_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_image_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_image_attribute_values_id] = {...value}\n                        }else if(value.promize_tab_text_attribute_values_id){\n                            tab_attribute.tab_attribute_values[value.promize_tab_text_attribute_values_id] = {...value}\n                        }\n                    })\n                    tabs[key].tab_attribute[promize_tab_attribute_id] = tab_attribute;\n                    this.setState({tabs})\n                }\n            })\n        }\n    }\n    saveTabAttributeValues(data){\n        let {tabs} = this.state\n        Object.keys(tabs).map((key,index)=>{\n            if(data.promize_tab_attribute_values_id && tabs[key].tab_attribute[data.promize_tab_attribute_id]){\n                let tab_attribute = tabs[key].tab_attribute[data.promize_tab_attribute_id] || {};\n                tab_attribute.tab_attribute_values = tab_attribute.tab_attribute_values || {}\n                if(data.promize_tab_attribute_values_id){\n                    tab_attribute.tab_attribute_values[data.promize_tab_attribute_values_id] = {...data}\n                }\n                tabs[key].tab_attribute[data.promize_tab_attribute_id] = tab_attribute\n                this.setState({tabs})\n            }else if(data.promize_tab_text_attribute_values_id){\n                let promize_tab_attributes = tabs[key].promize_tab_attributes || [];\n                promize_tab_attributes.length > 0 && promize_tab_attributes.map((tab_attr, tab_attr_index)=>{\n                    let promize_attribute_text_values = tab_attr.promize_tab_text_attribute_values || [];\n                    promize_attribute_text_values.length > 0 &&  promize_attribute_text_values.map((text_data, text_index)=>{\n                        if(text_data.promize_tab_text_attribute_values_id == data.promize_tab_text_attribute_values_id){\n                            promize_attribute_text_values[text_index] = {...data}\n                        }\n                    })\n                    promize_tab_attributes[tab_attr_index].promize_attribute_text_values = promize_attribute_text_values\n                })\n                tabs[key].promize_tab_attributes = promize_tab_attributes\n               this.setState({tabs})\n            }else if(data.promize_tab_image_attribute_values_id){\n                let promize_tab_attributes = tabs[key].promize_tab_attributes || [];\n                promize_tab_attributes.length > 0 && promize_tab_attributes.map((tab_attr, tab_attr_index)=>{\n                    let promize_tab_image_attribute_values = tab_attr.promize_tab_image_attribute_values || [];\n                    promize_tab_image_attribute_values.length > 0 &&  promize_tab_image_attribute_values.map((img_data, img_index)=>{\n                        if(img_data.promize_tab_image_attribute_values_id == data.promize_tab_image_attribute_values_id){\n                            promize_tab_image_attribute_values[img_index] = {...data}\n                        }\n                    })\n                    promize_tab_attributes[tab_attr_index].promize_tab_image_attribute_values = promize_tab_image_attribute_values\n                })\n                tabs[key].promize_tab_attributes = promize_tab_attributes\n               this.setState({tabs})\n            }else if(data.promize_tab_clipart_attribute_values_id){\n                let promize_tab_attributes = tabs[key].promize_tab_attributes || [];\n                promize_tab_attributes.length > 0 && promize_tab_attributes.map((tab_attr, tab_attr_index)=>{\n                    let promize_tab_clipart_attribute_values = tab_attr.promize_tab_clipart_attribute_values || [];\n                    promize_tab_clipart_attribute_values.length > 0 &&  promize_tab_clipart_attribute_values.map((clip_data, clip_index)=>{\n                        if(clip_data.promize_tab_clipart_attribute_values_id == data.promize_tab_clipart_attribute_values_id){\n                            promize_tab_clipart_attribute_values[clip_index] = {...data}\n                        }\n                    })\n                    promize_tab_attributes[tab_attr_index].promize_tab_clipart_attribute_values = promize_tab_clipart_attribute_values\n                })\n                tabs[key].promize_tab_attributes = promize_tab_attributes\n               this.setState({tabs})\n            }\n        })\n    }\n    saveTabImage(data){\n        let {currnetTabId,tabs} = this.state\n        if(currnetTabId && tabs[currnetTabId]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[currnetTabId].promize_tab_id,tab_icon:data.path}))\n        }\n        this.setState({currnetTabId: ''})\n    }\n    /**\n     * Create Tab\n     * @param {HtmEvent | Object} e \n     */\n    createTab(e,sectIndex){\n        let {tab} = this.state\n        this.props.dispatch(saveTab({...tab,promize_section_id:sectIndex}))\n    }\n    /**\n     * add section\n     */\n    addSection() {\n        this.setState({editSection:{show:false}})\n        this.props.dispatch(saveSection({\n            promize_customizer_id: this.props.state.fields.promize_customizer_id,\n            section_name: \"Section Name\",\n            sort_id:1\n        }))\n    }\n    /**\n     * Update the tab attribute values\n     * @param {object} data \n     */\n    updateTabAttributeValues(data,type){\n        if(type == \"text\"){\n            this.props.dispatch(saveTabAttributeTextValues({\n                ...data\n            }))\n        }else{\n            this.props.dispatch(saveTabAttributeValues({\n                ...data\n            }))\n        }\n        \n    }\n    /**\n     * Update Tab Images\n     * @param {HtmlEvent | Object} e Html Element\n     * @param {string} fieldName Field Name\n     */\n    updateTabImages(data){\n        let {tabs} = this.state\n        if(data && tabs){\n            tabs[data.promize_tab_id] = {\n                ...tabs[data.promize_tab_id],\n                ...data\n            }\n            this.setState({tabs})\n            this.props.dispatch(saveTab({...data}))\n        }\n    }\n    onChangeHandler = (e)=>{\n        e.preventDefault()\n        let {tabs} = this.state;\n        let promize_tab_id = e.target ? parseInt(e.target.getAttribute('promize_tab_id')) : ''\n        if(promize_tab_id && tabs){\n            let selectedTab = tabs[promize_tab_id] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style.display = e.target.value ? parseInt(e.target.value) : 1;\n            selectedTab = {\n                ...tabs[promize_tab_id] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[promize_tab_id] = selectedTab\n            this.setState({tabs})\n            this.props.dispatch(saveTab(tabs[promize_tab_id]))\n        }\n    }\n    /**\n     * On Drag Start\n     * @param {Event | Object} ev event object from the Drag\n     * @param {Object} item The drag Item\n     * @param {number} reorder Reorder number\n     */\n    onDragStart = (ev, item, reorder) => {\n        ev.dataTransfer.setData(\"id\", item[\"promize_attribute_id\"]);\n        ev.dataTransfer.setData(\"reorder\", reorder);\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    /**\n     * On Drop\n     * @param {Event | Object} ev event object from the Drag\n     * @param {number} sectIndex Index of the section\n     * @param {number} dropIndex Index of the drop positon \n     */\n    onDrop = (ev, sectIndex, dropIndex) => {\n        let id = ev.dataTransfer.getData(\"id\");\n        if(dropIndex != null && sectIndex != null){\n            this.props.attributes.response.data.map((data, index) => {\n                if(data.promize_attribute_id == id) this.addAttributeToTab(ev, data, sectIndex, dropIndex);\n            });\n        }\n        this.setState({ highlight: false });\n    };\n    /**\n     * add Tab to section\n     * \n     * @param {HtmlEvent | Object} e Html Event link click\n     * @param {number} tabdata Tab data\n     * @param {number} sectIndex section index\n     */\n    addTabToSection(e, tabdata, sectIndex) {\n        e.preventDefault();\n        let sections = this.state.sections;\n        if (sections[sectIndex].tabs == undefined) {\n            sections[sectIndex].tabs = [];\n        }\n        let selectedTabs = sections[sectIndex].tabs;\n        selectedTabs.push(tabdata);\n        sections[sectIndex].tabs = selectedTabs;\n        this.setState({ sections });\n    }\n    addAttributeToTab(e, tabdata, sectIndex, dropIndex){\n        e.preventDefault();\n        this.props.dispatch(saveTabAttribute({\n            promize_tab_id: dropIndex,\n            promize_attribute_id: tabdata.promize_attribute_id,\n            sort_id: 1\n        }))\n    }\n    /**\n     * Tab Drag Start\n     * @param {Event | Object} ev Event Obect\n     * @param {Object} item Tab promize attribute\n     * @param {Object} startIndex Start Index\n     */\n    onTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"startIndex\", startIndex);\n        ev.dataTransfer.setData(\"key\", \"tab\")\n        ev.dataTransfer.effectAllowed = \"copy\";\n        //this.openTab(ev, '', '');\n    }\n    onTabDragEnter = (ev, dropIndex, sectIndex) =>{\n       // ev.preventDefault();\n        ev.target.style['background'] = '';\n       // $(ev.target).removeClass(\"drag-effect\"); \n    }\n    onTabDragOver  = (ev, dropIndex, sectIndex) => {\n       // ev.preventDefault();\n        if(ev.target.getAttribute('class') == \"promize-widget-header\"){\n            ev.target.style['background'] = 'lightblue';\n        }\n       // $(ev.target).addClass(\"drag-effect\"); \n       ev.dataTransfer.effectAllowed = \"copy\";\n       \n    };\n    onTabDrop = (ev, dropIndex, sectIndex) => {\n        ev.target.style['background'] = '';\n        //$(ev.target).removeClass(\"drag-effect\"); \n        let startIndex = ev.dataTransfer.getData(\"startIndex\");\n        let key = ev.dataTransfer.getData(\"key\");\n        if(key && key == 'tab'){\n            let tabs = [], othertabs = [], tabsObject = {};\n            let tabState = this.state.tabs;\n            Object.keys(tabState).map((key, index)=>{\n                if(parseInt(tabState[key].promize_section_id) == parseInt(sectIndex) && tabState[key].is_sub_tab == 0){\n                    tabs.push(tabState[key])\n                }else{\n                    othertabs.push(tabState[key])\n                }\n            })\n            let list = tabs.sort((a, b)=>{\n                return a.sort_id - b.sort_id\n            })\n            let orderedTabs = this.reorderTabInSection(list, parseInt(startIndex), parseInt(dropIndex));\n            let Obj = {\"data\" : orderedTabs,\n                \"obj\" : {modelName:\"promize_tab\", idKey:\"promize_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            orderedTabs.length > 0 && orderedTabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            othertabs.length > 0 && othertabs.map((data, index)=>{\n                tabsObject[data.promize_tab_id] = data;\n            })\n            this.setState({tabs : tabsObject});\n        }\n    };\n\n    onSubTabDragStart = (ev, item, startIndex) => {\n        ev.dataTransfer.setData(\"subTabStartIndex\", startIndex);\n        ev.dataTransfer.setData(\"subTabkey\", \"subtab\")\n        ev.dataTransfer.effectAllowed = \"copy\";\n    }\n    onSubTabDragOver = ev => {\n       // ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"copy\";\n    };\n    onSubTabDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"subTabStartIndex\");\n        let key = ev.dataTransfer.getData(\"subTabkey\");\n        let list = '';\n        if(key && key == 'subtab'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_sub_tabs\n            let orderedAttributes = this.reorderAttributeInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_sub_tabs = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_sub_tab\", idKey:\"promize_sub_tab_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n    };\n\n    onAttributeDragStart = (ev, item, startIndex) => {\n         ev.dataTransfer.setData(\"keyval\", \"attribute\")\n         ev.dataTransfer.setData(\"attrStartIndex\", startIndex);\n         ev.dataTransfer.effectAllowed = \"copy\";\n     }\n     onAttributeDragOver = ev => {\n       //  ev.preventDefault();\n         ev.dataTransfer.dropEffect = \"copy\";\n     };\n     onAttributeDrop = (ev, dropIndex, sectIndex, tabIndex) => {\n        let startIndex = ev.dataTransfer.getData(\"attrStartIndex\"); \n        let key = ev.dataTransfer.getData(\"keyval\");\n        let list = '';\n        if(key && key == 'attribute'){\n            let tabs = [];\n            let tabState = this.state.tabs;\n            list = tabState[tabIndex].promize_tab_attributes\n            let orderedAttributes = this.reorderSubTabInTab(list, parseInt(startIndex), parseInt(dropIndex)); \n            tabState[tabIndex].promize_tab_attributes = orderedAttributes\n            let Obj = {\"data\" : orderedAttributes,\n                \"obj\" : {modelName:\"promize_tab_attribute\", idKey:\"promize_tab_attribute_id\"}}\n            this.props.dispatch(updateBulkRecord(Obj));\n            this.setState({tabs});\n        }\n     };\n    /**\n     * Add Suby Tab to the Tab\n     * @param {Html | Object} e Html Event link click \n     */\n    addSubTabToTab(e) {\n        e.preventDefault();\n        let sectIndex = this.state.subTabIndex.sectIndex;\n        let tabIndex = this.state.subTabIndex.tabIndex;\n        let sections = this.state.sections;\n        let subtabs = this.state.selectedSubTabs;\n        if (sections[sectIndex].tabs[tabIndex].sub_tabs == undefined) {\n            sections[sectIndex].tabs[tabIndex].sub_tabs = [];\n        }\n        let selectedsub_tabs = sections[sectIndex].tabs[tabIndex].sub_tabs;\n        this.props.attributes.response.data.map((data, index) => {\n            if (subtabs.includes(data.promize_attribute_id)) {\n                selectedsub_tabs.push(data);\n            }\n        });\n        sections[sectIndex].tabs[tabIndex].sub_tabs = selectedsub_tabs;\n        this.setState({ sections, selectedSubTabs: [] });\n        this.closeTabSelectionPopup(e);\n    }\n    /**\n     * Reorder Tab in section\n     * @param {Array} list Reorder List\n     * @param {number} startIndex Start Index\n     * @param {number} endIndex End Index\n     * @returns {Array} result of the reorder\n     */\n    reorderTabInSection(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        result = result.filter(function (obj) {\n            return obj.is_sub_tab !== 1;\n        });\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            if(data.is_sub_tab != 1){\n                counter = counter+ 1\n                data.sort_id = counter;\n            }\n        })\n        return result;\n    }\n    reorderSubTabInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            counter = counter+ 1\n            data.sort_id = counter;\n        })\n        return result;\n    }\n\n    reorderAttributeInTab(list, startIndex, endIndex) {\n        let result = Array.from(list);\n        let counter = 0;\n        const [removed] = result.splice((startIndex-1), 1);\n        result.splice((endIndex-1), 0, removed);\n        result.map((data, index)=>{\n            delete data.created_date;\n            delete data.updated_date;\n            data.sort_id = counter;\n            counter = counter+ 1\n        })\n        return result;\n    }\n\n    /**\n     * delete Tab from the section\n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    deleteTabFromsection(tabIndex, sectIndex, parentTabId) {\n        let popup = {};\n        const {tabs} = this.state;\n        popup.title = \"Remove Tab\";\n        popup.content = 'Do you want to remove this tab?';\n        popup.submit = e => {\n            this.deleteTabFromsectionFn(tabIndex, sectIndex, parentTabId, tabs)\n        }\n        this.setState({popup})\n    }\n    deleteTabFromsectionFn = (tabIndex, sectIndex, parentTabId, tabs) => {\n        let obj = {\n            ids : [tabIndex],\n            modelName:\"promize_tab\",\n            idKey:\"promize_tab_id\",\n        }\n        if(tabs[tabIndex].is_sub_tab && tabs[parentTabId.promize_tab_id].promize_sub_tabs){\n        tabs[parentTabId.promize_tab_id].promize_sub_tabs = tabs[parentTabId.promize_tab_id].promize_sub_tabs.filter((data)=>{\n            return data.child_tab_id != tabIndex\n        })\n        }\n        delete tabs[tabIndex]\n        this.props.dispatch(deleteRecord(obj))\n        this.setState({tabs});\n    }\n    /**\n     * Open Tab Index\n     * @param {HtmlEvent | Object } e \n     * @param {number} tabIndex Index of the Tab\n     * @param {number} sectIndex Index of the Section\n     */\n    openTab(e, tabIndex, sectIndex) {\n      //  e.preventDefault();\n        let tab = this.state.openTab;\n        if (parseInt(tab.tabIndex) !== parseInt(tabIndex)) {\n            tab.sectIndex = parseInt(sectIndex);\n            tab.tabIndex = parseInt(tabIndex);\n        } else {\n            tab.sectIndex = '';\n            tab.tabIndex = '';\n        }\n        this.setState({ openTab: tab });\n\n    }\n    /**\n     * Open Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of the section\n     * @param {number} tabIndex Index of the tab\n     */\n    openTabSelectionPopup(e, tabData, sectIndex, tabIndex) {\n        let {tab}  = this.state\n        e.preventDefault();\n        let obj ={\n            ...tab,\n            is_sub_tab : 1,\n            promize_section_id : parseInt(tabData.sectIndex)\n        }\n        this.setState({parentTabId : parseInt(tabData.tabIndex)},()=>{\n            this.props.dispatch(saveTab(obj));\n        })\n        // let subTabIndex = this.state.subTabIndex;\n        // subTabIndex.sectIndex = sectIndex;\n        // subTabIndex.tabIndex = tabIndex;\n        // this.setState(subTabIndex);\n        // $('.promize-modal-cover-tab-selection').show();\n    }\n    /**\n     * Close Tab Selection Popup\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    closeTabSelectionPopup(e) {\n        e.preventDefault();\n        $('.promize-modal-cover-tab-selection').hide();\n    }\n    /**\n     * Select Sub tab\n     * @param {HmltEvent | Object} e Html Event Object\n     */\n    selectedSubtab(e) {\n        e.preventDefault();\n        let subTabs = this.state.selectedSubTabs;\n        subTabs.push(parseInt(e.target.id));\n        this.setState({ selectedSubTabs: subTabs });\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetTabPositionPopup(e, data) {\n        e.preventDefault();\n        this.setState({setTabPosition:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n     /**\n     * Open Set Boundary Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} Data Option Data Object\n     */\n    openSetBoundaryPopup(e, data) {\n        e.preventDefault();\n        this.setState({setBoundary:{\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Open Set Position Popup\n     * @param {HtmlEvent | Object} e Html Event Object\n     * @param {Object} tabData Tab Data Object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of tab\n     * @param {Object} optionData Option Data Object\n     */\n    openSetOptionPositionPopup(e, data) {\n        e.preventDefault();\n        let setOptionPosition = this.state.setOptionPosition\n        this.setState({setOptionPosition:{\n            ...setOptionPosition,\n            show:true,\n            data:{\n                ...data\n            }\n        }})\n    }\n    /**\n     * Close popup\n     * @param {Html | Object} e \n     */\n    closePopup(e) {\n        e && e.preventDefault();\n        this.setState({setOptionPosition:{\n            show:false,\n            data:{}\n        },setTabPosition:{\n            show:false,\n            data:{}\n        },setBoundary:{\n            show:false,\n            data:{}\n        },popup: false})\n    }\n    /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleFieldBlur(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:e.target.value}))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleFieldChange(e, fieldName, tabIndex){\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = e.target.value;\n            this.setState({tabs});\n        }\n    }\n        /**\n     * Handle Filed Blur\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     */\n    handleStyleFieldBlur = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.props.dispatch(saveTab(tabs[tabIndex]))\n        }\n    }\n    /**\n     * Handle the file changes\n     * @param {HtmlEvent | Object} e Html Elemet\n     * @param {string} fieldName Field Name\n     * @param {number} tabIndex Tab Index\n     */\n    handleStyleFieldChange = (e, fieldName, tabIndex) => {\n        e.preventDefault();\n        let {tabs} = this.state;\n        if(tabs[tabIndex]){\n            let selectedTab = tabs[tabIndex] \n            let style = selectedTab.tab_style ? JSON.parse(selectedTab.tab_style) : {display:1, height:50, width:50}\n            style[fieldName]  = e.target.value ? parseInt(e.target.value) : null;\n            selectedTab = {\n                ...tabs[tabIndex] ,\n                tab_style : JSON.stringify(style)\n            }\n            tabs[tabIndex] = selectedTab\n            this.setState({tabs})\n        }\n    }\n    /**\n     * Handler Switch Change\n     * @param {Html | Object} e \n     * @param {string} fieldName \n     * @param {number} tabIndex \n     */\n    handleSwitchChange(e, fieldName, tabIndex){\n       // e.preventDefault();\n        let {tabs} = this.state\n        let value = false;\n        if(e.target.checked){\n            value = true\n        }\n        let checkedVal = value ? 1 : 0\n        if(tabs[tabIndex]){\n            tabs[tabIndex][fieldName] = value;\n            this.setState({tabs},()=>{\n                this.props.dispatch(saveTab({promize_tab_id:tabs[tabIndex].promize_tab_id,[fieldName]:checkedVal}))\n            });\n        }\n    }\n\n    /**\n     * \n     * @param {Object} tabData Tab Data\n     * @param {number} sectIndex Index of the section\n     * @param {*} tabIndex Index of the section\n     */\n    actionButtons(tabData, sectIndex, tabIndex, parentTabData) {\n        return (<React.Fragment>\n            {!parentTabData && <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openTabSelectionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Add Subtab\">\n                    <i className=\"fa fa-folder-open\"></i><span class=\"promize-btn-description\">Add Sub-Tab</span>\n                </button>\n            </li>}\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.openSetTabPositionPopup(e, {tabData, sectIndex, tabIndex}) }} title=\"Set Tab Position\">\n                    <i className=\"fa fa-image\"></i><span class=\"promize-btn-description\">Tab Image</span>\n                </button>\n            </li>\n            <li>\n                <button className=\"btn btn-tbl\" onClick={(e) => { this.deleteTabFromsection(parseInt(tabIndex), parseInt(sectIndex),parentTabData) }} title=\"Delete\">\n                    <i className=\"fa fa-trash-alt\"></i><span class=\"promize-btn-description\">Remove</span>\n                </button>\n            </li>\n        </React.Fragment>\n        )\n    }\n    /**\n     * tab Selection Popup\n     */\n    tabSelectionPopup() {\n        return (<div className=\"promize-modal-cover-tab-selection\" style={{ \"display\": \"none\" }}>\n            <div className=\"promize-modal modal-sm\">\n                <div className=\"promize-modal-header\">\n                    <h3 className=\"modal-title\">\n                        <span>\n                            Select Sub-Tabs\n                    </span>\n                    </h3>\n                </div>\n                <div className=\"promize-modal-body\">\n                    <div className=\"promize-options\">\n                        <Search />\n                        <div className=\"promize-dragable-container\">\n                            {(this.props.attributes.response.data != undefined) &&\n                                <CheckBox {...this.props}\n                                    currentComponent={this}\n                                    dataList={this.props.attributes.response.data}\n                                    fieldName={'TabList'}\n                                    value={this.state.selectedSubTabs}\n                                    onChangeHandler={this.selectedSubtab}\n                                    labelName={\" \"}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-modal-footer df df-end\">\n                    <button className=\"btn btn-promize-secondary\" onClick={(e) => { this.closeTabSelectionPopup(e) }}>Cancel</button>\n                    <button className=\"btn btn-promize-primary\" onClick={(e) => { this.addSubTabToTab(e) }}>Submit</button>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    setCurrentTab(currnetTabId){\n        this.setState({currnetTabId})\n    }\n    /**\n     * \n     * @param {Object} tabData Tab Data object\n     * @param {number} sectIndex Index of section\n     * @param {number} tabIndex Index of Tab\n     */\n    addSelectedtab(tabData, sectIndex, tabIndex, indexVal) {\n        if (tabData.is_sub_tab == 1) {\n            return ''\n        }\n        return <Tabs key={tabIndex} {...this.props} indexVal={indexVal} onDrop={this.onDrop} onTabDragStart={this.onTabDragStart} onTabDragOver={this.onTabDragOver} onTabDragEnter={this.onTabDragEnter}  onTabDrop={this.onTabDrop} onSubTabDragStart={this.onSubTabDragStart} onSubTabDragOver={this.onSubTabDragOver} onSubTabDrop={this.onSubTabDrop} onAttributeDragStart={this.onAttributeDragStart} onAttributeDragOver={this.onAttributeDragOver} onAttributeDrop={this.onAttributeDrop} tabData={tabData} sectIndex={sectIndex} tabIndex={tabIndex} state={this.state} actionButtons={this.actionButtons} openTab={this.openTab} deleteAttributeFromTab={this.deleteAttributeFromTab} onChangeHandler={this.onChangeHandler} handleFieldBlur={this.handleFieldBlur} handleFieldChange={this.handleFieldChange} handleStyleFieldChange={this.handleStyleFieldChange} handleStyleFieldBlur={this.handleStyleFieldBlur} handleSwitchChange={this.handleSwitchChange} setCurrentTab={this.setCurrentTab} displayNoData={this.displayNoData} openSetOptionPositionPopup={this.openSetOptionPositionPopup} openSetBoundaryPopup={this.openSetBoundaryPopup} selectedTabsList={this.selectedTabsList} tabThumbnailImages = {this.tabThumbnailImages} />\n    }\n    /**\n     * Select Tab \n     * @param {Object} tabData Tab data Object\n     * @param {number} sectIndex Index Section\n     * @param {*} tabIndex Index of tab\n     * @param {*} subTabIndex Index of subtab\n     */\n    selectedTabsList(tabData, sectIndex, tabIndex, subTabIndex) {\n        return <div key={subTabIndex} className=\"promize-dragable-tab-container mr-10\" >\n            <div className=\"promize-widget mb-10\">\n                <div className=\"promize-widget-header\">\n                    <h3 className=\"promize-widget-title\">\n                        {tabData.attribute_name}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    }\n    editSection = (id,keyData) =>{\n        let sectionX = this.sectionRefs[keyData].getBoundingClientRect().x || 0\n        let sectionWrapperX = this.refs[\"sectionWrapper\"].getBoundingClientRect().x || 0\n        let sectionEdit = this.state.sections[id]\n        let x = sectionX - sectionWrapperX \n        this.setState({editSection:{show:true,data:{section_id:id,section:sectionEdit,x}}})\n    }\n    sectionEdit = e => {\n        const editSection = this.state.editSection\n        const section = editSection.data.section\n        editSection.data.section = {...section,\n            section_name: e.target.value || \"\"\n        }\n        this.setState({editSection:{...editSection}})\n    }\n    saveSectionEdit = (e,editSection) => {\n        toastr.success(\"Section Name Updated\");\n        this.props.dispatch(saveSection({\n            promize_section_id:editSection.data.section.promize_section_id, \n            section_name:editSection.data.section.section_name\n        }))\n        this.setState({editSection:{show:false}})\n    }\n    sectionDelete = (e,editSection) => {\n        let popup = {};\n        popup.title = \"Remove Section\";\n        popup.content = 'Do you want to remove this section?';\n        popup.submit = () => {\n            this.sectionDeletefn(e,editSection)\n        }\n        this.setState({popup})\n    }\n    sectionDeletefn = (e,editSection) => {\n        const {sections} = this.state;\n        let sectionIndex = editSection.data.section.promize_section_id\n        let obj = {\n            ids : [sectionIndex],\n            modelName:\"promize_section\",\n            idKey:\"promize_section_id\",\n        }\n        delete sections[sectionIndex]\n        this.props.dispatch(deleteRecord(obj))\n        let activeSectionId = Object.keys(sections)[0]\n        this.setState({sections,activeSectionId,editSection:{show:false}});\n    }\n    /**\n     * Add section area\n     */\n    addSectionArea() {\n        const {sections,tabs,editSection} = this.state;\n        let {activeSectionId} = this.state;\n        let counter = 0\n        let tabsArray = []\n        if(tabs){\n            tabsArray = Object.entries(tabs).sort(function(a, b) {\n                return a[1].sort_id - b[1].sort_id;\n             })\n        }\n        let sectionRows,activeSection;\n        if(!activeSectionId && sections){\n            activeSectionId = Object.keys(sections)[0]\n        }\n        activeSection = sections[activeSectionId]\n        if (Object.keys(sections).length > 0) {\n            sectionRows = <React.Fragment>\n                <div className=\"promize-prdt-section-container mb-15\" ref=\"sectionContainer\">\n                    <ul className=\"promize-prdt-section-list\" style={{width:(this.state.sectionWrapperWidth?this.state.sectionWrapperWidth+\"px\":\"100%\")}} ref=\"sectionWrapper\">\n                        {Object.keys(sections).map((keyData, sectIndex) => {\n                            let data = sections[keyData];\n                            return <li className={keyData == activeSection.promize_section_id && \"active\"} ref={ref => this.setRef(ref,keyData)}>\n                                <div className=\"promize-section-name\" onClick={(e)=>{e.preventDefault();this.setState({activeSectionId:keyData})}}>\n                                    <span className=\"edit-icon\" onClick={e => this.editSection(keyData,keyData)}><i className=\"fa fa-pencil-alt\"></i></span>\n                                    <span>{data.section_name}</span>\n                                    <span className=\"promize-section-status active\"></span>\n                                </div>\n                            </li>                      \n                        })}\n                    </ul>\n                    <div className=\"pormize-abs-rght\" ref=\"sectionAddBtn\">\n                        <button className=\"btn btn-links\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                    </div>\n                    {editSection.show && <div className=\"promize-card promize-card-edit\" style={{left:editSection.data.x+\"px\"}}>\n                    <div className=\"promize-card-body\">\n                            <Input\n                                form={this.section}\n                                fieldName={'section_name'}\n                                value={editSection.data.section.section_name}\n                                labelName={\"Section Name\"}\n                                validation={false}\n                                onChange={this.sectionEdit}\n                            />\n                            <div className=\"df df-end\">\n                                {Object.keys(sections).length > 1 && <button className=\"btn btn-promize-secondary\" onClick={e => this.sectionDelete(e,editSection)}><i className=\"fa fa-trash\"></i> Remove</button>}\n                                <button className=\"btn btn-promize-primary\" onClick={e => this.saveSectionEdit(e,editSection)}>Save</button>\n                            </div>\n                            \n                    </div>\n                </div>}\n                </div>\n                {activeSection &&\n                    <div className=\"promize-dragable-container \">\n                        {tabsArray && tabsArray.length > 0 &&\n                            tabsArray.map((tabKey, tabIndex) => {\n                            if(tabKey[1].promize_section_id == activeSection.promize_section_id){\n                                if(tabKey[1].is_sub_tab == 1) return ''\n                                counter = counter +1\n                                return this.addSelectedtab(tabKey[1], activeSection.promize_section_id, tabKey[0], counter)\n                            }\n                        })}\n                    \n                        <div className=\"text-right\">\n                            <button onClick={(e)=>this.createTab(e,activeSection.promize_section_id)} className=\"btn btn-promize-primary\">Add Tab</button>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        } else {\n            sectionRows = <React.Fragment>\n                <div>\n                    <button className=\"btn btn-rnd\" onClick={(e) => this.addSection()}><i className=\"fa fa-plus\"></i> Add Section</button>\n                </div>\n                {this.displayNoData(\"No Sections available\")}\n            </React.Fragment>\n        }\n        return sectionRows;\n    }\n    displayNoData(message) {\n        return <div className=\"promize-no-data\">\n            <img src={noData} />\n            <p className=\"mt-10\">{message}</p>\n        </div>\n    }\n    attributeIcon(type){\n        let icon = 'fa fa-grin-hearts'\n        if(type == 'text'){\n            icon = 'fa fa-font'\n        }else if(type == 'image'){\n            icon = 'fa fa-images'\n        }else if(type == 'option'){\n            icon = 'fa fa-cube'\n        }\n        return <i className={icon}></i>\n    }\n    displayAttributeList() {\n        const {sections,searchText} = this.state;\n        let attributeData = this.props.attributes.response.data\n        if(searchText){\n            attributeData = attributeData.filter((attribute)=>{\n                let name = attribute.attribute_name.toLowerCase()\n                return name.indexOf(searchText.toLowerCase()) !== -1\n            })\n        }\n        return (\n            <div className=\"promize-card\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title\">\n                        <h3>\n                            <span>Attributes List</span>\n                        </h3>\n                        <p className=\"promize-title-subtitle\">Drag and drop attributes to tabs</p>\n                    </div>\n                    <div className=\"promize-sm-card-action df-end\">\n                        <div className=\"tab-links\">\n                            <Link to={\"/attributes/add/\"} className=\"btn btn-links\"><i className=\"fa fa-plus\"></i> Add New</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-card-body\">\n                    <div className=\"promize-options\">\n                        <Search value={searchText} onChange={(e)=>{e.preventDefault();this.setState({searchText:(e.target.value||'')})}}/>\n                        <div className=\"promize-dragable-container mt-15\">\n                            <ul className=\"promize-dragable-list\">\n                                {( attributeData != undefined) &&\n                                    attributeData.map((data, index) => {\n                                        return <li className=\"mb-10\" key={index} draggable onDragStart={e => this.onDragStart(e, data, false)}>\n                                            <div className={\"dragable-items df ind\" + index}>\n                                                <div className=\"option-action\">\n                                                    <button className=\"option-btn\">\n                                                        <i className=\"fa fa-bars\"></i>\n                                                    </button>\n                                                </div>\n                                                <div className=\"option-name df-al-center pl-10 wd-100\">\n                                                    {this.attributeIcon(data.attribute_type)}{data.attribute_name}<Link to={\"/attributes/edit/\" + data.promize_attribute_id} ><i className=\"fa fa-eye\"></i></Link>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    })}\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"promize-footer-actions\">\n                </div>\n            </div>\n        )\n    }\n    saveData(){\n        toastr.success(\"Records saved successfully\");\n        this.props.history.push('/products');\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"promize-page-title-wrapper df-sp-btwn\">\n                <h3 className=\"promize-page-title\">{this.props.state.fields.promize_customizer_name}</h3>\n                <button className=\"btn btn-promize-primary\" onClick={(e) => { this.saveData() }}>Save</button>\n            </div>\n            <div className=\"promize-row df\">\n                <div className=\"wd-70 mr-15\">\n                    {/* <div>{this.tabSelectionPopup()}</div> */}\n                        {this.state.setOptionPosition.show && <SetOptionPosition {...this.state} {...this.props} closePopup={this.closePopup} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                        {this.state.setTabPosition.show && <SetTabPosition   {...this.state} {...this.props} closePopup={this.closePopup} imageForm={this.tabImages} updateTabImages={this.updateTabImages}/>}\n                        {this.state.setBoundary.show && <SetBoundary   {...this.state} {...this.props} closePopup={this.closePopup} updateTabAttributeValues={this.updateTabAttributeValues}/>}\n                    <div> {this.addSectionArea()}</div>\n                </div>\n                <div className=\"wd-30 promize-sticky-20\">\n                    {this.displayAttributeList()}\n                </div>\n            </div>\n            {this.state.popup && <Popup {...this.state.popup} submitButton=\"Remove\" cancel={this.closePopup}/>}\n        </React.Fragment>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        attributes: state.attributes,\n        section: state.section,\n        tab: state.tab,\n        subTab: state.subTab,\n        tabAttribute: state.tabAttribute,\n        tabAttributevalues: state.tabAttributevalues,\n        tabAttributevalueslist: state.tabAttributevalueslist,\n        tabThumbnailImage: state.tabThumbnailImage\n    };\n}\n\n\nexport default connect(mapStateToProps)(SectionForms);","import React, { Component } from 'react';\nimport toastr from 'toastr';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Forms, { initialState, validation } from './Forms';\nimport SectionForms, { sectionvalidation } from './sectionForm';\nimport { save, uploadBaseImage, saveSection } from '../../actions/products';\nimport Switchtoggle from '../../components/form/switchtoggle';\nimport Form from '../../utility/Form';\nimport {uid} from 'react-uid';\nimport {generateUnqId} from './../../utility/Utility'\n\nclass Add extends Component {\n    constructor(props) {\n        super(props);\n        this.isEdit = false;\n        this.state = initialState();\n        this.initialState = initialState();\n        this.state.openSection = false;\n        this.state.sections = {\n            promize_customizer_id: '',\n            section_name: '',\n            sort_id: '',\n            \"status\": true,\n        }\n        this.saveView = this.saveView.bind(this)\n        const formValidation = validation(props);\n        const sectValidation = sectionvalidation(props);\n\n        this.product = Form.getInstance(\n            this, formValidation,\n            (fields) => {\n                this.props.dispatch(save(fields))\n            },\n            (views) => {\n                this.props.dispatch(uploadBaseImage(views, 'base_image', 'imageUpload'))\n            },\n            {}\n        );\n        this.section = Form.getInstance(\n            this, sectValidation,\n            () => {\n                this.props.dispatch(saveSection(this.state.sections))\n            },\n            {},\n            {}\n        );\n    }\n    /**\n    * save the view data\n    * @param {object} view \n    */\n    saveView = (view) => {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        model_image.push({...view,\n            id: generateUnqId()\n        })\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n    /**\n     * \n     * @param {number} id \n     * @param {object} view \n     */\n    updateView = (id,view) => {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        var index = _.findIndex(model_image, {id: id});\n        model_image.splice(index, 1, view);\n        this.setState({fields: {\n            ...fields,\n                model_image: model_image\n            }\n        })\n    }\n    /**\n     * Delete the Model Image\n     * @param {number} id \n     */\n    deleteView = (id) => {\n        let {fields} = this.state;\n        let {model_image} = fields;\n        _.remove(model_image,function(n) {\n            return n.id == id;\n        })\n        const newObj = {\n            ...fields,\n            model_image: model_image\n        }\n        this.setState({ fields: newObj})\n    }\n    componentWillReceiveProps(newProps) {\n        if (!newProps.product.isFetching && !newProps.product.isError) {\n            let fields = this.state.fields;\n            const newObj = Object.assign({}, fields, {\n                promize_customizer_id: newProps.product.response.records.promize_customizer_id\n            });\n            this.setState({ fields: newObj,openSection:true },()=>{\n                toastr.success(\"Product \" + fields.promize_customizer_name + \" was created successfully\")\n            })\n        }\n    }\n\n    render() {\n        const { product ,section } = this.props;\n        return <React.Fragment>\n            {!this.state.openSection && <div className=\"promize-card\">\n                <div className=\"promize-card-header\">\n                    <div className=\"promize-card-title mb-10\">\n                        <h3>\n                            <span>Add New Product</span>\n                        </h3>\n                    </div>\n                    <div className=\"promize-card-action df-end\">\n                        <Switchtoggle {...this.state}\n                            labelName={'Status'}\n                            fieldName={'status'}\n                            dataName={'status'}\n                            id={1}\n                            value={this.state.fields.status}\n                            spanLabel={{ first: \"Active\", second: \"Inactive\" }}\n                            checkValue={{ first: true, second: false }}\n                            validation={false}\n                            form={this.section} />\n                    </div>\n                </div>\n                <Forms {...this.props} currentComponent={this} saveView={this.saveView} updateView={this.updateView} deleteView={this.deleteView} form={this.product} product={product} state={this.state} reset={this.initialState} isEdit={false} />\n            </div>}\n            {this.state.openSection && <SectionForms {...this.props} currentComponent={this} form={this.section} section={section} state={this.state} isEdit={false} new={true}/>}\n        </React.Fragment>\n    }\n\n}\nfunction mapStateToProps(state) {\n    const { product } = state;\n    return {\n        product\n    };\n}\n\nexport default connect(mapStateToProps)(Add);","module.exports = __webpack_public_path__ + \"static/media/no-data.12573e6e.png\";"],"sourceRoot":""}