{"version":3,"sources":["containers/Attributes/index.jsx"],"names":["Attributes","props","_this","Object","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","displayRows","bind","_var_www_html_productimize_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","state","initialState","grid","Grid","getInstance","currentComponent","url","actionType","ATTRIBUTES","method","filters","domain_id","app","DOMAIN_ID","searchVal","attributes","getRecords","response","data","isFetching","status","setState","isError","type","icon","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_this2","optionRows","_components_grid_NoRecord__WEBPACK_IMPORTED_MODULE_12__","colspan","length","map","option","index","key","attribute_name","attribute_type","_components_form_switchtoggle__WEBPACK_IMPORTED_MODULE_10__","assign","value","fieldName","id","promize_attribute_id","onChange","e","statusUpdate","ATTRIBUTE_STATUS_UPDATE","params","modelName","PKey","spanLabel","first","second","checkValue","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onClick","table","delete","handleToogleModal","idKey","ATTRIBUTE_DELETE","nextProps","setData","_this3","_components_grid_Table__WEBPACK_IMPORTED_MODULE_11__","ref","instance","pageTitle","addButton","managementType","ATTRIBUTE","rowDelete","attributeDelete","sortType","handleColSorting","Component","connect","attributeStatus"],"mappings":"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","file":"static/js/21.6def2f36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Grid from '../../utility/grid';\nimport Switchtoggle from '../../components/form/switchtoggle';\nimport Table from '../../components/grid/Table';\nimport NoRecord from '../../components/grid/NoRecord';\nimport { ATTRIBUTES,ATTRIBUTE,ATTRIBUTE_DELETE,ATTRIBUTE_STATUS_UPDATE } from \"../../utility/constants\";\n\nclass Attributes extends Component {\n\n    constructor(props) {\n        super(props);\n        this.displayRows = this.displayRows.bind(this);\n        this.state = this.initialState();\n        this.grid = Grid.getInstance({currentComponent: this, url: 'getAttributeLists', actionType: ATTRIBUTES, method: 'POST'});\n    }\n    initialState(){\n        return {\n            filters:{\n                domain_id : this.props.app.DOMAIN_ID,\n                searchVal: '',\n            },        \n            attributes: [],\n        }\n    }\n\n    componentDidMount(){\n        this.grid.getRecords();\n    }\n\n    setData(props){\n        const response = props.attributes.response;\n        if(response !== this.props.attributes.response){\n            if(response.data){\n                if(!props.attributes.isFetching && response.status && response.status === 200){\n                    this.setState({attributes: response.data || []});\n                }\n                else if(!props.attributes.isFetching && props.attributes.isError){\n                    this.setState({attributes: []});\n                }\n            }\n        }\n    }\n    attributeIcon(type){\n        let icon = 'fa fa-grin-hearts'\n        if(type == 'text'){\n            icon = 'fa fa-font'\n        }else if(type == 'upload'){\n            icon = 'fa fa-images'\n        }else if(type == 'option'){\n            icon = 'fa fa-cube'\n        }\n        return <i className={icon}></i>\n    }\n    displayRows(){\n        const attributes = this.state.attributes;\n        let optionRows = <NoRecord isFetching={this.props.attributes.isFetching} colspan=\"10\"/>;\n        if(attributes.length > 0){ \n            optionRows = attributes.map((option, index)=>{\n                var status = (option.status == 1) ? true : false;\n                return <tr key={index}>\n                    <td>{option.attribute_name}</td>\n                    <td className=\"txt-captls\">{(option.attribute_type==\"clipart\"?\"clip art\":option.attribute_type)}</td>\n                    <td>\n                        <Switchtoggle  {...this.props}\n                            value={status}\n                            fieldName={'status'}\n                            id={option.promize_attribute_id}\n                            onChange = {(e)=>{this.grid.statusUpdate({url: \"changeStatus\", actionType:ATTRIBUTE_STATUS_UPDATE, params :option,   modelName:\"promize_attribute\", PKey:\"promize_attribute_id\"}, e)}}\n                            spanLabel={{ first: 'Active', second: 'InActive' }}\n                            checkValue={{ first: true, second: false }}\n                        />\n                    </td>                           \n                    <td>\n                        <div className = \"table-actions\">\n                            <NavLink className = \"btn-tbl edit\" to={\"attributes/edit/\"+option.promize_attribute_id}><i className = \"fa fa-pencil-alt\"></i></NavLink>\n                            <button className = \"btn-tbl delete\" onClick={(e) => this.table.delete.handleToogleModal({ id:option.promize_attribute_id, idKey: 'ids', url: 'deleteRecord', modelName:\"promize_attribute\", PKey:\"promize_attribute_id\", actionType: ATTRIBUTE_DELETE}, e)}><i className = \"fa fa-trash-alt\"></i></button>\n                        </div>\n                    </td>\n                </tr>\n            })\n        }\n        return optionRows;\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setData(nextProps);\n    }\n\n    render() {\n\n        return <Table\n                ref={instance => { this.table = instance; }}\n                {...this.props} {...this.state}\n                pageTitle = \"Attributes\"\n                addButton={\n                    <NavLink className=\"btn btn-promize-primary\" to=\"attributes/add\">\n                        <span>{\"Add\"}</span>\n                    </NavLink>\n                }\n                managementType={ATTRIBUTE}\n                grid={this.grid}\n                data={this.props.attributes}\n                rowDelete={this.props.attributeDelete}\n                >\n                    <table className=\"promize-table table-hover table-action\" id=\"fixTable\">\n                        <thead>\n                        <tr>\n                            <th className={(this.grid.sortType) ? (( this.grid.sortType == 'ASC') ? \"sorting-asec\" : \"sorting-desc\") : \"sorting\"} onClick={(e) => this.grid.handleColSorting(e)}>Attribute Name</th>\n                            <th>Attribute Type</th>\n                            <th>Status</th>\n                            <th>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            { this.displayRows() }\n                        </tbody>\n                    </table>\n        </Table>\n    }\n}\n\nexport default connect((state) => {\n    return {\n        attributeStatus: state.attributeStatus,\n        attributeDelete : state.attributeDelete,\n        attributes: state.attributes,\n    };\n})(Attributes);\n"],"sourceRoot":""}